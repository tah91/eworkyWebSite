<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Biblio" xml:space="preserve">
    <value>Library / Museum</value>
  </data>
  <data name="BuisnessCenter" xml:space="preserve">
    <value>Business Center</value>
  </data>
  <data name="CoffeePrice" xml:space="preserve">
    <value>Price of a coffee</value>
    <comment>LocalisationData_Validation</comment>
  </data>
  <data name="CoffeeResto" xml:space="preserve">
    <value>Pub / Restaurant</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="CoworkingSpace" xml:space="preserve">
    <value>Coworking space</value>
  </data>
  <data name="Latitude" xml:space="preserve">
    <value>Latitude</value>
  </data>
  <data name="Post" xml:space="preserve">
    <value>Comment</value>
    <comment>Comment_Validation</comment>
  </data>
  <data name="PostalCode" xml:space="preserve">
    <value>Postcode</value>
  </data>
  <data name="PrivateArea" xml:space="preserve">
    <value>Private space</value>
  </data>
  <data name="PublicSpace" xml:space="preserve">
    <value>Public internet space / cybercafe</value>
    <comment>?</comment>
  </data>
  <data name="SpotWifi" xml:space="preserve">
    <value>WiFi hotspot</value>
    <comment>SearchCriteria</comment>
  </data>
  <data name="TypeValue" xml:space="preserve">
    <value>Type</value>
    <comment>Localisation_Validation</comment>
  </data>
  <data name="WebSite" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="WorkingHotel" xml:space="preserve">
    <value>Incubator / Accelerator</value>
    <comment>?</comment>
  </data>
  <data name="SeminarRoom" xml:space="preserve">
    <value>Caracteristics of conference / seminar rooms</value>
  </data>
  <data name="Mlle" xml:space="preserve">
    <value>Miss</value>
  </data>
  <data name="Mme" xml:space="preserve">
    <value>Mrs</value>
  </data>
  <data name="Mr" xml:space="preserve">
    <value>Mr</value>
  </data>
  <data name="VisioRoom" xml:space="preserve">
    <value>Caracteristics of visioconference / telepresence rooms</value>
  </data>
  <data name="WorkingPlace" xml:space="preserve">
    <value>Services</value>
  </data>
  <data name="SendLocalisationMail" xml:space="preserve">
    <value>Hi, I have just discovered a very nice workplace on eworky.com : {0}. See you soon !</value>
  </data>
  <data name="Adress" xml:space="preserve">
    <value>Number and Street</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Fax" xml:space="preserve">
    <value>Fax</value>
  </data>
  <data name="Hotel" xml:space="preserve">
    <value>Hotel</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Workplace name</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="PublicTransportation" xml:space="preserve">
    <value>Public transports</value>
  </data>
  <data name="RoadAccess" xml:space="preserve">
    <value>Access</value>
  </data>
  <data name="Station" xml:space="preserve">
    <value>Train stations</value>
  </data>
  <data name="Telecentre" xml:space="preserve">
    <value>Smart work center</value>
  </data>
  <data name="TravelerSpace" xml:space="preserve">
    <value>Traveler lounge</value>
    <comment>?</comment>
  </data>
  <data name="RatingDispo" xml:space="preserve">
    <value>Disponibility / calm</value>
  </data>
  <data name="RatingPrice" xml:space="preserve">
    <value>Quality / price ratio</value>
    <comment>?</comment>
  </data>
  <data name="RatingWelcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="RatingWifi" xml:space="preserve">
    <value>WiFi quality</value>
  </data>
  <data name="Rating" xml:space="preserve">
    <value>Global rating</value>
  </data>
  <data name="MeetingRoom" xml:space="preserve">
    <value>Caracteristics of meeting rooms</value>
  </data>
  <data name="WorkCity" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="WorkCountry" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="WorkPostalCode" xml:space="preserve">
    <value>Postcode</value>
  </data>
  <data name="GiveYourAdvice" xml:space="preserve">
    <value>Review this space</value>
  </data>
  <data name="To" xml:space="preserve">
    <value> to </value>
  </data>
  <data name="Bookable" xml:space="preserve">
    <value>Propose online booking</value>
    <comment>?</comment>
  </data>
  <data name="Facebook" xml:space="preserve">
    <value>Facebook</value>
  </data>
  <data name="Twitter" xml:space="preserve">
    <value>Twitter</value>
  </data>
  <data name="Coffee" xml:space="preserve">
    <value>Coffee</value>
  </data>
  <data name="UsefulHandicap" xml:space="preserve">
    <value>Disabled access</value>
    <comment>?</comment>
  </data>
  <data name="FriCloseAfter" xml:space="preserve">
    <value>Closed on friday evening</value>
  </data>
  <data name="FriCloseMorning" xml:space="preserve">
    <value>Closed on friday morning</value>
  </data>
  <data name="FriOpenAfter" xml:space="preserve">
    <value>Open on friday evening</value>
  </data>
  <data name="FriOpenMorning" xml:space="preserve">
    <value>Open on friday morning</value>
  </data>
  <data name="MonCloseAfter" xml:space="preserve">
    <value>Closed on monday evening</value>
  </data>
  <data name="MonCloseMorning" xml:space="preserve">
    <value>Closed on monday morning</value>
  </data>
  <data name="MonOpenAfter" xml:space="preserve">
    <value>Closed on monday evening</value>
  </data>
  <data name="MonOpenMorning" xml:space="preserve">
    <value>Open on monday morning</value>
  </data>
  <data name="SatCloseAfter" xml:space="preserve">
    <value>Closed on saturday evening</value>
  </data>
  <data name="SatCloseMorning" xml:space="preserve">
    <value>Closed on saturday morning</value>
  </data>
  <data name="SatOpenAfter" xml:space="preserve">
    <value>Closed on saturday evening</value>
  </data>
  <data name="SatOpenMorning" xml:space="preserve">
    <value>Open on saturday morning</value>
  </data>
  <data name="SunCloseAfter" xml:space="preserve">
    <value>Closed on sunday evening</value>
  </data>
  <data name="SunCloseMorning" xml:space="preserve">
    <value>Closed on sunday morning</value>
  </data>
  <data name="SunOpenAfter" xml:space="preserve">
    <value>Closed on sunday evening</value>
  </data>
  <data name="SunOpenMorning" xml:space="preserve">
    <value>Open on sunday morning</value>
  </data>
  <data name="ThuCloseAfter" xml:space="preserve">
    <value>Closed on thursday evening</value>
  </data>
  <data name="ThuCloseMorning" xml:space="preserve">
    <value>Closed on thursday morning</value>
  </data>
  <data name="ThuOpenAfter" xml:space="preserve">
    <value>Closed on thursday evening</value>
  </data>
  <data name="ThuOpenMorning" xml:space="preserve">
    <value>Open on thursday morning</value>
  </data>
  <data name="TueCloseAfter" xml:space="preserve">
    <value>Closed on tuesday evening</value>
  </data>
  <data name="TueCloseMorning" xml:space="preserve">
    <value>Closed on tuesday morning</value>
  </data>
  <data name="TueOpenAfter" xml:space="preserve">
    <value>Closed on tuesday evening</value>
  </data>
  <data name="TueOpenMorning" xml:space="preserve">
    <value>Open on tuesday morning</value>
  </data>
  <data name="WedCloseAfter" xml:space="preserve">
    <value>Closed on wednesday evening</value>
  </data>
  <data name="WedCloseMorning" xml:space="preserve">
    <value>Closed on wednesday morning</value>
  </data>
  <data name="WedOpenAfter" xml:space="preserve">
    <value>Closed on wednesday evening</value>
  </data>
  <data name="WedOpenMorning" xml:space="preserve">
    <value>Open on wednesday morning</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DisplayName" xml:space="preserve">
    <value>{0}, {1} to {2}</value>
  </data>
  <data name="SharedOffice" xml:space="preserve">
    <value>Shared offices</value>
  </data>
  <data name="FreeAreas" xml:space="preserve">
    <value>Free space</value>
  </data>
  <data name="OtherTypes" xml:space="preserve">
    <value>Other places</value>
  </data>
  <data name="BookingCom" xml:space="preserve">
    <value>Commission (in %)</value>
  </data>
  <data name="QuotationPrice" xml:space="preserve">
    <value>Price of the quotation</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company name</value>
  </data>
  <data name="CompanyType" xml:space="preserve">
    <value>Company type</value>
  </data>
  <data name="Association" xml:space="preserve">
    <value>Nonprofit organization</value>
  </data>
  <data name="BigCompany" xml:space="preserve">
    <value>Corporation</value>
  </data>
  <data name="Consulting" xml:space="preserve">
    <value>Consulting firm</value>
  </data>
  <data name="CreativeAgency" xml:space="preserve">
    <value>Design agency</value>
  </data>
  <data name="InAssociation" xml:space="preserve">
    <value>in a nonprofit organization</value>
  </data>
  <data name="InBigCompany" xml:space="preserve">
    <value>in a corporation</value>
  </data>
  <data name="InCompany" xml:space="preserve">
    <value>at {0}</value>
  </data>
  <data name="InConsulting" xml:space="preserve">
    <value>in a consulting firm</value>
  </data>
  <data name="InCreativeAgency" xml:space="preserve">
    <value>in a design agency</value>
  </data>
  <data name="Independent" xml:space="preserve">
    <value>Freelancer</value>
  </data>
  <data name="InIndependent" xml:space="preserve">
    <value>Freelancer</value>
  </data>
  <data name="InSmallBusiness" xml:space="preserve">
    <value>in a small business</value>
  </data>
  <data name="InStartUp" xml:space="preserve">
    <value>in a start up</value>
  </data>
  <data name="SmallBusiness" xml:space="preserve">
    <value>Small business</value>
  </data>
  <data name="StartUp" xml:space="preserve">
    <value>Start Up</value>
  </data>
  <data name="Attorney" xml:space="preserve">
    <value>Attorney / Law professional</value>
  </data>
  <data name="Medical" xml:space="preserve">
    <value>Medical practice</value>
  </data>
  <data name="InAttorney" xml:space="preserve">
    <value>in an attorney office</value>
  </data>
  <data name="InMedical" xml:space="preserve">
    <value>in a medical practice</value>
  </data>
  <data name="SendMailToOwner" xml:space="preserve">
    <value>Send a welcome message to this space</value>
  </data>
</root>