<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Biblio" xml:space="preserve">
    <value>Bibliothèque / Musée</value>
  </data>
  <data name="BuisnessCenter" xml:space="preserve">
    <value>Centre d'affaires</value>
  </data>
  <data name="CoffeePrice" xml:space="preserve">
    <value>Prix du café</value>
    <comment>LocalisationData_Validation</comment>
  </data>
  <data name="CoffeeResto" xml:space="preserve">
    <value>Café / Restaurant</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Pays</value>
  </data>
  <data name="CoworkingSpace" xml:space="preserve">
    <value>Espace de coworking</value>
  </data>
  <data name="Latitude" xml:space="preserve">
    <value>Latitude</value>
  </data>
  <data name="Post" xml:space="preserve">
    <value>Commentaire</value>
    <comment>Comment_Validation</comment>
  </data>
  <data name="PostalCode" xml:space="preserve">
    <value>Code Postal</value>
  </data>
  <data name="PrivateArea" xml:space="preserve">
    <value>Lieu privé</value>
  </data>
  <data name="PublicSpace" xml:space="preserve">
    <value>Espace public numérique / Cybercafé</value>
    <comment>?</comment>
  </data>
  <data name="SpotWifi" xml:space="preserve">
    <value>Spot Wifi</value>
    <comment>SearchCriteria</comment>
  </data>
  <data name="TypeValue" xml:space="preserve">
    <value>Type</value>
    <comment>Localisation_Validation</comment>
  </data>
  <data name="WebSite" xml:space="preserve">
    <value>Site Internet</value>
  </data>
  <data name="WorkingHotel" xml:space="preserve">
    <value>Pépinière / Incubateur</value>
    <comment>?</comment>
  </data>
  <data name="SeminarRoom" xml:space="preserve">
    <value>Caractéristiques des salles de conférence / séminaire</value>
  </data>
  <data name="Mlle" xml:space="preserve">
    <value>Mlle</value>
  </data>
  <data name="Mme" xml:space="preserve">
    <value>Mme</value>
  </data>
  <data name="Mr" xml:space="preserve">
    <value>M.</value>
  </data>
  <data name="VisioRoom" xml:space="preserve">
    <value>Caractéristiques des salles de visio / téléprésence</value>
  </data>
  <data name="WorkingPlace" xml:space="preserve">
    <value>Services proposés</value>
  </data>
  <data name="SendLocalisationMail" xml:space="preserve">
    <value>Bonjour, je viens de découvrir un lieu de travail très sympathique sur eWorky.com : {0}. A bientôt !</value>
  </data>
  <data name="Adress" xml:space="preserve">
    <value>N° et Rue</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>Ville</value>
  </data>
  <data name="Fax" xml:space="preserve">
    <value>Fax</value>
  </data>
  <data name="Hotel" xml:space="preserve">
    <value>Hôtel</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nom de l'espace</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Téléphone</value>
  </data>
  <data name="PublicTransportation" xml:space="preserve">
    <value>Transports en commun</value>
  </data>
  <data name="RoadAccess" xml:space="preserve">
    <value>Accès routiers</value>
  </data>
  <data name="Station" xml:space="preserve">
    <value>Gare(s) SNCF</value>
  </data>
  <data name="Telecentre" xml:space="preserve">
    <value>Télécentre</value>
  </data>
  <data name="TravelerSpace" xml:space="preserve">
    <value>Espace voyageurs</value>
    <comment>?</comment>
  </data>
  <data name="RatingDispo" xml:space="preserve">
    <value>Disponibilité / calme</value>
  </data>
  <data name="RatingPrice" xml:space="preserve">
    <value>Rapport qualité / prix</value>
    <comment>?</comment>
  </data>
  <data name="RatingWelcome" xml:space="preserve">
    <value>Accueil</value>
  </data>
  <data name="RatingWifi" xml:space="preserve">
    <value>Qualité du wifi</value>
  </data>
  <data name="Rating" xml:space="preserve">
    <value>Appréciation générale</value>
  </data>
  <data name="MeetingRoom" xml:space="preserve">
    <value>Caractéristiques des salle de réunion / formation</value>
  </data>
  <data name="WorkCity" xml:space="preserve">
    <value>Ville</value>
  </data>
  <data name="WorkCountry" xml:space="preserve">
    <value>Pays</value>
  </data>
  <data name="WorkPostalCode" xml:space="preserve">
    <value>Code postal</value>
  </data>
  <data name="GiveYourAdvice" xml:space="preserve">
    <value>Donnez votre avis</value>
  </data>
  <data name="To" xml:space="preserve">
    <value> à </value>
  </data>
  <data name="Bookable" xml:space="preserve">
    <value>Je souhaite proposer la réservation ligne sur eworky.com !</value>
    <comment>?</comment>
  </data>
  <data name="Facebook" xml:space="preserve">
    <value>Facebook</value>
  </data>
  <data name="Twitter" xml:space="preserve">
    <value>Twitter</value>
  </data>
  <data name="Coffee" xml:space="preserve">
    <value>Café</value>
  </data>
  <data name="UsefulHandicap" xml:space="preserve">
    <value>Adapté pour personnes à mobilité réduite</value>
    <comment>?</comment>
  </data>
  <data name="FriCloseAfter" xml:space="preserve">
    <value>Fermeture Vendredi soir</value>
  </data>
  <data name="FriCloseMorning" xml:space="preserve">
    <value>Fermeture Vendredi  matin</value>
  </data>
  <data name="FriOpenAfter" xml:space="preserve">
    <value>Ouverture Vendredi soir</value>
  </data>
  <data name="FriOpenMorning" xml:space="preserve">
    <value>Ouverture Vendredi  matin</value>
  </data>
  <data name="MonCloseAfter" xml:space="preserve">
    <value>Fermeture Lundi soir</value>
  </data>
  <data name="MonCloseMorning" xml:space="preserve">
    <value>Fermeture Lundi  matin</value>
  </data>
  <data name="MonOpenAfter" xml:space="preserve">
    <value>Ouverture Lundi soir</value>
  </data>
  <data name="MonOpenMorning" xml:space="preserve">
    <value>Ouverture Lundi matin</value>
  </data>
  <data name="SatCloseAfter" xml:space="preserve">
    <value>Fermeture Samedi soir</value>
  </data>
  <data name="SatCloseMorning" xml:space="preserve">
    <value>Fermeture Samedi  matin</value>
  </data>
  <data name="SatOpenAfter" xml:space="preserve">
    <value>Ouverture Samedi soir</value>
  </data>
  <data name="SatOpenMorning" xml:space="preserve">
    <value>Ouverture Samedi  matin</value>
  </data>
  <data name="SunCloseAfter" xml:space="preserve">
    <value>Fermeture Dimanche soir</value>
  </data>
  <data name="SunCloseMorning" xml:space="preserve">
    <value>Fermeture Dimanche  matin</value>
  </data>
  <data name="SunOpenAfter" xml:space="preserve">
    <value>Ouverture Dimanche soir</value>
  </data>
  <data name="SunOpenMorning" xml:space="preserve">
    <value>Ouverture Dimanche  matin</value>
  </data>
  <data name="ThuCloseAfter" xml:space="preserve">
    <value>Fermeture Jeudi soir</value>
  </data>
  <data name="ThuCloseMorning" xml:space="preserve">
    <value>Fermeture Jeudi  matin</value>
  </data>
  <data name="ThuOpenAfter" xml:space="preserve">
    <value>Ouverture Jeudi soir</value>
  </data>
  <data name="ThuOpenMorning" xml:space="preserve">
    <value>Ouverture Jeudi  matin</value>
  </data>
  <data name="TueCloseAfter" xml:space="preserve">
    <value>Fermeture Mardi soir</value>
  </data>
  <data name="TueCloseMorning" xml:space="preserve">
    <value>Fermeture Mardi  matin</value>
  </data>
  <data name="TueOpenAfter" xml:space="preserve">
    <value>Ouverture Mardi soir</value>
  </data>
  <data name="TueOpenMorning" xml:space="preserve">
    <value>Ouverture Mardi  matin</value>
  </data>
  <data name="WedCloseAfter" xml:space="preserve">
    <value>Fermeture Mercredi soir</value>
  </data>
  <data name="WedCloseMorning" xml:space="preserve">
    <value>Fermeture Mercredi  matin</value>
  </data>
  <data name="WedOpenAfter" xml:space="preserve">
    <value>Ouverture Mercredi soir</value>
  </data>
  <data name="WedOpenMorning" xml:space="preserve">
    <value>Ouverture Mercredi  matin</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description de l'espace</value>
  </data>
  <data name="DisplayName" xml:space="preserve">
    <value>{0}, {1} à {2}</value>
  </data>
  <data name="SharedOffice" xml:space="preserve">
    <value>Bureau à partager</value>
  </data>
  <data name="FreeAreas" xml:space="preserve">
    <value>Lieux gratuits</value>
  </data>
  <data name="OtherTypes" xml:space="preserve">
    <value>Autres lieux</value>
  </data>
  <data name="BookingCom" xml:space="preserve">
    <value>Commission (en %)</value>
  </data>
  <data name="QuotationPrice" xml:space="preserve">
    <value>Prix du devis</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Nom de l’entreprise</value>
  </data>
  <data name="CompanyType" xml:space="preserve">
    <value>Type d’entreprise</value>
  </data>
  <data name="Association" xml:space="preserve">
    <value>Association</value>
  </data>
  <data name="BigCompany" xml:space="preserve">
    <value>Grande entreprise</value>
  </data>
  <data name="Consulting" xml:space="preserve">
    <value>Cabinet de conseil</value>
  </data>
  <data name="CreativeAgency" xml:space="preserve">
    <value>Agence de création</value>
  </data>
  <data name="InAssociation" xml:space="preserve">
    <value>dans une association</value>
  </data>
  <data name="InBigCompany" xml:space="preserve">
    <value>dans une grande entreprise</value>
  </data>
  <data name="InCompany" xml:space="preserve">
    <value>chez  {0}</value>
  </data>
  <data name="InConsulting" xml:space="preserve">
    <value>dans un cabinet de conseil</value>
  </data>
  <data name="InCreativeAgency" xml:space="preserve">
    <value>dans une agence de création</value>
  </data>
  <data name="Independent" xml:space="preserve">
    <value>Indépendant</value>
  </data>
  <data name="InIndependent" xml:space="preserve">
    <value>chez un indépendant</value>
  </data>
  <data name="InSmallBusiness" xml:space="preserve">
    <value>dans une PME</value>
  </data>
  <data name="InStartUp" xml:space="preserve">
    <value>dans une start-up </value>
  </data>
  <data name="SmallBusiness" xml:space="preserve">
    <value>PME</value>
  </data>
  <data name="StartUp" xml:space="preserve">
    <value>Start-up </value>
  </data>
  <data name="Attorney" xml:space="preserve">
    <value>Cabinet d'avocat</value>
  </data>
  <data name="InAttorney" xml:space="preserve">
    <value>dans un cabinet d'avocat</value>
  </data>
  <data name="InMedical" xml:space="preserve">
    <value>dans un cabinet médical</value>
  </data>
  <data name="Medical" xml:space="preserve">
    <value>Cabinet médical</value>
  </data>
</root>