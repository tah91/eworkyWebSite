<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="BackHome" xml:space="preserve">
    <value>Revenir à la page d'acceuil</value>
  </data>
  <data name="Browse" xml:space="preserve">
    <value>Parcourir...</value>
  </data>
  <data name="ComfirmDelete" xml:space="preserve">
    <value>Confirmer la suppression:</value>
  </data>
  <data name="DeletedWorkplace" xml:space="preserve">
    <value>Lieu de travail supprimé</value>
  </data>
  <data name="DeletePlace" xml:space="preserve">
    <value>Effacer le lieu</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Détails</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Editer</value>
  </data>
  <data name="EditPlace" xml:space="preserve">
    <value>Editer le lieu</value>
  </data>
  <data name="JoinFile" xml:space="preserve">
    <value>Joindre un fichier</value>
  </data>
  <data name="NotAccessToWorkplace" xml:space="preserve">
    <value>Erreur d'acces au lieu de travail</value>
  </data>
  <data name="NotOwnerOfThePlace" xml:space="preserve">
    <value>Vous n'êtes pas le créateur de ce lieu de travail</value>
  </data>
  <data name="OnlyOwnerCanEdit" xml:space="preserve">
    <value>Désolé, uniquement le créateur d'un lieu de travail peut le supprimer ou l'éditer.</value>
  </data>
  <data name="PicturesNotLoad" xml:space="preserve">
    <value>Vous n'avez pas téléchargé les photos ajoutées. Elles ne seront donc pas prises en compte. Souhaitez-vous continuer sans ces photos ?</value>
  </data>
  <data name="PleaseConfirmDelete" xml:space="preserve">
    <value>Veuillez confirmer la supression du lieu de travail:</value>
  </data>
  <data name="SelectLogo" xml:space="preserve">
    <value>Sélectionnez votre logo</value>
  </data>
  <data name="SelectPictures" xml:space="preserve">
    <value>Sélectionnez vos images</value>
  </data>
  <data name="WorkplaceDeleted" xml:space="preserve">
    <value>Nous sommes désolés, le lieu de travail séléctionné n'existe pas ou a été effacé.</value>
  </data>
  <data name="WorkplaceNotFound" xml:space="preserve">
    <value>Lieu de travail non trouvé.</value>
  </data>
  <data name="WorkplaceWellDeleted" xml:space="preserve">
    <value>Votre lieu de travail a été supprimé avec succes</value>
  </data>
  <data name="AddPicture" xml:space="preserve">
    <value>Ajouter des images...</value>
  </data>
  <data name="Index" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="SearchAWorkplace" xml:space="preserve">
    <value>Chercher un lieu de travail</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Adresse</value>
  </data>
  <data name="YouKnowContactUs" xml:space="preserve">
    <value>Si vous connaissez les coordonnées de contact de cet espace de travail, saisissez-les grâce au formulaire d'édition ou contactez-nous : contact@eworky.com.</value>
  </data>
  <data name="BookIt" xml:space="preserve">
    <value>Réserver</value>
  </data>
  <data name="NeedToBookPlace" xml:space="preserve">
    <value>Ce lieu vous intéresse ?</value>
  </data>
  <data name="AboutPlace" xml:space="preserve">
    <value>à propos du lieu</value>
  </data>
  <data name="AddBy" xml:space="preserve">
    <value>Ajouté par : </value>
  </data>
  <data name="EworkersOpinion" xml:space="preserve">
    <value>L'avis des eWorkers</value>
  </data>
  <data name="Fax" xml:space="preserve">
    <value>Fax : </value>
  </data>
  <data name="GeneralOpinion" xml:space="preserve">
    <value>Avis général</value>
  </data>
  <data name="LastEditBy" xml:space="preserve">
    <value>Dernière édition par : </value>
  </data>
  <data name="Recommendation" xml:space="preserve">
    <value>Je vous recommande de découvrir ce lieu de travail : {0}</value>
  </data>
  <data name="Schedule" xml:space="preserve">
    <value>Horaires</value>
  </data>
  <data name="Tel" xml:space="preserve">
    <value>Tel : </value>
  </data>
  <data name="TheDate" xml:space="preserve">
    <value>le : </value>
  </data>
  <data name="Tweet" xml:space="preserve">
    <value>Tweet</value>
  </data>
  <data name="Equipments" xml:space="preserve">
    <value>Equipements</value>
  </data>
  <data name="ProWorkPlace" xml:space="preserve">
    <value>Postes de travail professionnels</value>
  </data>
  <data name="ListLocSent" xml:space="preserve">
    <value>La liste des lieux vous a été envoyée</value>
  </data>
  <data name="LocList" xml:space="preserve">
    <value>Liste complète des lieux</value>
  </data>
  <data name="LocHaveBeenCreate" xml:space="preserve">
    <value>Le lieu a été créé.</value>
  </data>
  <data name="LocHaveBeenDel" xml:space="preserve">
    <value>Le lieu a été supprimé.</value>
  </data>
  <data name="LocHaveBeenEdit" xml:space="preserve">
    <value>Le lieu a été édité.</value>
  </data>
</root>