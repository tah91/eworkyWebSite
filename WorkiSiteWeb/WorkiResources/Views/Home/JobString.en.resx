<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Commercial" xml:space="preserve">
    <value>Commercial: contacting hotels, business centers, etc.</value>
  <comment>pas à traduire ?</comment></data>
  <data name="CommunicationIntern" xml:space="preserve">
    <value>eWorky is currently looking for a trainee in communicaton to do many things, including:</value>
  </data>
  <data name="CommunityManagement" xml:space="preserve">
    <value>Community management (Twitter and other social networks)</value>
  </data>
  <data name="Event" xml:space="preserve">
    <value>Organize some events: games, parties, etc.</value>
  </data>
  <data name="EWProject" xml:space="preserve">
    <value>But eWorky is also a very promising start-up. We are part of Microsoft Bizspark program and were selected by Frenchweb as "one of the 10 startups of 2011".</value>
  </data>
  <data name="EWSearchEveryProfil" xml:space="preserve">
    <value>eWorky is currently looking for C# web developpers:</value>
  </data>
  <data name="EWSearchStudents" xml:space="preserve">
    <value>To help us growing, we are looking for young (and older) developers and business developers. So if you want to join a cool project and work with us, please send your CV and your cover letter to contact@eworky.com!</value>
  </data>
  <data name="EWSpirit" xml:space="preserve">
    <value>eWorky spirit</value>
  </data>
  <data name="EWTeam" xml:space="preserve">
    <value>eWorky is a team of three highly energetic and motivated entrepreneurs helped by three exceptional employees who work in a warm and stimulating atmosphere. Start-up spirit guaranteed!</value>
  </data>
  <data name="InternGoodUniversity" xml:space="preserve">
    <value>We are looking for an intern (internship &gt; 3 months) with a great background. A large autonomy, a entrepreneurship spirit, lots of creativity and good oral and writing skills are required. </value>
  </data>
  <data name="Jobs" xml:space="preserve">
    <value>Jobs</value>
    <comment>JOBS</comment>
  </data>
  <data name="JuniorDev" xml:space="preserve">
    <value>Junior developper for a more than 3 months internship, and &lt;/br&gt; having web development background. The intern will be&lt;/br&gt; paid, the amount depending on the profile.</value>
  </data>
  <data name="LikeDev" xml:space="preserve">
    <value>You like to develop? You are young, motivated, autonomous and you love to take up challenges! Willing to work in a web start-up? Then join eWorky!</value>
  </data>
  <data name="Marketing" xml:space="preserve">
    <value>Marketing: web-marketing (adwords), buzz, etc.</value>
  </data>
  <data name="MoreThings" xml:space="preserve">
    <value>And many other things!</value>
  </data>
  <data name="PressRelation" xml:space="preserve">
    <value>Public relations: contacts/answers</value>
  </data>
  <data name="SearchInternShip" xml:space="preserve">
    <value>You are looking for an internship? You like communication, marketing and commercial? You are young, motivated, autonomous and you love to take up challenges? Willing to work in a start-up? Then join eWorky!</value>
  </data>
  <data name="SendUsCV" xml:space="preserve">
    <value>There is no time to loose, send your CV and your cover letter to {0}</value>
  </data>
  <data name="SeniorDev" xml:space="preserve">
    <value>Senior developer (freelance contracts)</value>
  </data>
  <data name="SoulBuisnessDev" xml:space="preserve">
    <value>You feel like doing business development?</value>
  </data>
  <data name="YouAreDev" xml:space="preserve">
    <value>You are a developer?</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>To help us growing, we are looking for young talents ready to join the adventure.</value>
  </data>
</root>