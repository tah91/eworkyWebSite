<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessBO" xml:space="preserve">
    <value>Conseguir el acceso gerente</value>
  </data>
  <data name="AddSpace" xml:space="preserve">
    <value>¡Compartir mi oficina ya!</value>
  </data>
  <data name="ForBoth1" xml:space="preserve">
    <value>Eligiendo colaborar e intercambiar con tu anfitrión beneficiarás de una aportación mutua y de un enriquecimiento colectivo</value>
  </data>
  <data name="ForBoth2" xml:space="preserve">
    <value>Descubre nuevos mercados, comparte recursos y prospecciones garcias al contacto con otras estructuras</value>
  </data>
  <data name="ForBoth3" xml:space="preserve">
    <value>Desarrolla un entorno dinámico y creativo para ambas estructuras</value>
  </data>
  <data name="ForBothHead1" xml:space="preserve">
    <value>¡Gana gracias a los intercambios!</value>
  </data>
  <data name="ForBothHead2" xml:space="preserve">
    <value>¡Construye tu red!</value>
  </data>
  <data name="ForOwner" xml:space="preserve">
    <value>Propietario</value>
  </data>
  <data name="ForOwner1" xml:space="preserve">
    <value>Crea tu espacio en eWorky en unos clicks</value>
  </data>
  <data name="ForOwner2" xml:space="preserve">
    <value>Gana miles de euros anuales por puesto de trabajo</value>
  </data>
  <data name="ForOwner3" xml:space="preserve">
    <value>¡Nos encargamos de todo! Tos es automático, desde la búsqueda de ocupantes hasta el ingreso de los fondos</value>
  </data>
  <data name="ForOwnerHead1" xml:space="preserve">
    <value>¿Dispones de mesas o despachos sin ocupar?</value>
  </data>
  <data name="ForOwnerHead2" xml:space="preserve">
    <value>¿Quizás prefieras sacarle rendimiento en lugar de almacenar viejos trastos?</value>
  </data>
  <data name="ForTenant" xml:space="preserve">
    <value>Inquilino</value>
  </data>
  <data name="ForTenant1" xml:space="preserve">
    <value>Encuentra un puesto de trabajo hasta 5 veces más barato que en un alquiler tradicional o en centros de negocio</value>
  </data>
  <data name="ForTenant2" xml:space="preserve">
    <value>Disfruta de la flexibilidad compartiendo despacho, con alquieres diarios, semanales, mensuales...</value>
  </data>
  <data name="ForTenant3" xml:space="preserve">
    <value>¡Reserva tu espacio y paga en unos pocos clicks!</value>
  </data>
  <data name="ForTenantHead1" xml:space="preserve">
    <value>¿Eres una empresa pequeña o un freelance?</value>
  </data>
  <data name="Legally1" xml:space="preserve">
    <value>Generalmente, se comparte mediante &lt;b&gt;subarrendamiento&lt;/b&gt; : Una sociedad alquila una oficina en su totalidad y la subarrienda a otras. Una sociedad que desea subarrendar tiene que obtener el acuerdo escrito de su propietario a no ser que se haya previsto en el contrato de arrendamiento. </value>
  </data>
  <data name="Legally2" xml:space="preserve">
    <value>Pero en eWorky recomendamos una solución más flexible: &lt;b&gt;el contrato de prestación de servicios&lt;/b&gt;. Se trata de un acto mediante el cual, una persona se obliga a realizar una prestación de servicio a otra, contra remuneración.</value>
  </data>
  <data name="Legally3" xml:space="preserve">
    <value>En el caso actual, se trata de una puesta a disposición de un local y de su material, incluyendo en ocasiones otros servicios (limpieza, etc.). Y para ayudarte, &lt;b&gt;eWorky&lt;/b&gt; te facilita &lt;b&gt;plantillas de contratos&lt;/b&gt;, y te propone &lt;b&gt;gestionarlos directamente&lt;/b&gt; a partir de la página web!</value>
  </data>
  <data name="Legally4" xml:space="preserve">
    <value>Cabe destacar que ambos tipos de contrato pueden acompañarse de una domiciliación de la empresa.</value>
  </data>
  <data name="LegallyTitle" xml:space="preserve">
    <value>En cuanto a aspecto jurídicos ¿Cómo funciona?</value>
  </data>
  <data name="ShareOfficeMenu" xml:space="preserve">
    <value>Compartir una oficina</value>
  </data>
  <data name="ShareOfficeTitle" xml:space="preserve">
    <value>Compartir su oficina: ¿Por qué? y ¿cómo?</value>
  </data>
  <data name="ForTenantHead2" xml:space="preserve">
    <value>¿Estás buscando un espacio para tu actividad?</value>
  </data>
</root>