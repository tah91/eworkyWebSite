<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BookIt" xml:space="preserve">
    <value>Book</value>
  </data>
  <data name="BackToUrl" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="BookingIntro" xml:space="preserve">
    <value>Please fill in the following fields to book online, you will receive a confirmation email</value>
  </data>
  <data name="BookingDetails" xml:space="preserve">
    <value>Booking details</value>
  </data>
  <data name="ConfirmIt" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="HandleIt" xml:space="preserve">
    <value>Handle</value>
  </data>
  <data name="RefuseIt" xml:space="preserve">
    <value>Refuse</value>
  </data>
  <data name="Confirmed" xml:space="preserve">
    <value>Your booking request has been taken into account. Price and availability will be confirmed by the manager.</value>
  </data>
  <data name="Quotation" xml:space="preserve">
    <value>Quote request</value>
  </data>
  <data name="BookSpeech" xml:space="preserve">
    <value>To do a booking request, please fill in the following fields.</value>
  </data>
  <data name="QuotationSpeech" xml:space="preserve">
    <value>To do a quote request, please fill in the following fields.</value>
  </data>
  <data name="BeginSpeech" xml:space="preserve">
    <value>Please specify the start and end dates of your booking.</value>
  </data>
  <data name="ValidateQuotation" xml:space="preserve">
    <value>Validate the quote request</value>
  </data>
  <data name="AskQuotation" xml:space="preserve">
    <value>Quote request</value>
  </data>
  <data name="Surface" xml:space="preserve">
    <value>Surface</value>
  </data>
  <data name="Asked" xml:space="preserve">
    <value>Requested on </value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="End" xml:space="preserve">
    <value>End</value>
  </data>
  <data name="Localisation" xml:space="preserve">
    <value>Venue</value>
  </data>
  <data name="Offer" xml:space="preserve">
    <value>Offer</value>
  </data>
  <data name="Pay" xml:space="preserve">
    <value>Pay</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="SeeCustomerSheet" xml:space="preserve">
    <value>See the client profile</value>
  </data>
  <data name="SeeLocSheet" xml:space="preserve">
    <value>See the workplace profile</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="WaitingForPayement" xml:space="preserve">
    <value>Waiting for payment</value>
  </data>
  <data name="BookPaid" xml:space="preserve">
    <value>The booking for workplace {0} was paid !</value>
  </data>
  <data name="AskingQuotation" xml:space="preserve">
    <value>Quote request for {0}</value>
  </data>
  <data name="PayFail" xml:space="preserve">
    <value>Payment has not been taken into account !</value>
  </data>
  <data name="BookingRefused" xml:space="preserve">
    <value>Booking request was refused.</value>
  </data>
  <data name="QuotationConfirmed" xml:space="preserve">
    <value>Your quote request has been taken into account.</value>
  </data>
  <data name="BookingAccepted" xml:space="preserve">
    <value>Booking request was confirmed.</value>
  </data>
  <data name="BookingCanceled" xml:space="preserve">
    <value>Your booking request was canceled.</value>
  </data>
  <data name="QuotationCanceled" xml:space="preserve">
    <value>Your quote request was canceled.</value>
  </data>
  <data name="BookingBeforeToday" xml:space="preserve">
    <value>Your booking can't start before today.</value>
  </data>
  <data name="EndBookingBeforeStart" xml:space="preserve">
    <value>The end date of your booking must be posterior to the start date.</value>
  </data>
  <data name="EndQuotationSpeech" xml:space="preserve">
    <value>You will be contacted very soon by the venue manager.</value>
  </data>
  <data name="QuotationRefused" xml:space="preserve">
    <value>The quote request was canceled.</value>
  </data>
  <data name="EndSpeech" xml:space="preserve">
    <value>Availability and price for this booking request will be confirmed by the manager in your profile space. Once confirmed, you will be able to pay online for your booking.</value>
  </data>
  <data name="Achieved" xml:space="preserve">
    <value>Completed on </value>
  </data>
  <data name="CancelStatus" xml:space="preserve">
    <value>Canceled on </value>
  </data>
  <data name="ContactStatus" xml:space="preserve">
    <value>Contacted on</value>
  </data>
  <data name="HasAcceptBooking" xml:space="preserve">
    <value>{0} accepted your booking request for {1}</value>
  </data>
  <data name="HasAskBooking" xml:space="preserve">
    <value>{0} made a booking request for {1}</value>
  </data>
  <data name="HasAskQuotation" xml:space="preserve">
    <value>{0} made a quote request for {1}</value>
  </data>
  <data name="HasCancelBooking" xml:space="preserve">
    <value>{0} cancelled his booking request for {1}</value>
  </data>
  <data name="HasCancelQuotation" xml:space="preserve">
    <value>{0} cancelled his booking request for {1}</value>
  </data>
  <data name="HasPaidBooking" xml:space="preserve">
    <value>{0} paid his booking request for {1}</value>
  </data>
  <data name="HasPaidQuotation" xml:space="preserve">
    <value>{0} paid his quote request for {1}</value>
  </data>
  <data name="HasRefuseBooking" xml:space="preserve">
    <value>{0} refused your booking request for {1}</value>
  </data>
  <data name="HasRefuseQuotation" xml:space="preserve">
    <value>{0} refused to answer your quote request for {1}</value>
  </data>
  <data name="PaidStatus" xml:space="preserve">
    <value>Paid on </value>
  </data>
  <data name="QuotationCancel" xml:space="preserve">
    <value>Quote request cancelled on </value>
  </data>
  <data name="QuotationRefuse" xml:space="preserve">
    <value>Quote request refused on </value>
  </data>
  <data name="RefuseStatus" xml:space="preserve">
    <value>Refused on </value>
  </data>
  <data name="WaitingConfirm" xml:space="preserve">
    <value>Waiting for confirmation</value>
  </data>
  <data name="WaitingPayment" xml:space="preserve">
    <value>Waiting for payment</value>
  </data>
  <data name="WaitingStatus" xml:space="preserve">
    <value>Waiting for handling</value>
  </data>
  <data name="PaymentError" xml:space="preserve">
    <value>An error is preventing payment to take place, please contact us at support@eworky.com.</value>
  </data>
  <data name="MessageToOwner" xml:space="preserve">
    <value>Message to owner (optional)</value>
  </data>
  <data name="Afternoon" xml:space="preserve">
    <value>afternoon</value>
  </data>
  <data name="ChooseDay" xml:space="preserve">
    <value>choose a number of days</value>
  </data>
  <data name="ChooseHalfDay" xml:space="preserve">
    <value>choose a number of half-days</value>
  </data>
  <data name="ChooseHours" xml:space="preserve">
    <value>choose a number of hours</value>
  </data>
  <data name="ChooseMonth" xml:space="preserve">
    <value>choose a number of months</value>
  </data>
  <data name="ChooseWeek" xml:space="preserve">
    <value>choose a number of weeks</value>
  </data>
  <data name="ChooseYear" xml:space="preserve">
    <value>choose a number of years</value>
  </data>
  <data name="HowItWorks" xml:space="preserve">
    <value>How it works</value>
  </data>
  <data name="HowItWorks1" xml:space="preserve">
    <value>Indicate the details of your booking</value>
  </data>
  <data name="HowItWorks2" xml:space="preserve">
    <value>Your request will then immediately be transmitted to the space manager</value>
  </data>
  <data name="HowItWorks3" xml:space="preserve">
    <value>You will receive confirmation for the price and availabilities in your using space</value>
  </data>
  <data name="HowItWorks4" xml:space="preserve">
    <value>You will then be allowed to pay online for your booking</value>
  </data>
  <data name="Morning" xml:space="preserve">
    <value>Morning</value>
  </data>
  <data name="Until" xml:space="preserve">
    <value>until</value>
  </data>
  <data name="NotNullQuantity" xml:space="preserve">
    <value>Please indicate a non null number</value>
  </data>
  <data name="Booking" xml:space="preserve">
    <value>Booking</value>
  </data>
  <data name="HowItWorksQuotation1" xml:space="preserve">
    <value>Fill in the quotation request, and ask for potential questions</value>
  </data>
  <data name="HowItWorksQuotation2" xml:space="preserve">
    <comment>? pas sur</comment>
    <value>Your request is then immediately submitted to the owner</value>
  </data>
  <data name="HowItWorksQuotation3" xml:space="preserve">
    <value>We will answer you as promptly as we can</value>
  </data>
  <data name="HowItWorksParty1" xml:space="preserve">
    <value>This networking event is the opportunity for every coworkaholics, freelance and entrepreneurs, to meet up, connect and discover Parisien coworking spaces.</value>
  </data>
  <data name="HowItWorksParty2" xml:space="preserve">
    <value>During this night, you will be offered the opportunity to make a 45 sec elevator pitch to introduce yourself and explain your project to us.</value>
  </data>
  <data name="HowItWorksParty3" xml:space="preserve">
    <value>This event is co-organized by eWorky.com and the coworking spaces {0}.</value>
  </data>
  <data name="HowItWorksParty4" xml:space="preserve">
    <value>Free admittance, {0} have the pleasure to welcome you, and eWorky to pay you a round ;)
Register promptly, there is a limited amount of tickets</value>
  </data>
  <data name="RegisterParty" xml:space="preserve">
    <value>Subscribe</value>
  </data>
  <data name="PartyRegisterConfirmation" xml:space="preserve">
    <value>Your subscription has been successfully saved, the event date will be communicated to you by Email</value>
  </data>
  <data name="StatusAccepted" xml:space="preserve">
    <value>Accepted</value>
  </data>
  <data name="StatusCancelled" xml:space="preserve">
    <value>Cancelled</value>
  </data>
  <data name="StatusPaid" xml:space="preserve">
    <value>Paid</value>
  </data>
  <data name="StatusRefused" xml:space="preserve">
    <value>Refused</value>
  </data>
  <data name="StatusUnknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
</root>