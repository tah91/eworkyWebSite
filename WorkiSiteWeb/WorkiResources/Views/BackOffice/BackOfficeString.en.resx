<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="Access" xml:space="preserve">
    <value>Access</value>
  </data>
  <data name="BackToOwnerSpace" xml:space="preserve">
    <value>Back to the Owner space</value>
  </data>
  <data name="Booking" xml:space="preserve">
    <value>Booking</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="CustomerSheet" xml:space="preserve">
    <value>Customer sheet</value>
  </data>
  <data name="Demand" xml:space="preserve">
    <value>Request</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="EmptyBookHistoric" xml:space="preserve">
    <value>You do not have any booking. To request a booking, please go to the workplace page. </value>
  </data>
  <data name="EmptyNews" xml:space="preserve">
    <value>You have not received notification.</value>
  </data>
  <data name="EmptyQuotationHistoric" xml:space="preserve">
    <value>You did not ask for a quote. To ask for an estimate, please go to the workplace page.</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="Historic" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="Inline" xml:space="preserve">
    <value>Online</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="LastNews" xml:space="preserve">
    <value>Latest news</value>
  </data>
  <data name="ManagementTitle" xml:space="preserve">
    <value>Management interface of {0}</value>
  </data>
  <data name="Member" xml:space="preserve">
    <value>Member</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="Names" xml:space="preserve">
    <value>Identity</value>
  </data>
  <data name="NeedInfoPaypal" xml:space="preserve">
    <value>To offer booking for a workplace, you must first indicate the email address associated to your PayPal account in your profile.</value>
  </data>
  <data name="NoCurrentBooking" xml:space="preserve">
    <value>You do not have any pending booking request. To have a look at your archived bookings, please go to {0}.</value>
  </data>
  <data name="NoCurrentQuotation" xml:space="preserve">
    <value>You do not have any pending quote request. To have a look at your archived quotes, please go to {0}.</value>
  </data>
  <data name="NotDefined" xml:space="preserve">
    <value>Not defined</value>
  </data>
  <data name="NoWorkingBooking" xml:space="preserve">
    <value>No booking requests has been archived.</value>
  </data>
  <data name="NoWorkingQuotation" xml:space="preserve">
    <value>No quote requests has been archived.</value>
  </data>
  <data name="NumberBooking" xml:space="preserve">
    <value>Number of bookings</value>
  </data>
  <data name="Offer" xml:space="preserve">
    <value>Offer</value>
  </data>
  <data name="Offers" xml:space="preserve">
    <value>Offers</value>
  </data>
  <data name="OffersDirectAccess" xml:space="preserve">
    <value>Direct access to offers management</value>
  </data>
  <data name="Offline" xml:space="preserve">
    <value>Offline</value>
  </data>
  <data name="Owner" xml:space="preserve">
    <value>Manager</value>
  </data>
  <data name="OwnerSpace" xml:space="preserve">
    <value>Manager space</value>
  </data>
  <data name="PaymentInfoModified" xml:space="preserve">
    <value>Payment information have been updated.</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="Place" xml:space="preserve">
    <value>Place</value>
  </data>
  <data name="PlaceDoNotHaveOffer" xml:space="preserve">
    <value>This venue do not have any offers yet.</value>
  </data>
  <data name="Refuse" xml:space="preserve">
    <value>Refuse</value>
  </data>
  <data name="RefuseBooking" xml:space="preserve">
    <value>Are you sure you want to refuse this booking request?</value>
  </data>
  <data name="RefuseQuotation" xml:space="preserve">
    <value>Are you sure you want to refuse this quote request ? You will not be able to ask for this customer details.</value>
  </data>
  <data name="Return" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Score" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="SeeClientProfile" xml:space="preserve">
    <value>See the customer's profile</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Surface" xml:space="preserve">
    <value>Surface</value>
  </data>
  <data name="Tariff" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="TariffByPeriod" xml:space="preserve">
    <value>&lt;b&gt;{0} {1}&lt;/b&gt; by &lt;b&gt;{2}&lt;/b&gt;</value>
  </data>
  <data name="Tel" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="Town" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="TTC" xml:space="preserve">
    <value>All tax included, except fees</value>
  </data>
  <data name="VisitNeeded" xml:space="preserve">
    <value>Request for visit</value>
  </data>
  <data name="WorkplacesDirectAccess" xml:space="preserve">
    <value>Direct access to the workplaces' management</value>

  </data>
  <data name="PaypalIdentity" xml:space="preserve">
    <value>Paypal login details</value>
  </data>
  <data name="WorkingPrinciple" xml:space="preserve">
    <value>How does it work</value>
  </data>
  <data name="DoNotHaveOnlineBooking" xml:space="preserve">
    <value>This workplace has no offer yet that can be booked on line.</value>
  </data>
  <data name="DoNotHaveOnlineQuotation" xml:space="preserve">
    <value>This workplace has no offer yet where you can request a quote.</value>
  </data>
</root>