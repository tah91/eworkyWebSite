@model Worki.Data.Models.MemberBookingFormViewModel

@section HeadContent
{
    <title>@Html.WorkiTitle(Worki.Resources.Views.Booking.BookingString.Booking) </title>
	<link href="@Url.VersionedContent(Links.Content.Booking_min_css)" rel="stylesheet" type="text/css" />
	<link href="@Url.VersionedContent(Links.Content.jquery_ui_1_8_12_custom_min_css)" rel="stylesheet" type="text/css" />
}

@RazorHelpers.TitleDiv(Worki.Resources.Views.Booking.BookingString.Booking, "Blue")

<div class="detailContent">
    <div class="blockContainer">
	<div class="contentBlock">
		<div class="bookingDesc float-left">
			<div class="innerContentBlock bookingLocalisation">
				<h3 class="blue">@Model.BookingOffer.Localisation.Name - @Model.BookingOffer.Name</h3>
				<div class="bookingImg borderedImg float-left">
					@RazorHelpers.CenterImage(ControllerHelpers.GetUserImagePath(Model.BookingOffer.Localisation.GetMainPic(), true), Model.BookingOffer.Localisation.Name)
				</div>
				<div class="bookingPrices float-left">
					<ul>
						@foreach (var price in Model.BookingOffer.OfferPrices)
						{
						<li class="bold orange">@price.GetPriceDisplay()</li>	
						}
					</ul>
				</div>
				<div class="clear">
				</div>
			</div>
			<div class="innerContentBlock borderOrange bookingSteps">
				<h3 class="orange">@Worki.Resources.Views.Booking.BookingString.HowItWorks</h3>
				<ul>
					<li>@Worki.Resources.Views.Booking.BookingString.HowItWorks1</li>
					<li>@Worki.Resources.Views.Booking.BookingString.HowItWorks2</li>
					<li>@Worki.Resources.Views.Booking.BookingString.HowItWorks3</li>
					<li>@Worki.Resources.Views.Booking.BookingString.HowItWorks4</li>
				</ul>
			</div>
		</div>
	    <div class="bookingFormDiv float-left">
			@using (Html.BeginForm())
            {
				@Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.NeedNewAccount)
				<table>
                    @if (Model.NeedNewAccount)
                    {
                    <tr>
						<td>
							<div class="editor-label">
								@Html.LabelFor(m => m.LastName)<span class="blue">*</span>
							</div>
						</td>
						<td>
							<div class="editor-field">
								@Html.TextBoxFor(m => m.LastName)
							</div>
						</td>
					</tr>
                    <tr>
						<td>
							<div class="editor-label">
								@Html.LabelFor(m => m.FirstName)<span class="blue">*</span>
							</div>
						</td>
						<td>
							<div class="editor-field">
								@Html.TextBoxFor(m => m.FirstName)
							</div>
						</td>
					</tr>
                    <tr>
						<td>
							<div class="editor-label">
								@Html.LabelFor(m => m.Email)<span class="blue">*</span>
							</div>
						</td>
						<td>
							<div class="editor-field">
								@Html.TextBoxFor(m => m.Email)
							</div>
						</td>
					</tr>
                    }
                    else
                    {
                        @Html.HiddenFor(m => m.LastName)
                        @Html.HiddenFor(m => m.FirstName)  
                        @Html.HiddenFor(m => m.Email) 
                    }
					<tr>
						<td>
							<div class="editor-label">
								@Html.LabelFor(m => m.PhoneNumber)<span class="blue">*</span>
							</div>
						</td>
						<td>
							<div class="editor-field">
								@Html.TextBoxFor(m => m.PhoneNumber)
							</div>
						</td>
					</tr>
					<tr>
						<td>
							<div class="editor-label">
								@Html.LabelFor(m => m.MemberBooking.TimeType)<span class="blue">*</span>
							</div>
						</td>
						<td>
							<div class="editor-field">
								@Html.DropDownListFor(m => m.MemberBooking.TimeType, Model.Periods)
							</div>
						</td>
					</tr>
					<tr>
						<td>
							<div class="editor-label">
								@Html.LabelFor(m => m.MemberBooking.FromDate)<span class="blue">*</span>
							</div>
						</td>
						<td>
							<div class="editor-field">
								@Html.TextBox("MemberBooking.FromDate", CultureHelpers.GetSpecificFormat(Model.MemberBooking.FromDate, CultureHelpers.TimeFormat.General), new { @class = "dtp" }) 
                                <div class="halfDaySelector">
                                @Html.RadioButtonFor(m => m.HalfDay, MemberBookingFormViewModel.eHalfDay.Morning, new { id = "HalfDay_Morning" }) @Html.LabelFor(@Worki.Resources.Views.Booking.BookingString.Morning, "HalfDay_Morning") 
                                @Html.RadioButtonFor(m => m.HalfDay, MemberBookingFormViewModel.eHalfDay.Afternoon, new { id = "HalfDay_Afternoon" }) @Html.LabelFor(@Worki.Resources.Views.Booking.BookingString.Afternoon, "HalfDay_Afternoon")
                                </div>
							</div>
						</td>
					</tr>
					<tr>
						<td class="verticalAlignTop">
							<div class="bookingEndRow">
								@Worki.Resources.Models.Booking.Booking.ToDate<span class="blue">*</span>
							</div>
						</td>
						<td>
							<div class="bookingEndRow">
								@Html.RadioButtonFor(m => m.MemberBooking.PeriodType, (int)MemberBooking.ePeriodType.SpendUnit, new { id = "PeriodType_SpendUnit" }) @Html.LabelFor("", "PeriodType_SpendUnit", "PeriodType_SpendUnitLabel")
							</div>
							<div class="bookingEndSelection">
								@Html.TextBoxFor(m => m.MemberBooking.TimeUnits) <span id="periodUnit"></span>
							</div>
							<div class="bookingEndRow">
								@Html.RadioButtonFor(m => m.MemberBooking.PeriodType, (int)MemberBooking.ePeriodType.EndDate, new { id = "PeriodType_EndDate" }) @Html.LabelFor("choisir une date de fin", "PeriodType_EndDate")
							</div>
							<div class="bookingEndSelection">
								@Worki.Resources.Views.Booking.BookingString.Until @Html.TextBox("MemberBooking.ToDate", CultureHelpers.GetSpecificFormat(Model.MemberBooking.ToDate, CultureHelpers.TimeFormat.General), new { @class = "dtp" })
							</div>
						</td>
					</tr>
					<tr>
						<td class="verticalAlignTop">
							<div class="editor-label ">
								@Html.LabelFor(Worki.Resources.Views.Booking.BookingString.MessageToOwner, "MemberBooking_Message")
							</div>
						</td>
						<td>
							<div class="editor-field">
								@Html.TextAreaFor(m => m.MemberBooking.Message)
							</div>
						</td>
					</tr>
				</table>
				<div class="editor-field float-right">
					<input type="submit" class="buttonStd buttonBlue" value="@Worki.Resources.Views.Booking.BookingString.BookIt"/>
				</div>
				<div class="clear"></div>
            }
	    </div>
		<div class="clear">
		</div>
	</div>
    </div>
</div>


@section ScriptContent
{
    @Html.Partial(MVC.Shared.Views._DatePickerScript)
	<script type="text/javascript">
	    require(["@MiscHelpers.UrlConstants.jqueryui"], function () {
			require(["@Url.VersionedContent((System.Threading.Thread.CurrentThread.CurrentCulture.Name == "fr-FR") ? Links.Scripts.jquery_ui_datepicker_fr_js : Links.Scripts.jquery_ui_datepicker_en_js)","@Links.Scripts.date_js"], function () {
				require.ready(function () {
					SelectPeriodType = function () {
						var currentPeriodType = jQuery.trim($("#MemberBooking_TimeType").val());
						var canChooseHour = false;
						var canChooseEndDate = false;
						var periodLabel = '';
						var periodUnitText = '';
						var showHalfDay = false;
						switch (currentPeriodType) {
							case '@((int)Offer.PaymentPeriod.Hour)':
								canChooseHour = true;
								canChooseEndDate = false;
								periodLabel = '@Html.JSEscape(Worki.Resources.Views.Booking.BookingString.ChooseHours)';
								periodUnitText = '@Worki.Resources.Models.Offer.Offer.PluralHour';
								break;
							case '@((int)Offer.PaymentPeriod.Day)':
								canChooseHour = false;
								canChooseEndDate = true;
								periodLabel = '@Worki.Resources.Views.Booking.BookingString.ChooseDay';
								periodUnitText = '@Worki.Resources.Models.Offer.Offer.PluralDay';
								break;
							case '@((int)Offer.PaymentPeriod.Week)':
								canChooseHour = false;
								canChooseEndDate = false;
								periodLabel = '@Worki.Resources.Views.Booking.BookingString.ChooseWeek';
								periodUnitText = '@Worki.Resources.Models.Offer.Offer.PluralWeek';
								break;
							case '@((int)Offer.PaymentPeriod.Month)':
								canChooseHour = false;
								canChooseEndDate = false;
								periodLabel = '@Worki.Resources.Views.Booking.BookingString.ChooseMonth';
								periodUnitText = '@Worki.Resources.Models.Offer.Offer.PluralMonth';
								break;
							case '@((int)Offer.PaymentPeriod.Year)':
								canChooseHour = false;
								canChooseEndDate = false;
								periodLabel = '@Html.JSEscape(Worki.Resources.Views.Booking.BookingString.ChooseYear)';
								periodUnitText = '@Worki.Resources.Models.Offer.Offer.PluralYear';
								break;
							case '@((int)Offer.PaymentPeriod.HalfDay)':
								canChooseHour = false;
								canChooseEndDate = false;
								periodLabel = '@Html.JSEscape(Worki.Resources.Views.Booking.BookingString.ChooseHalfDay)';
								periodUnitText = '@Html.JSEscape(Worki.Resources.Models.Offer.Offer.PluralHalfDay)';
								showHalfDay = true;
								break;
							default:

								break;
						}
						if (showHalfDay) {
							$('.halfDaySelector').show();
						}
						else {
							$('.halfDaySelector').hide();
						}
						$('#PeriodType_SpendUnitLabel').text(periodLabel);
						$('#periodUnit').text(periodUnitText);
						var timeClass = canChooseHour ? 'dtp' : 'dp';
						var timeFormat = canChooseHour ? 'dd/MM/yyyy HH:mm' : 'dd/MM/yyyy';
						$('#MemberBooking_FromDate').removeClass('dp hasDatepicker dtp').addClass(timeClass);
						$('#MemberBooking_ToDate').removeClass('dp hasDatepicker dtp').addClass(timeClass);
						var fromDate = Date.parse($('#MemberBooking_FromDate').val());
						var toDate = Date.parse($('#MemberBooking_ToDate').val());
						$('#MemberBooking_FromDate').val(fromDate.toString(timeFormat));
						$('#MemberBooking_ToDate').val(toDate.toString(timeFormat));

						if (canChooseEndDate) {
							$('#PeriodType_EndDate').removeAttr("disabled");
							$('#MemberBooking_ToDate').removeAttr("disabled");
						}
						else {
							$('#PeriodType_EndDate').attr("disabled", true);
							$('#MemberBooking_ToDate').attr("disabled", true);
						}

						$('#PeriodType_SpendUnit').prop('checked', true);
						$('#PeriodType_EndDate').prop('checked', false);

						$(".dp").datepicker({
							changeMonth: true,
							changeYear: true,
							yearRange: '1900:2020'
						});
						$(".dtp").datetimepicker({
							stepHour: 1,
							stepMinute: 15,
							hourMin: 8,
							hourMax: 20
						});
					}
					SelectPeriodType();

					$('#MemberBooking_TimeType').live('change', function () {
						SelectPeriodType();
					});
				});
			});
		});
	</script>
	
}

