@model Worki.Data.Models.SearchCriteriaFormViewModel

@section HeadContent
{
    <meta name="robots" content="noindex">
    <title>@Html.WorkiTitle(Worki.Resources.Views.Search.SearchString.SearchResult)</title>
    <link href="@Url.VersionedContent(Links.Content.Index_min_css)" rel="stylesheet" type="text/css" />
    <link href="@Url.VersionedContent(Links.Content.Search_min_css)" rel="stylesheet" type="text/css" />
    <link href="@Url.VersionedContent(Links.Content.SearchResults_min_css)" rel="stylesheet" type="text/css" />
    <link href="@Url.VersionedContent(Links.Content.skin_min_css)" rel="stylesheet" type="text/css"  />
    <link href="@Url.VersionedContent(Links.Content.rateit_min_css)" rel="stylesheet" type="text/css" />
    <link href="@Url.VersionedContent(Links.Content.jquery_ui_1_8_12_custom_min_css)" rel="stylesheet" type="text/css"/>
}

@RazorHelpers.TitleDiv(Worki.Resources.Views.Search.SearchString.YourSearchResult, "Green", false)
    
<div class="resultHeader2 float-left">
    <span class="blue bold">@Worki.Resources.Views.Search.SearchString.ResultOfSearch</span> @Model.Results.Count @Worki.Resources.Views.Search.SearchString.PlaceFound
</div>

<div class="clear">
</div>

<div class="detailContent">
    <div class="searchFormBlock float-left">
		<div class="contentBlock">
			<div class="resultsMapDiv">
                <h3 class="blue">@Worki.Resources.Views.Search.SearchString.ResultOnMap</h3>
                <div class="mapContainer" id="resultsMap">
                </div>
            </div> 
        
            <div class="searchResultFormDiv" id="searchFormReset">
                <h3 class="green">@Worki.Resources.Views.Search.SearchString.RefineSearch</h3>
                @using (Html.BeginForm(MVC.Search.ActionNames.FullSearch, MVC.Search.Name, FormMethod.Post, new { id = "searchform" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Criteria.Place)
                        @Html.ValidationMessage(Worki.Resources.Views.Home.HomeString.Location, "")
                    </div>

                    <p>
                        @Html.HiddenFor(model => model.Criteria.LocalisationData.Latitude)
                        @Html.HiddenFor(model => model.Criteria.LocalisationData.Longitude)
                    </p>
        
                    <p class="green">@Worki.Resources.Views.Localisation.LocalisationFormString.Offers</p>
                    <div class="editor-field">
                        @Html.DropDownList("Criteria.LocalisationOffer", Model.Offers, new { @class = "offerSelect" })
                        @Html.ValidationMessage("LocalisationOffer", "")
                    </div>

                    <p class="green">@Worki.Resources.Views.Localisation.LocalisationFormString.Facilities</p>
                    @Html.Partial(MVC.Search.Views._ServicesSelector)
                    <p class="green">@Worki.Resources.Views.Search.SearchString.KindOfLocation</p>
                    <div class="editor-field">
                    @Html.CheckBoxFor(model => model.Criteria.Everything)
                    @Html.LabelFor(model => model.Criteria.Everything)
                    </div>
                    <div class="editor-field">
                    @Html.CheckBoxFor(model => model.Criteria.SpotWifi)
                    @Html.LabelFor(model => model.Criteria.SpotWifi)
                    </div>
                    <div class="editor-field">
                    @Html.CheckBoxFor(model => model.Criteria.CoffeeResto)
                    @Html.LabelFor(model => model.Criteria.CoffeeResto)
                    </div>
                    <div class="editor-field">
                    @Html.CheckBoxFor(model => model.Criteria.Biblio)
                    @Html.LabelFor(model => model.Criteria.Biblio)
                    </div>
                    <div class="editor-field">
                    @Html.CheckBoxFor(model => model.Criteria.PublicSpace)
                    @Html.LabelFor(model => model.Criteria.PublicSpace)
                    </div>
                    <div class="editor-field">
                    @Html.CheckBoxFor(model => model.Criteria.TravelerSpace)
                    @Html.LabelFor(model => model.Criteria.TravelerSpace)
                    </div>
                    <div class="editor-field">
                    @Html.CheckBoxFor(model => model.Criteria.Hotel)
                    @Html.LabelFor(model => model.Criteria.Hotel)
                    </div>
                    <div class="editor-field">
                    @Html.CheckBoxFor(model => model.Criteria.Telecentre)
                    @Html.LabelFor(model => model.Criteria.Telecentre)
                    </div>
                    <div class="editor-field">
                    @Html.CheckBoxFor(model => model.Criteria.BuisnessCenter)
                    @Html.LabelFor(model => model.Criteria.BuisnessCenter)
                    </div>
                    <div class="editor-field">
                    @Html.CheckBoxFor(model => model.Criteria.CoworkingSpace)
                    @Html.LabelFor(model => model.Criteria.CoworkingSpace)
                    </div>
                    <div class="editor-field">
                    @Html.CheckBoxFor(model => model.Criteria.WorkingHotel)
                    @Html.LabelFor(model => model.Criteria.WorkingHotel)
                    </div>
                    <div class="editor-field">
                    @Html.CheckBoxFor(model => model.Criteria.PrivateArea)
                    @Html.LabelFor(model => model.Criteria.PrivateArea)
                    </div>

                    <p class="green">@Worki.Resources.Views.Localisation.LocalisationFormString.Services</p>
                    <div>
                        <div id="searchOption0">
                            <div id="searchOptionToReplace">
                            </div>
                        </div>
                    </div>
                    <div class="resetSearch">
                        <input type="submit" class="btn_green_check imageBtn" value="Réinitialiser"/>
                    </div>

                }
            </div>
		</div>
    </div>

    <div class="resultDiv dashedLeft float-right">
        <div class="searchFormBlock">
            @for (int i = 0; i < Model.PageResults.Count; ++i)
			{ 
				var index = Model.PagingInfo.GlobalIndex(i);
                @Html.Partial(MVC.Search.Views._SearchResultSummary, Model.GetSingleResult(index))
			}

			<div class="pager">
				@{
					RouteValueDictionary rvd = new RouteValueDictionary(ViewContext.RouteData.Values);
					foreach (string key in Request.QueryString.Keys)
					{
						rvd[key] = Request.QueryString[key].ToString();
					}
				}
				@Html.PageLinks(Model.PagingInfo, x => { rvd["page"] = x; return Url.Action(MVC.Search.ActionNames.FullSearchResult, rvd); })
			</div>
        </div>    
    </div>

	<div class="clear">
    </div>
</div>

<div class="adRow">
    @Html.Partial(MVC.Shared.Views._DirectAccess)
    @Html.Partial(MVC.Shared.Views._IndexGallery)
</div>

@section ScriptContent
{
    @Html.Partial(MVC.Shared.Views._CufonScript)
    @{ ViewData["IsSearchForm"] = true; }
    @Html.Partial(MVC.Search.Views._SelectSearchScript, Model.Criteria.LocalisationData, ViewData)
    @Html.Partial(MVC.Shared.Views._IndexGalleryScript)
    <script type="text/javascript">
        require(["@MiscHelpers.jquery"], function () {
            require(["@Url.VersionedContent(Links.Scripts.jquery_rateit_js)"]);
            require(["@MiscHelpers.jqueryui", "http://maps.google.com/maps/api/js?sensor=true&region=FR&callback=initialize"], function () {
                require(["@Url.VersionedContent(Links.Scripts.WorkiMap_js)"], function () {
                    require.ready(function () {
                        var resultsMap = new WorkiMap('resultsMap');
                        resultsMap.LoadSearchMap();
                        var where = "@Model.Criteria.Place";
                        resultsMap.CenterSearchResults(where);
                        var latitude = null;
                        var longitude = null;
                        var nom = null;
                        var desc = null;
                        var LL = null;
                        var bounds = new google.maps.LatLngBounds();
                        @foreach (var localisation in Model.PageResults)
                        {
                            <text>
                            latitude = @localisation.Latitude;
                            longitude = @localisation.Longitude;
                            nom = "@localisation.Name";
                            LL = new google.maps.LatLng(latitude,longitude);
                            resultsMap.LoadPin(LL, nom);
                            bounds.extend(LL);
                            </text>
                        }
                        @if (Model.PageResults.Count >= 2)
                        {
                            <text>
                            resultsMap.FitBoundsSearchResults(bounds);
                            </text>
                        }
                        var workiAutocomplete = new WorkiAutoComplete('#Criteria_Place');
                        workiAutocomplete.SetAutocomplete();
                    });
                });
            });
        });

        function initialize() {
                
        }
    </script>
}
