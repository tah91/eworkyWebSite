@model IEnumerable<OfferPrice>
@{
    Dictionary<int, string> paymentPeriodTypes = Offer.GetPaymentPeriodTypes();
}

<table class="offerPricesRows">
    @if (Model.Count() == 0)
    {
        foreach(var pair in paymentPeriodTypes)
        {
        @Html.Partial(MVC.Offer.Views._OfferPrice, new OfferPrice(){PriceType = pair.Key}) 
        }
    }
    else
    {
        foreach (var item in Model)
        {
        @Html.Partial(MVC.Offer.Views._OfferPrice, item)
        }
    }
</table>

<script type="text/javascript">
    $("#addItem").click(function () {
        $.ajax({
            url: this.href,
            cache: false,
            success: function (html) {
                $(".offerPricesRows").append(html);
            }
        });
        return false;
    });

    $('.paymentPeriodType input[type="checkbox"]').click(function (){
        var priceType = $(this).attr("name");
        if ($(this).is(':checked')) {
            $.ajax({
                url: "@Url.Action(MVC.Offer.AddOfferPrice())",
                data: ({ priceType: priceType }),
                cache: false,
                success: function (html) {
                    $(".offerPricesRows").append(html);
                }
            });
        } else {
            $(".offerPricesRow").each(function () {
                var currentPriceType = $(this).find('input[type="hidden"]').eq(1).val();
                if (currentPriceType == priceType) {
                    $(this).remove();
                    return true;
                }
            });
        }
    });

    $("button.deleteRow").live("click", function () {
        $(this).parents(".offerPricesRow:first").remove();
        return false;
    });
</script>