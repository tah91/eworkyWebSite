@model RentalSearchCriteria

@section HeadContent
{
    <link href="@Url.VersionedContent(Links.Content.RentalDetail_min_css)" rel="stylesheet" type="text/css" />
    <link href="@Url.VersionedContent(Links.Content.Search_min_css)" rel="stylesheet" type="text/css" />
    <link href="@Url.VersionedContent(Links.Content.jquery_ui_1_8_12_custom_min_css)" rel="stylesheet" type="text/css"/>
}

@RazorHelpers.TitleDiv(string.Format(Worki.Resources.Views.Search.SearchString.YourSearchResult, Model.Results.Count), "Red")

<div class="detailContent">
    <div class="resultDiv dashedRight float-left">
        <div class="searchFormBlockLeft">
            @for (int i = 0; i < Model.PageResults.Count; ++i)
			{
				var index = Model.PagingInfo.GlobalIndex(i);
                @Html.Partial(MVC.Rental.Views._Rental, Model.GetSingleResult(index))
			}
        </div>

        <div class="pager">
			@{
				RouteValueDictionary rvd = new RouteValueDictionary(ViewContext.RouteData.Values);
				foreach (string key in Request.QueryString.Keys)
				{
					rvd[key] = Request.QueryString[key].ToString();
				}
			}
			@Html.PageLinks(Model.PagingInfo, x => { rvd["page"] = x; return Url.Action(MVC.Rental.ActionNames.FullSearchResult, rvd); })
		</div>
    </div>
        <div class="searchFormBlock float-right">
			<div class="contentBlock">
				<div class="searchResultFormDiv" id="searchFormReset">
					<h3 class="red">@Worki.Resources.Views.Rental.RentalString.AccurateSearch</h3>
					@using (Html.BeginForm(MVC.Rental.ActionNames.RentalSearch, MVC.Rental.Name, FormMethod.Post, new { id = "searchform" }))
					{
					@Html.AntiForgeryToken()
					<h4 class="toogle_trigger_red toogle_trigger_click"><span class="red">@Worki.Resources.Views.Rental.RentalString.Price</span></h4>
					<div class="toogle_container">
						<div class="block">
							<p class="marginb5">@Worki.Resources.Views.Rental.RentalString.Between</p>
							@Html.TextBoxFor(model => model.MinRate, new { @class = "Rsrchcol" }) @Worki.Resources.Views.Rental.RentalString.And 
							@Html.TextBoxFor(model => model.MaxRate, new { @class = "Rsrchcol" }) @Worki.Resources.Views.Rental.RentalString.MoneyUnit
						</div>
					</div>

					<h4 class="toogle_trigger_red toogle_trigger_click"><span class="red">@Worki.Resources.Views.Rental.RentalString.Area</span></h4>
					<div class="toogle_container">
						<div class="block">
							<div>
								<p class="marginb5">@Worki.Resources.Views.Rental.RentalString.Between</p>
								@Html.TextBoxFor(model => model.MinSurface, new { @class = "Rsrchcol" }) @Worki.Resources.Views.Rental.RentalString.And 
								@Html.TextBoxFor(model => model.MaxSurface, new { @class = "Rsrchcol" }) @Worki.Resources.Views.Rental.RentalString.AreaUnit
							</div>
						</div>
					</div>

					<h4 class="toogle_trigger_red toogle_trigger_click"><span class="red">@Worki.Resources.Views.Rental.RentalString.Localisation</span></h4>
					<div class="toogle_container">
						<div class="block">
							@Html.TextBoxFor(model => model.Place, new { placeholder = Worki.Resources.Views.Home.HomeString.ExampleLocation, @class = "width98" })
						</div>
					</div>

					<h4 class="toogle_trigger_red toogle_trigger_click"><span class="red">@Worki.Resources.Views.Rental.RentalString.AvailableDate</span></h4>
					<div class="toogle_container">
						<div class="block">
							@Html.TextBoxFor(model => model.RentalData.AvailableDate, new { placeholder = @Worki.Resources.Views.Rental.RentalString.DateExample, @class = "dp width98" })
						</div>
					</div>

					<h4 class="toogle_trigger_red toogle_trigger_click"><span class="red">@Worki.Resources.Views.Rental.RentalString.ContractType</span></h4>
					<div class="toogle_container">
						<div class="block">
							@Html.DropDownListFor(model => model.RentalData.LeaseType, Model.LeaseTypeSelect)
						</div>
					</div>

					<h4 class="toogle_trigger_red toogle_trigger_click"><span class="red">@Worki.Resources.Views.Rental.RentalString.Others</span></h4>
					<div class="toogle_container">
						<div class="block">
							<ul class="marginl0">
							@foreach (var feature in Rental.RentalFeatureDict)
							{ 
								<li>
									@{var enumName = Enum.GetName(typeof(RentalFeatureType), feature.Key);}
									@Html.CheckBox(enumName,Model.RentalData.HasFeature((RentalFeatureType)feature.Key))
									@Html.LabelFor(feature.Value, enumName)
								</li>
							}
							</ul>
						</div>
					</div>
                    
					<div class="resetSearch margint15">
						<input type="submit" class="buttonRed buttonStd imageBtn" value="@Worki.Resources.Views.Shared.SharedString.Search"/>
					</div>
					}
				</div>
			</div>
		</div>
		<div class="clear">
		</div>
</div>

@section ScriptContent
{
    <script type="text/javascript">
        require(["@Url.VersionedContent(Links.Scripts.tabs_js)"]);
    </script>
    <script type="text/javascript">
        require(["@MiscHelpers.jqueryui"], function () {
            $.datepicker.regional['fr'] = {
                closeText: 'Fermer',
                prevText: '&#x3c;Préc',
                nextText: 'Suiv&#x3e;',
                currentText: 'Courant',
                monthNames: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'],
                monthNamesShort: ['Jan', 'Fév', 'Mar', 'Avr', 'Mai', 'Jun', 'Jul', 'Aoû', 'Sep', 'Oct', 'Nov', 'Déc'],
                dayNames: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],
                dayNamesShort: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],
                dayNamesMin: ['Di', 'Lu', 'Ma', 'Me', 'Je', 'Ve', 'Sa'],
                weekHeader: 'Sm',
                dateFormat: 'dd/mm/yy',
                firstDay: 1,
                isRTL: false,
                showMonthAfterYear: false,
                yearSuffix: ''
            };
            $.datepicker.setDefaults($.datepicker.regional['fr']);
            $(".dp").datepicker({
                changeMonth: true,
                changeYear: true,
                yearRange: '1900:2020'
            });
        });
        require(["@Url.VersionedContent(Links.Scripts.date_js)"], function () {
            $("#searchform").submit(function () {
                var val = $("#RentalData_AvailableDate").val();
                var date = Date.parseExact(val, "dd/MM/yyyy");
                var newVal = date.toString('MM/dd/yyyy');
                $("#RentalData_AvailableDate").val(newVal);
                return true;
            });
        });
    </script>
}
