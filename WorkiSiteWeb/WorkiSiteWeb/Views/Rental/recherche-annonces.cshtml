@model Worki.Data.Models.RentalSearchCriteria

@section HeadContent
{
	<title>@Html.WorkiTitle(Worki.Resources.Views.Rental.RentalString.Rental)</title>
    <link href="@Url.VersionedContent(Links.Content.Index_min_css)" rel="stylesheet" type="text/css" />
    <link href="@Url.VersionedContent(Links.Content.skin_min_css)" rel="stylesheet" type="text/css"  />
    <link href="@Url.VersionedContent(Links.Content.RentalDetail_min_css)" rel="stylesheet" type="text/css"  />
    <link href="@Url.VersionedContent(Links.Content.Search_min_css)" rel="stylesheet" type="text/css" />
    <link href="@Url.VersionedContent(Links.Content.jquery_ui_1_8_12_custom_min_css)" rel="stylesheet" type="text/css"/>
}

<div class="mainRowRental">
    @{ViewData["PicPath"] = "/Content/images/photo3.jpg";}
    @Html.Partial(MVC.Shared.Views._PictureContainer, ViewData) 

    <div class="halfContainer searchFormContainer float-right">
        <div class="searchFormDiv">

            @RazorHelpers.TitleDiv(Worki.Resources.Views.Search.SearchString.Search, "Red")

            @using (Html.BeginForm(MVC.Rental.ActionNames.RentalSearch, MVC.Rental.Name, FormMethod.Post, new { id = "searchform" }))
            {
                @Html.AntiForgeryToken()
                <div class="localisationField">
                    <span class="editor-field">
                        @Html.TextBoxFor(model => model.Place, new { placeholder = "plop" })
                    </span>

                    <p>
                        @Html.HiddenFor(model => model.RentalData.Latitude)
                        @Html.HiddenFor(model => model.RentalData.Longitude)
                    </p>
                </div>
                
                <p class="red rentalElementDesc2">@Html.Label(Worki.Resources.Views.Rental.RentalString.RentalType)</p>
                <div class="editor-field">
                    <p>@Html.DropDownListFor(model=>model.RentalData.Type, Model.RentalTypeSelect)</p>
                </div>
                
                <div class="halfContainer float-left margint15">
                    <p class="red">@Html.Label(Worki.Resources.Views.Rental.RentalString.MinPrice)</p>
                    <div class="editor-field">
                        <p class="rentalElementPic2">@Html.TextBoxFor(model => model.MinRate, new { placeholder = "plop" }) @Worki.Resources.Views.Rental.RentalString.MoneyUnit</p>
                    </div>

                    <p class="red rentalElementDesc2">@Html.Label(Worki.Resources.Views.Rental.RentalString.MinArea)</p>
                    <div class="editor-field">
                        <p>@Html.TextBoxFor(model => model.MinSurface, new { placeholder = "plop" }) @Worki.Resources.Views.Rental.RentalString.AreaUnit</p>
                    </div>

                    <p class="red rentalElementDesc2">@Html.Label(Worki.Resources.Views.Rental.RentalString.Availability)</p>
                    <div>
                        <p>@Html.CheckBoxFor(model => model.RentalData.AvailableNow) <span id="msg">@Worki.Resources.Views.Rental.RentalString.Now</span></p>
                    </div>

                    <div class="editor-field">
                        <p>@Html.TextBoxFor(model => model.RentalData.AvailableDate, new { @class = "dp" })</p>
                    </div>
                </div>
                
                <div class="halfContainer float-right margint15">
                    <div class="label-field red">
                        @Html.LabelFor(model => model.MaxRate)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.MaxRate, new { placeholder = "plop" }) @Worki.Resources.Views.Rental.RentalString.MoneyUnit
                    </div>

                    <p class="red rentalElementDesc2">@Html.Label(Worki.Resources.Views.Rental.RentalString.MaxArea)</p>
                    <div class="editor-field">
                        <p>@Html.TextBoxFor(model => model.MaxSurface, new { placeholder = "plop" }) @Worki.Resources.Views.Rental.RentalString.AreaUnit</p>
                    </div>
                </div>
                
                <div class="clear"></div>                
                <div>
                    <div class="submitSearchContainer float-right margint15">
                        <input type="submit" class="btn_green_check imageBtn" value="Rechercher"/>
                    </div>
                </div>
            } 
        </div>
    </div>
</div>

<div class="clear"></div>

@section ScriptContent
{
    <script type="text/javascript">
        require(["@MiscHelpers.jqueryui"], function () {
            $.datepicker.regional['fr'] = {
                closeText: 'Fermer',
                prevText: '&#x3c;Préc',
                nextText: 'Suiv&#x3e;',
                currentText: 'Courant',
                monthNames: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'],
                monthNamesShort: ['Jan', 'Fév', 'Mar', 'Avr', 'Mai', 'Jun', 'Jul', 'Aoû', 'Sep', 'Oct', 'Nov', 'Déc'],
                dayNames: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],
                dayNamesShort: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],
                dayNamesMin: ['Di', 'Lu', 'Ma', 'Me', 'Je', 'Ve', 'Sa'],
                weekHeader: 'Sm',
                dateFormat: 'dd/mm/yy',
                firstDay: 1,
                isRTL: false,
                showMonthAfterYear: false,
                yearSuffix: ''
            };
            $.datepicker.setDefaults($.datepicker.regional['fr']);
            $(".dp").datepicker({
                changeMonth: true,
                changeYear: true,
                yearRange: '1900:2020'
            });
        });
        require(["@Url.VersionedContent(Links.Scripts.date_js)"], function () {
            $("#searchform").submit(function () {
                var val = $("#RentalData_AvailableDate").val();
                var date = Date.parseExact(val, "dd/MM/yyyy");
                var newVal = date.toString('MM/dd/yyyy');
                $("#RentalData_AvailableDate").val(newVal);
                return true;
            });
        });

        $("#RentalData_AvailableNow").click(function () {
            if ($("#RentalData_AvailableNow:checked").val() == "true") {
                $("#RentalData_AvailableDate").hide();
                $("#msg").replaceWith('<span id="msg">@Worki.Resources.Views.Rental.RentalString.Now</span>')
            }
            else {
                $("#RentalData_AvailableDate").show();
                $("#msg").replaceWith('<span id="msg">@Worki.Resources.Views.Rental.RentalString.ChooseDate</span>')
            }
        });

        function init() {
            $("#RentalData_AvailableDate").hide();
//            $("#MinRate").attr("value", null);
//            $("#MinRate").attr("placeholder", "Ex : 100");

//            $("#MaxRate").attr("value", null);
//            $("#MaxRate").attr("placeholder", "Ex : 10000");

//            $("#MinSurface").attr("value", null);
//            $("#MinSurface").attr("placeholder", "Ex : 10");

//            $("#MaxSurface").attr("value", null);
//            $("#MaxSurface").attr("placeholder", "Ex : 100");

//            $("#Date").attr("placeholder", "@Worki.Resources.Views.Rental.RentalString.DateExample");
//            $("#Place").attr("placeholder", "@Worki.Resources.Views.Home.HomeString.ExampleLocation");
        };

        $(document).ready(function () {
            init();
        });
    </script>
}