@model Worki.Data.Models.SearchCriteriaFormViewModel

<h3 class="blue">@Worki.Resources.Views.Search.SearchString.RefineSearch</h3>
@using (Html.BeginForm(MVC.Localisation.ActionNames.FullSearch, MVC.Localisation.Name, FormMethod.Post, new { id = "searchform" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Criteria.NorthEastLat)
    @Html.HiddenFor(model => model.Criteria.NorthEastLng)
    @Html.HiddenFor(model => model.Criteria.SouthWestLat)
    @Html.HiddenFor(model => model.Criteria.SouthWestLng)
    @Html.HiddenFor(model => model.Criteria.SearchType)
    @Html.HiddenFor(model => model.Criteria.ResultView)
    @Html.HiddenFor(model => model.Criteria.GlobalType)
    if (Model.Criteria.SearchType == eSearchType.ePerName)
    { 
    @Html.HiddenFor(model => model.Criteria.LocalisationData.Name)
    }
	@Html.HiddenFor(model => model.Criteria.LocalisationData.Latitude)
    @Html.HiddenFor(model => model.Criteria.LocalisationData.Longitude)
    <h4 class="toogle_item toogle_trigger toogle_trigger_click active"><span class="blue">@Worki.Resources.Views.Localisation.LocalisationString.Localisation</span></h4>
    <div class="toogle_container active">
        <div class="block">
            <div class="editor-field float-left">
                @Html.TextBoxFor(model => model.Criteria.Place)
            </div>
            <div class="buttonStd buttonBlue refineSubmit linkImg float-right">
                <a href="#" id="resetPlace">@Worki.Resources.Views.Shared.SharedString.Reset</a>
            </div>
            <div class="clear"></div>
        </div>
    </div>
                    
    <h4 class="toogle_item toogle_trigger toogle_trigger_click active"><span class="blue">@Worki.Resources.Views.Localisation.LocalisationFormString.Offers</span></h4>
    <div class="toogle_container active">
        <div class="block">
            <div class="editor-field">
                @Html.DropDownListFor(m => m.Criteria.OfferData.Type, Model.Offers, new { @class = "offerSelect" })
            </div>
        </div>
	</div>

    <h4 class="toogle_item toogle_trigger toogle_trigger_click active"><span class="blue">@Worki.Resources.Views.Localisation.LocalisationFormString.Facilities</span></h4>
    <div class="toogle_container active">
        <div class="block" id="serviceSelector">
            @Html.Partial(MVC.Localisation.Views._ServicesSelector)
        </div>
    </div>
                    
    <h4 class="toogle_item toogle_trigger toogle_trigger_click active"><span class="blue">@Worki.Resources.Views.Search.SearchString.KindOfLocation</span></h4>
    <div class="toogle_container active">
        <div class="block">
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.Criteria.CoworkingSpace)
                @Html.LabelFor(model => model.Criteria.CoworkingSpace)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.Criteria.Telecentre)
                @Html.LabelFor(model => model.Criteria.Telecentre)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.Criteria.SharedOffice)
                @Html.LabelFor(model => model.Criteria.SharedOffice)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.Criteria.BuisnessCenter)
                @Html.LabelFor(model => model.Criteria.BuisnessCenter)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.Criteria.SpotWifi)
                @Html.LabelFor(model => model.Criteria.SpotWifi)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.Criteria.CoffeeResto)
                @Html.LabelFor(model => model.Criteria.CoffeeResto)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.Criteria.Biblio)
                @Html.LabelFor(model => model.Criteria.Biblio)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.Criteria.TravelerSpace)
                @Html.LabelFor(model => model.Criteria.TravelerSpace)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.Criteria.WorkingHotel)
                @Html.LabelFor(model => model.Criteria.WorkingHotel)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.Criteria.PrivateArea)
                @Html.LabelFor(model => model.Criteria.PrivateArea)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.Criteria.PublicSpace)
                @Html.LabelFor(model => model.Criteria.PublicSpace)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.Criteria.Hotel)
                @Html.LabelFor(model => model.Criteria.Hotel)
            </div>
        </div>
    </div>

    <h4 class="toogle_item toogle_trigger toogle_trigger_click"><span class="blue">@Worki.Resources.Views.Localisation.LocalisationFormString.Services</span></h4>
    <div class="toogle_container">
        <div class="block">
            <div>
                <div id="searchOption0">
                    <div id="searchOptionToReplace">
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="clear"></div>
}

<script type="text/javascript">
    require(["@Links.Scripts.dropdown_js"], function () {
        InitDropdown("#@DropDownModel.OrderByDD");
    });

    require(["@Links.Scripts.Utils_js"], function () {
        InitLoadPending();
        InitScroller();
    });

    var mapSearch = null;
    require(["@Url.VersionedContent(Links.Scripts.Utils_js)","@Url.VersionedContent(Links.Scripts.jquery_rateit_js)", "@MiscHelpers.UrlConstants.jqueryui", "@Url.VersionedContent(Links.Scripts.WorkiMap_js)"], function () {
        require(["@Url.VersionedContent(Links.Scripts.WorkiSearchMap_js)"], function () {
            refreshResults = function (data) {
                $("#searchResults").replaceWith(data.list);
                mapSearch.PushResults(data.place, data.localisations);
                $('div.rateit').rateit();
                $("#searchSelectorContainer").replaceWith(data.order);
                $(".titleDivContainer h1").html(data.title);
                $('.loaderBlock').addClass("visuallyhidden");
            };

            mapSearch = new WorkiMapSearch('@Url.Action(MVC.Localisation.ActionNames.MapItemSummary, MVC.Localisation.Name)', 
            '@Url.Action(MVC.Localisation.ActionNames.MapItemLink, MVC.Localisation.Name)',
            '@Url.Action(MVC.Localisation.AjaxFullSearch(null))', 
            @(Model.Criteria.ResultView == eResultView.Map ? "true" : "false"),
            refreshResults);

            //map initialization
            require(["http://maps.google.com/maps/api/js?sensor=true&region=FR&callback=initialize", "@Links.Scripts.map_markerclusterer_js"], function () {

            });
        });
    });
</script>

@Html.Partial(MVC.Localisation.Views._MapScript)