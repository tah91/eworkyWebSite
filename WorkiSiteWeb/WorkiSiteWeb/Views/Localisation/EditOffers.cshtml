@model Worki.Data.Models.OfferCounterModel
		   
@section HeadContent
{
    <title>@Html.WorkiTitle(Worki.Resources.Views.Localisation.LocalisationString.Edit)
    </title>
    <link href="@Url.VersionedContent(Links.Content.LocalisationForm_min_css)" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.13/themes/base/jquery-ui.css" id="theme">
    <link rel="stylesheet" href="@Url.VersionedContent(Links.Content.jquery_fileupload_ui_min_css)" />
    <link href="@Url.VersionedContent(Links.Content.colorbox_css)" rel="stylesheet" type="text/css"/>
}
@RazorHelpers.TitleDiv("Editer les offres", "Blue")

<div class="detailContent">
	<div class="blockContainer">
    	<div class="contentBlock">
		    <h3 class="blue">@Worki.Resources.Views.Shared.SharedString.Offers</h3>
            <div class="offerCounting">
                @using (Html.BeginForm())
                {
                <table>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.BuisnessLoungeCount)
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.BuisnessLoungeCount)
                        </td>
                        <td>
                            @Html.LabelFor(m => m.WorkstationCount)
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.WorkstationCount)
                        </td>
                        <td>
                            @Html.LabelFor(m => m.DesktopCount)
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.DesktopCount)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.MeetingRoomCount)
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.MeetingRoomCount)
                        </td>
                        <td>
                            @Html.LabelFor(m => m.SeminarRoomCount)
                        </td>
                        <td> 
                            @Html.TextBoxFor(m => m.SeminarRoomCount)
                        </td>
                        <td>
                            @Html.LabelFor(m => m.VisioRoomCount)
                        </td>
                        <td> 
                            @Html.TextBoxFor(m => m.VisioRoomCount)
                        </td>
                    </tr>
                </table>
                <div class="editor-field float-right">
		            <input type="submit" class="buttonStd buttonBlue" value="@Worki.Resources.Views.Shared.SharedString.Valid"/>
	            </div>
	            <div class="clear"></div>
                }
            </div>

            <div class="helpText">
            </div>
		    <div class="marginb5">
            @foreach (var offerType in Model.OfferLists.Keys)
            {
                <h3>@Localisation.GetOfferType((int)offerType)</h3>
                var offersOfType = Model.OfferLists[offerType];

                foreach (var offer in offersOfType)
                {
                @Html.Partial(MVC.Offer.Views._OfferItem, new OfferFormListModelItem { Offer = offer, IsSharedOffice = Model.IsSharedOffice })
                }
            }
		    </div>
            <div class="emptyOfferForm">
            </div>
            <div class="buttonStd buttonBlue linkImg float-left">
                @Html.ActionLink(Worki.Resources.Views.Offer.OfferString.AddOffer, MVC.Offer.AjaxAdd(Model.Localisation.ID, Model.Localisation.IsSharedOffice()), new { id = "addOffer" })
		    </div>
            <div class="clear"></div>
            <script type="text/javascript">
                require(["@Url.VersionedContent(Links.Scripts.Utils_js)"], function () {
                    $(".offerCounting form").submit(function () {
                        var action = '@Url.Action(MVC.Localisation.EditOffers(Model.Localisation.ID, null))';

                        var successFunc = function (data) {
                            $(".helpText").html(data.help);
                            $(".emptyOfferForm").html(data.form);
                            $.colorbox.close();
                            $(".editOffer").colorbox({ width: "50%" });
                        }

                        var errorBuilder = new ErrorBuilder('offerCounting', 'offerErrorContainer');

                        AppAjax(
			                action,
			                "POST",
			                $(this).serializeArray(),
                            successFunc,
                            errorBuilder.ErrorFunc
		                );
                        return false;
                    });
                });

                $(".deleteOffer").live('click', function () {
                    $.ajax({
                        type: 'POST',
                        url: this.href,
                        cache: false,
                        success: function (html) {
                            $(".offersTable").replaceWith(html);
                            $(".editOffer").colorbox({ width: "50%" });
                        }
                    });
                    return false;
                });

                require(["@Url.VersionedContent(Links.Scripts.jquery_colorbox_js)"], function () {
                    $(".editOffer").colorbox({ width: "50%" });
                    $("#addOffer").colorbox({ width: "50%" });
                });
            </script>
	    </div>
	</div>
</div>
