@model Worki.Data.Models.SearchSingleResultViewModel

@section HeadContent
{
    @{
        var metaData = Model.Localisation.GetMetaData();
        metaData.Url = Model.Localisation.GetDetailFullUrl(Url);
        }
    @Html.Partial(MVC.Shared.Views._MetaDataHeader, metaData) 
    <link href="@Url.VersionedContent(Links.Content.Search_min_css)" rel="stylesheet" type="text/css" />
    <link href="@Url.VersionedContent(Links.Content.SearchResults_min_css)" rel="stylesheet" type="text/css" />
    <link href="@Url.VersionedContent(Links.Content.LocalisationDetail_min_css)" rel="stylesheet" type="text/css" />
    <link href="@Url.VersionedContent(Links.Content.rateit_min_css)" rel="stylesheet" type="text/css" />	
    <link href="@Url.VersionedContent(Links.Content.Profil_min_css)" rel="stylesheet" type="text/css"/>
}

@if (Model.FromSearch)
{ 
<div class="pager pagerTop float-left">
    @{ 
	    var rvd = new RouteValueDictionary(ViewContext.RouteData.Values);
	    foreach (string key in Request.QueryString.Keys)
	    {
		    rvd[key] = Request.QueryString[key];
	    }
    }
    @Html.ActionLink(Worki.Resources.Views.Search.SearchString.ReturnToResult, MVC.Search.ActionNames.FullSearchResult, rvd, new System.Collections.Generic.Dictionary<string, object> { { "class", "bold" } })
</div>
<div class="pager pagerTop float-right">
    @Html.PageDetailLinks(Model.Index, Model.TotalItems, x => { rvd["index"] = x; return Url.Action(MVC.Search.ActionNames.FullSearchResultDetail, rvd); }, "< Fiche Précédente", "Fiche Suivante >")
</div>
<div class="clear">
</div>
}
@Html.Partial(MVC.Shared.Views._LocalisationDetail, Model.Localisation)

@section ScriptContent
{
    <script type="text/javascript">
        require(["@Url.VersionedContent(Links.Content.galleria.galleria_1_2_4_js)"], function () {
            require.ready(function () {
                // Load the classic theme
                Galleria.loadTheme('/Content/Galleria/galleria.classic.js');

                // Initialize Galleria
                $('#gallery').galleria({
                    //width: 600,
                    height: 350,
                    showInfo: false
                });
            });
        });
        require(["@Url.VersionedContent(Links.Scripts.jquery_rateit_js)"], function () {
            //rateit
            BindRateIt = function (name) {
                var rateItId = '#rateIt' + name;
                //var id = '#Comment_' + name;
                var id = '#' + name;
                $(rateItId).bind('rated', function (event, value) {
                    $(id).val(value);
                });
            }
            BindRateIt("Rating");
            BindRateIt("RatingPrice");
            BindRateIt("RatingWifi");
            BindRateIt("RatingDispo");
            BindRateIt("RatingWelcome");
        });

        require(["@Url.VersionedContent(Links.Scripts.tabs_js)"]);
            
        //favorites
        $("#favLinkAddButton").live("click", function () {
			$.ajax({
					url: "@Url.Action(MVC.Profil.ActionNames.AddToFavorite,MVC.Profil.Name)",
					data: { "id": '@User.Identity.Name', "locId" : @Model.Localisation.ID },
					success: function (data) {
						$("#favLink").html(data);
					}
				});
		});
		$("#favLinkDelButton").live("click", function () {
			$.ajax({
					url: "@Url.Action(MVC.Profil.ActionNames.RemoveFromFavorite,MVC.Profil.Name)",
					data: { "id": '@User.Identity.Name', "locId" : @Model.Localisation.ID },
					success: function (data) {
						$("#favLink").html(data);
					}
				});
		});
        require(["https://apis.google.com/js/plusone.js"], function () {
            { lang: 'fr' }
        });
    </script>
    @Html.Partial(MVC.Shared.Views._CufonScript)
	@Html.Partial(MVC.Shared.Views._CommentFormScript, Model.Localisation)
}
