@model WorkiSiteWeb.Models.Localisation

<div class="localisationDetail borderRadius">
    <div class="localisationDetailHead">
        <div class="localisationLogo float-left">
		@RazorHelpers.CenterImage(MiscHelpers.GetUserImagePath(Model.GetLogoPic()), Model.Name)
        </div>
        <div class="localisationTitle float-left">
            <div class="float-left blue bold">
                <span class="localisationName">@Model.Name</span>
            </div>
@*            <div class="localisationServicesContainer float-left">
                @Html.Partial(MVC.Shared.Views._IconeServices)
            </div>*@
            <div class="clear">
            </div>
            <div class="localisationSubtitle">
                <span class="localisationCity blue">@Localisation.LocalisationTypes[Model.TypeValue]</span>&nbsp;&nbsp;
                @{var itinLink = "http://maps.google.com/maps?daddr=" + Model.Adress + " " + Model.PostalCode + " " + Model.City;}
                <a href="@itinLink" target="_blank">
                    @Model.Adress - @Model.PostalCode @Model.City
                </a>
            </div>
        </div>
        <div class="localisationShare float-right">
        @{
			var link = Html.GetFullUrl(MVC.Localisation.ActionNames.Details, MVC.Localisation.Name, new { id = Model.ID, name = ControllerHelpers.GetSeoTitle(Model.Name) });
			if (Request.IsAuthenticated)
			{
				FormsIdentity ident = User.Identity as FormsIdentity;
				if (ident != null)
				{
					FormsAuthenticationTicket ticket = ident.Ticket;
					var id = Member.GetIdFromUserData(ticket.UserData);
					if (Model.FavoriteLocalisations.Where(f => f.MemberId == id).Count() > 0)
					{
						ViewData[ProfilDashboardModel.DelFavorite] = true;
					}
					else
					{
						ViewData[ProfilDashboardModel.AddToFavorite] = true;
					}
				}
			}
        }
            <div id="fb-root">
            </div>
            <script src="http://connect.facebook.net/fr_FR/all.js#xfbml=1"></script>
            <fb:like href="@link" layout="button_count" show_faces="false" font="arial" style="vertical-align: top;">
            </fb:like>
			<!-- Placez cette balise à l'endroit où vous souhaitez que le bouton +1 s'affiche --> 
			<g:plusone size="medium" href="@link"></g:plusone>                       
            <a  href="http://twitter.com/share" 
                class="twitter-share-button"
                data-text="@("Je vous recommande de découvrir ce lieu de travail : " + Model.Name)" 
                data-count="horizontal" 
                data-via="eWorky"
                data-counturl="@link">
                Tweet</a>
            <script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>  
			<div id="favLink">
				@Html.Partial(MVC.Shared.Views._AddToFavorite)
			</div>              
        </div>
        <div class="clear">
        </div>
    </div>
    <div class="detailContent">
        <div class="localisationDetailLeft blockContainer dashedRight float-left">
            @if (Model.LocalisationFiles.Count > 0)
			{
            <div class="localisationGallery contentBlock">
                <div id="gallery">
                    @foreach (var item in Model.LocalisationFiles.OrderBy(f => !f.IsDefault))
					{
                        <a href="@MiscHelpers.GetUserImagePath(item.FileName)">
            	            <img title="@Model.Name" alt="@Model.Name" src="@MiscHelpers.GetUserImagePath(item.FileName)"/>
        	            </a>                        
					}
                </div>
            </div>
			}
            @{
				var generalFeatures = Model.GetFeaturesOfType(FeatureType.General, new List<Feature> { Feature.AvoidMorning, Feature.AvoidLunch, Feature.AvoidAfternoom, Feature.AvoidEvening, Feature.LocalisationOwner });
            }
            <div class="localisationDescription contentBlock">
                <h3 class="blue">Description</h3>
                <div class="localisationDesc">
                    @Html.Nl2Br(Model.Description)
                </div>
                <div class="featureTag">
                    <ul>
                    @foreach (var item in generalFeatures)
					{
                        <li>@RazorHelpers.FeatureTag(item)</li>
					}       
                    @if (Model.LocalisationData != null && Model.LocalisationData.CoffeePrice.HasValue)
					{
                        <li>@WorkiResources.Views.Shared.SharedString.CoffeePrice : @string.Format(new System.Globalization.CultureInfo("fr-FR", false), "{0:C}", Model.LocalisationData.CoffeePrice)</li>
					}
                    </ul>
                </div>
                <div class="clear">
                </div>
            </div>
            @{
				var workingPlaceFeatures = Model.GetFeaturesOfType(FeatureType.WorkingPlace, new List<Feature> { Feature.FreeArea, Feature.SingleDesk, Feature.Workstation, Feature.BuisnessRoom });
            }
            @if (workingPlaceFeatures.Count > 0)
			{
            <div class="localisationServices contentBlock">
                <h3 class="blue">Services</h3>

                <div class="featureTag">
                    <ul>
                    @foreach (var item in workingPlaceFeatures)
					{
                        <li>@RazorHelpers.FeatureTag(item)</li>
					}
                    </ul>
                </div> 
                <div class="clear">
                </div>
            </div>   
			}
            @if (Model.HasOffer() && Model.HasOfferExcept(LocalisationOffer.FreeArea))
			{
            <div class="localisationOffers contentBlock">
                <h3 class="blue">Offres</h3>
                @{
				var meetingRoomFeatures = new List<Feature>();
				var seminarRoomFeatures = new List<Feature>();
				var visioRoomFeatures = new List<Feature>();
				var emptyFeature = new List<Feature>();
                }
                @if (Model.HasOffer(LocalisationOffer.MeetingRoom))
				{
					meetingRoomFeatures = Model.GetFeaturesOfType(FeatureType.MeetingRoom, new List<Feature> { Feature.MeetingRoom });
                    @RazorHelpers.FeatureToogle(WorkiResources.Models.Localisation.LocalisationFeatures.MeetingRoom, meetingRoomFeatures)
				}
                @if (Model.HasOffer(LocalisationOffer.SeminarRoom))
				{
					seminarRoomFeatures = Model.GetFeaturesOfType(FeatureType.SeminarRoom, new List<Feature> { Feature.SeminarRoom });
                    @RazorHelpers.FeatureToogle(WorkiResources.Models.Localisation.LocalisationFeatures.SeminarRoom, seminarRoomFeatures)
				}
                @if (Model.HasOffer(LocalisationOffer.VisioRoom))
				{
					visioRoomFeatures = Model.GetFeaturesOfType(FeatureType.VisioRoom, new List<Feature> { Feature.VisioRoom });
                    @RazorHelpers.FeatureToogle(WorkiResources.Models.Localisation.LocalisationFeatures.VisioRoom, visioRoomFeatures)
				}
                @if (Model.HasOffer(LocalisationOffer.BuisnessRoom))
				{
                    @RazorHelpers.FeatureToogle(WorkiResources.Models.Localisation.LocalisationFeatures.BuisnessRoom, emptyFeature)
				}
                @if (Model.HasOffer(LocalisationOffer.Workstation))
				{
                    @RazorHelpers.FeatureToogle(WorkiResources.Models.Localisation.LocalisationFeatures.Workstation, emptyFeature)
				}
                @if (Model.HasOffer(LocalisationOffer.SingleDesk))
				{
                    @RazorHelpers.FeatureToogle(WorkiResources.Models.Localisation.LocalisationFeatures.SingleDesk, emptyFeature)
				}
                <div class="clear">
                </div>
            </div> 
			}
            <div class="localisationComments contentBlock">
                <h3 class="blue">@WorkiResources.Models.Localisation.Localisation.GiveYourAdvice</h3>
                <div id="commentFormDiv">
                @if (Request.IsAuthenticated)
				{
                    @Html.Partial(MVC.Shared.Views._CommentForm, new Comment { LocalisationID = Model.ID, Localisation = Model })
				}
				else
				{ 
                    @Html.ActionLink(WorkiResources.Views.Account.AccountString.Login, MVC.Account.LogOn(null, Request.RawUrl))
				}
                </div>
                @{
					ViewData[Comment.DisplayRelatedLocalisation] = false;
                }
				@foreach (var com in Model.GetOrderedComments())
				{
					if (com.Member == null)
					{
						continue;
					}
					@Html.Partial(MVC.Shared.Views._LocalisationSingleComment, com, ViewData)
				}
            </div>
        </div>
        <div class="localisationDetailRight blockContainer float-right">
            <div class="contentBlock">
            <h3 class="blue">@WorkiResources.Views.Localisation.LocalisationFormString.Access</h3>
                <div class="localisationMap">
                    @Html.Partial(MVC.Shared.Views._Map)
                </div>
            @if (Model.HasAccesField())
			{
				<div class="localisationAccessDetail">
				@if (!string.IsNullOrEmpty(Model.PublicTransportation))
				{
                    <span class="localisationInformation">@WorkiResources.Models.Localisation.Localisation.PublicTransportation : </span>
                    @Model.PublicTransportation<br />
				}
                @if (!string.IsNullOrEmpty(Model.RoadAccess))
				{
                    <span class="localisationInformation">@WorkiResources.Models.Localisation.Localisation.RoadAccess : </span>
                    @Model.RoadAccess<br />
				}
                @if (!string.IsNullOrEmpty(Model.Station))
				{
                    <span class="localisationInformation">@WorkiResources.Models.Localisation.Localisation.Station : </span>
                    @Model.Station<br />
				}
				</div>
			}
            </div>
@*            <div class="contentBlock">
                <h3 class="blue">Recommendé par</h3>
				<div class="commentAvatar borderedImg float-left">
				@RazorHelpers.CenterImage(MiscHelpers.GetUserImagePath(Model.Member.MemberMainData.Avatar), Model.Member.GetDisplayName())
				</div>
				<span class="boldLink blue">@Html.ActionLink(Model.Member.GetDisplayName(), MVC.Profil.Detail(Model.Member.MemberId))</span><br />
				@if (Model.HasFeature(Feature.LocalisationOwner, FeatureType.General))
				{	 
					<span>@LocalisationBinder.LocalisationFeatureDict[(int)Feature.LocalisationOwner]</span>
				}
				<div class="clear">
				</div>
            </div>*@
			@if (Roles.IsUserInRole(MiscHelpers.AdminRole))
			{
   
	   			<div class="contentBlock">
					<h3 class="blue">Infos Admin</h3>
					@{
						var lastEdition = Model.GetLastEdition();
						var creation = Model.GetCreation();
					}
					@if (creation != null)
					{
						<span class="localisationInformation">Ajouté par : </span><span class="boldLink blue">@Html.ActionLink(creation.Member.GetDisplayName(), MVC.Profil.Detail(creation.Member.MemberId))</span><br />
						<span class="localisationInformation">le : </span>@String.Format("{0:d/M/yyyy HH:mm:ss}", creation.ModificationDate)<br />
                    }
					@if (lastEdition != null)
     {
						<span class="localisationInformation">Dernière édition par : </span><span class="boldLink blue">@Html.ActionLink(lastEdition.Member.GetDisplayName(), MVC.Profil.Detail(lastEdition.Member.MemberId))</span><br />
						<span class="localisationInformation">le : </span>@String.Format("{0:d/M/yyyy HH:mm:ss}", lastEdition.ModificationDate)<br />
     }
                    
				</div>
            }
            <div class="localisationMiscRatings contentBlock">
                <h3 class="blue">L'avis des eWorkers</h3>
                <table>
                    <tr>
                        <td>
                            @Html.ReadOnlyRating(Model.GetRatingAverage(RatingType.General))&nbsp;&nbsp;
                        </td>
                        <td>
                            <span class="bold">Avis général</span>
                        </td>                    
                    </tr>
                    @if (Model.IsFreeLocalisation())
                    {
                    <tr>
                        <td>
                            @Html.ReadOnlyRating(Model.GetRatingAverage(RatingType.Price))&nbsp;&nbsp;
                        </td>
                        <td>
                            @WorkiResources.Models.Localisation.Localisation.RatingPrice
                        </td>                    
                    </tr>
                    <tr>
                        <td>
                            @Html.ReadOnlyRating(Model.GetRatingAverage(RatingType.Wifi))&nbsp;&nbsp;
                        </td>
                        <td>
                            @WorkiResources.Models.Localisation.Localisation.RatingWifi
                        </td>                    
                    </tr>
                    <tr>
                        <td>
                            @Html.ReadOnlyRating(Model.GetRatingAverage(RatingType.Dispo))&nbsp;&nbsp;
                        </td>
                        <td>
                            @WorkiResources.Models.Localisation.Localisation.RatingDispo
                        </td>                    
                    </tr>
                    <tr>
                        <td>
                            @Html.ReadOnlyRating(Model.GetRatingAverage(RatingType.Welcome))&nbsp;&nbsp;
                        </td>
                        <td>
                            @WorkiResources.Models.Localisation.Localisation.RatingWelcome
                        </td>                    
                    </tr>
                    }
                </table>
				@{
                    var haveAvoid = Model.GetAvoidString();
                    if (!string.IsNullOrEmpty(haveAvoid))
                    {
						<span class="localisationInformation">@WorkiResources.Views.Localisation.LocalisationFormString.AvoidPeriods : </span>@haveAvoid
                    }
				}
            </div>
            @if (!(Model.IsFreeLocalisation() && Model.ContactEmpty()))
            {
                <div class="localisationGeneralInfo contentBlock">
                    <h3 class="blue">@WorkiResources.Views.Home.HomeString.Contact</h3>
                    @if (!Model.ContactEmpty())
                    {
                        if (!string.IsNullOrEmpty(Model.Mail))
                        {
                            @Html.Mailto(Model.Mail, Model.Mail)<br />
                        }
                        if (!string.IsNullOrEmpty(Model.WebSite))
                        {
                            <a href="@Model.WebSite" target="_blank">@WorkiResources.Models.Localisation.Localisation.WebSite</a><br />
                        }
                        if (!string.IsNullOrEmpty(Model.PhoneNumber))
                        {
                            <span class="localisationInformation">Tel : </span>
                            @Html.GetPhoneFormat(Model.PhoneNumber)<br />
                        }
                        if (!string.IsNullOrEmpty(Model.Fax))
                        {
                            <span class="localisationInformation">Fax : </span>
                            @Html.GetPhoneFormat(Model.Fax)<br />
                        }
                    }
                    else
                    {
                        <span>@WorkiResources.Views.Localisation.LocalisationString.YouKnowContactUs</span>
                    }
                </div>
            }
            <div class="localisationSchedule contentBlock">
                <h3 class="blue">Horaires</h3>
                @if (Model.HasFeature(Feature.Access24, FeatureType.General))
                {
                    @Html.FeatureLabelFor(Feature.Access24, FeatureType.General)
                }
                else if (Model.HasOpenningTimes())
                {
                <table>
                    @RazorHelpers.OpenningRow(Model, DayOfWeek.Monday, WorkiResources.Views.Localisation.LocalisationFormString.Monday)
                    @RazorHelpers.OpenningRow(Model, DayOfWeek.Tuesday, WorkiResources.Views.Localisation.LocalisationFormString.Tuesday)
                    @RazorHelpers.OpenningRow(Model, DayOfWeek.Wednesday, WorkiResources.Views.Localisation.LocalisationFormString.Wednesday)
                    @RazorHelpers.OpenningRow(Model, DayOfWeek.Thursday, WorkiResources.Views.Localisation.LocalisationFormString.Thursday)
                    @RazorHelpers.OpenningRow(Model, DayOfWeek.Friday, WorkiResources.Views.Localisation.LocalisationFormString.Friday)
                    @RazorHelpers.OpenningRow(Model, DayOfWeek.Saturday, WorkiResources.Views.Localisation.LocalisationFormString.Saturday)
                    @RazorHelpers.OpenningRow(Model, DayOfWeek.Sunday, WorkiResources.Views.Localisation.LocalisationFormString.Sunday)
                </table>
                }
                else
                {
                    @WorkiResources.Views.Shared.SharedString.KnowHouly @EmailService.ContactMail
                }
            </div>
        </div>
        <div class="clear">
        </div>
    </div>
    <div class="editionLink float-right">
	@Html.ActionLink(WorkiResources.Views.Localisation.LocalisationString.EditPlace, MVC.Localisation.Edit(Model.ID))
    </div>
	@if (Roles.IsUserInRole(MiscHelpers.AdminRole))
	{
		<div class="editionLink float-right">
		@Html.ActionLink(WorkiResources.Views.Localisation.LocalisationString.DeletePlace, MVC.Localisation.Delete(Model.ID))
		</div>
	}
    <div class="clear">
    </div>
</div>
