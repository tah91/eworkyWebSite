@model Comment

@{
	var displayLoc = false;
    var avatarPath = ControllerHelpers.GetUserImagePath(Model.Member.MemberMainData.Avatar, true);
	if (ViewData.ContainsKey(Comment.DisplayRelatedLocalisation))
	{ 
		displayLoc = (bool)ViewData[Comment.DisplayRelatedLocalisation];
	}
}

<div class="profilComment" itemprop="reviews" itemscope itemtype="http://schema.org/Review">
	<div class="profilCommentHead">
		<span itemprop="reviewRating" itemscope itemtype="http://schema.org/Rating">
			@RazorHelpers.ReadOnlyRating(Model.GetRating())
		</span>
        <span class="memberLink">
            <span class="boldLink blue">@Html.ActionLink(Model.Member.GetDisplayName(), MVC.Account.Public(Model.Member.MemberId), new { itemprop = "author" })</span>
            @if (displayLoc)
            { 
                <span> @Worki.Resources.Views.Localisation.LocalisationString.AboutPlace </span>
                <span class="boldLink blue"><a href="@Model.Localisation.GetDetailFullUrl(Url)">@Model.Localisation.Name</a></span>
            }
        </span>
    </div>
    <div class="commentAvatar borderedImg float-left">
    @RazorHelpers.CenterImage(avatarPath != null ? avatarPath : @Links.Content.images.avatar_png, Model.Member.GetDisplayName())
    </div>
    <div class="commentContent float-left" style=@(displayLoc ? "width:70%" : "")>
        <p itemprop="description">@Html.Nl2Br(Model.GetPost())</p>
        <p class="commentDate">@Html.DisplayLocalDate(Model.Date, true)</p>
		<meta  itemprop="datePublished" content="@Model.Date.ToString("yyyy-MM-dd")" />
    </div>
	@if (displayLoc)
	{
		<a href="@Model.Localisation.GetDetailFullUrl(Url)">
			<div class="commentLocAvatar borderedImg float-right">
			@RazorHelpers.CenterImage(ControllerHelpers.GetUserImagePath(Model.Localisation.GetMainPic(), true), Model.Localisation.Name)
			</div>
		</a>
	}
    <div class="clear">
    </div>
</div> 
@if (Roles.IsUserInRole(MiscHelpers.AdminConstants.AdminRole))
{ 
    @Html.ActionLink(Worki.Resources.Views.Shared.SharedString.DeleteComment, MVC.Localisation.DeleteComment(Model.LocalisationID, Model.ID, Model.Localisation.GetDetailFullUrl(Url)))
}
