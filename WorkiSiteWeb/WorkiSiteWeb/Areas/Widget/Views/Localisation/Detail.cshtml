@model Localisation

@{  
    //var dict = Model.Criteria.GetDictionnary();
    //var rvd = new RouteValueDictionary(dict);
    //var back = Url.RequestContext.HttpContext.Request.UrlReferrer.PathAndQuery;
    var itinLink = "http://maps.google.com/maps?daddr=" + Model.Adress + " " + Model.PostalCode + " " + Model.City;
    var fullName = Model.GetFullName();
}

@section HeadContent
{
    <link href="@Url.VersionedContent(Links.Content.jquery_ui_1_8_12_custom_min_css)" rel="stylesheet" type="text/css" />
}

<div class="detail-main">
    <div class="well">
        <div class="row-fluid">
            <div class="span6">
                @if (Model.LocalisationFiles.Count > 0)
                {
                    <div id="detail-gallery" class="carousel slide">
                        <div class="carousel-inner">
                            @foreach (var item in Model.LocalisationFiles.OrderBy(f => !f.IsDefault))
                            {
                                <div class="item @(item.IsDefault ? "active" : "")">
                                    <img title="@fullName" alt="@fullName" src="@ControllerHelpers.GetUserImagePath(item.FileName)"/>
                                </div>
                            }
                        </div>
                        <a class="carousel-control left" href="#detail-gallery" data-slide="prev">&lsaquo;</a>
                        <a class="carousel-control right" href="#detail-gallery" data-slide="next">&rsaquo;</a>
                    </div>
                }
            </div>
            <div class="span6 detail-description relative">
                <h2 class="blue">@Model.Name</h2>
                <p class="bold orange">@Localisation.GetLocalisationType(Model.TypeValue)</p>
                <p>
                    <a href="@itinLink" target="_blank" class="blue">
                        @Model.Adress - @Model.PostalCode @Model.City
                    </a>
                </p>
                <div class="detail-map">
                    @Html.Partial(MVC.Shared.Views._Map, Model.GetMapModel())
                </div>
            </div>
        </div>
        <div class="row-fluid">
            <div class="span9">
                @Html.Nl2Br(Model.GetDescription())
            </div>
            <div class="span3 detail-contact">
                @if (!Model.ContactEmpty())
                {
                    if (!string.IsNullOrEmpty(Model.Mail))
                    {
		            @Html.Mailto("E-mail", Model.Mail, new { itemprop = "email" })<br />
                    }
                    if (!string.IsNullOrEmpty(Model.WebSite))
                    {
		            <a href="@WebHelper.GetWebsite(Model.WebSite)" title="@Model.WebSite" target="_blank" itemprop="url">@Worki.Resources.Models.Localisation.Localisation.WebSite</a><br />
                    }
                    if (!string.IsNullOrEmpty(Model.Facebook))
                    {
		            <a href="@WebHelper.GetWebsite(Model.Facebook)" target="_blank"><span>@Worki.Resources.Views.Localisation.LocalisationString.FacebookPage</span></a><br />
                    }
                    if (!string.IsNullOrEmpty(Model.Twitter))
                    {
		            <a href="@WebHelper.GetTwitter(Model.Twitter)" target="_blank"><span>@WebHelper.GetLoginTwitter(Model.Twitter)</span></a><br />
                    }
                    if (!string.IsNullOrEmpty(Model.PhoneNumber))
                    {
		            <span class="bold">@Worki.Resources.Views.Localisation.LocalisationString.Tel</span>
		            <span itemprop="telephone">@Html.GetPhoneFormat(Model.PhoneNumber)</span><br />
                    }
                    if (!string.IsNullOrEmpty(Model.Fax))
                    {
		            <span class="bold">@Worki.Resources.Views.Localisation.LocalisationString.Fax</span>
		            <span itemprop="faxNumber">@Html.GetPhoneFormat(Model.Fax)</span><br />
                    }
                }
            </div>
        </div>
    </div>
</div>

@foreach (var offer in Model.GetBookableOffers())
{
    <div class="result-item">
        <div class="row-fluid">
            <div class="span3">
                @RazorHelpers.CenterImage(ControllerHelpers.GetUserImagePath(offer.GetMainPic(), true, PictureData.GetFolder(ProviderType.Offer)), Links.Content.images.no_image_png, offer.Name)
            </div>
            <div class="span6 offer-item relative">
                <h4 class="blue">@offer.Name</h4>    
                <div class="result-features">
			        @foreach (var item in offer.OfferFeatures.Take(5))
			        {
                        <span class="badge">@FeatureHelper.Display(item)</span>
                    }
                </div>
            </div>
            <div class="span3 offer-prices relative">
                <ul>
                    @foreach (var price in offer.OfferPrices.OrderBy(op => op.Price).Take(3))
                    {
                        var priceDisplay = price.GetPriceDisplay();
                        if (!string.IsNullOrEmpty(priceDisplay))
                        {
                            <li>
                                <span class="badge badge-warning">@priceDisplay</span>
                            </li>
                        }
                    }
                </ul>
                <div class="pull-right">
                    <a href="@Url.Action(MVC.Widget.Localisation.CreateBooking(offer.Id))" class="btn btn-primary booking-btn">
                        <i class="icon-ok icon-white"></i>
                        @Worki.Resources.Views.Booking.BookingString.BookIt
                    </a>  
                </div>
            </div>
        </div>
    </div>
}

<div id="booking-container">
</div>

<script type="text/javascript">
    var isConnected = @(Request.IsAuthenticated ? "true" : "false");
    require(["@Url.VersionedContent(@Links.Scripts.bootstrap_carousel_js)", "@Url.VersionedContent(@Links.Scripts.bootstrap_transition_js)"], function () {
        $('.carousel').carousel({
          interval: null
        });
    });
    require(["@Url.VersionedContent(@Links.Scripts.bootstrap_modal_js)"], function () {
        $('.booking-btn').click(function () {
            if(isConnected){
                $.ajax({
                    url: this.href,
                    success: function (data) {
                        $('#booking-container').html(data);
                        $('#booking-popup').modal();
                    }
                });
            }
            else{
                $('#login-btn').click();
            }
            return false;
        });
    });
</script>