@model	OfferQuotationViewModel

@section HeadContent
{
	<title>@Html.WorkiTitle(Worki.Resources.Menu.Menu.Quoations)</title>
	<link href="@Url.VersionedContent(Links.Content.Dashboard_min_css)" rel="stylesheet" type="text/css" />
}

@{Html.RenderAction(MVC.Backoffice.Localisation.OfferHorizontalMenu(Model.Offer.Id));}

<div class="detailContent">

	<div class="blockContainer float-left contentLeft">
		@{Html.RenderAction(MVC.Backoffice.Localisation.OfferVerticalMenu(Model.Offer.Id, (int)OfferMenuType.Quotation));}
	</div>

	<div class="blockContainer float-left contentRight">
		@Html.Partial(MVC.Backoffice.Localisation.Views._OfferDropDown, new OfferDropDownModel { Offer = Model.Offer, UrlMaker = o => Url.Action(MVC.Backoffice.Localisation.OfferBooking(o.LocalisationId, o.Id)), Filter = OfferDropDownFilter.Quotation })
        <div class="contentBlock">
            @Html.Partial(MVC.Backoffice.Shared.Views._QuotationList, new QuotationListViewModel
            {
                Quotations = Model.Quotations,
                Title = Model.Offer.Name,
                UrlMaker = x => Url.Action(MVC.Backoffice.Localisation.OfferQuotation(Model.Offer.LocalisationId, Model.Offer.Id, x)),
                EmptyMessage = Worki.Resources.Views.BackOffice.BackOfficeString.NoWorkingQuotation
            })

        </div>
	</div>
	<div class="clear"></div>
</div>

@section ScriptContent
{
	<script type="text/javascript">
		require(["@Links.Scripts.dropdown_js"], function () {
			InitDropdown("#@DropDownModel.OfferDD");
		});
	</script>
}