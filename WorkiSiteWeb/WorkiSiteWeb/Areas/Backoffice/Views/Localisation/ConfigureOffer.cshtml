@model OfferModel<OfferFormViewModel>

@section HeadContent
{
	<title>@Html.WorkiTitle(Worki.Resources.Menu.Menu.Configure)</title>
	<link href="@Url.VersionedContent(Links.Content.Dashboard_min_css)" rel="stylesheet" type="text/css" />
}

@{Html.RenderAction(MVC.Backoffice.Localisation.OfferHorizontalMenu(Model.OfferModelId));}

<div class="detailContent">

	<div class="blockContainer float-left contentLeft">
		@{Html.RenderAction(MVC.Backoffice.Localisation.OfferVerticalMenu(Model.OfferModelId, (int)OfferMenuType.Config));}
	</div>

	<div class="blockContainer float-left contentRight">
		@{Html.RenderAction(MVC.Backoffice.Localisation.OfferDropdown(Model.OfferModelId, (int)OfferMenuType.Config));}
        @using (Html.BeginForm(MVC.Backoffice.Localisation.ActionNames.ConfigureOffer, MVC.Backoffice.Localisation.Name, FormMethod.Post, new { id = "configureOfferForm" }))
		{
		    <div class="contentBlock">
				<h3 class="blue">@Model.InnerModel.Offer.Name</h3>
	   		    @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.InnerModel.Offer.Name)
                @Html.HiddenFor(m => m.InnerModel.Offer.Type)
				@Html.HiddenFor(m => m.OfferModelId)
				<table class="configoffertable">
                    <tr>
						<td>
						    @Html.LabelFor(m => m.InnerModel.Offer.IsOnline)
						</td>
						<td>
							@Html.CheckBoxFor(m => m.InnerModel.Offer.IsOnline)
						</td>
					</tr>
                    @if (Model.InnerModel.Offer.CanHaveBooking)
                    { 
                    <tr>
						<td>
						    @Html.LabelFor(m => m.InnerModel.Offer.IsBookable)
						</td>
						<td>
							@Html.CheckBoxFor(m => m.InnerModel.Offer.IsBookable)
						</td>
					</tr>
                    }
                    @if (Model.InnerModel.Offer.CanHaveQuotation)
                    { 
                    <tr>
						<td>
						    @Html.LabelFor(m => m.InnerModel.Offer.IsQuotable)
						</td>
						<td>
							@Html.CheckBoxFor(m => m.InnerModel.Offer.IsQuotable)
						</td>
					</tr>
                    }
                    @if (Model.InnerModel.Offer.CanHaveBooking)
                    {
					<tr>
						<td>
							@Html.LabelFor(m => m.InnerModel.Offer.Period)
						</td>
						<td>
							@Html.DropDownListFor(m => m.InnerModel.Offer.Period, Model.InnerModel.Periods)
						</td>
					</tr>
                    <tr>
						<td>
							@Html.LabelFor(m => m.InnerModel.Offer.Currency)
						</td>
						<td>
							@Html.DropDownListFor(m => m.InnerModel.Offer.Currency, Model.InnerModel.Currencies)
						</td>
					</tr>
					<tr>
						<td>
							@Html.LabelFor(m => m.InnerModel.Offer.Price)
						</td>
						<td>
							@Html.TextBoxFor(m => m.InnerModel.Offer.Price)
						</td>
					</tr>
                    <tr>
						<td>
							@Html.LabelFor(m => m.InnerModel.Offer.PaymentType)
						</td>
						<td>
							@Html.DropDownListFor(m => m.InnerModel.Offer.PaymentType, Model.InnerModel.PaymentTypes)
						</td>
					</tr>
                    }
				</table>
		    </div>
		    <div class="editor-field float-right">
			    <input type="submit" class="buttonStd buttonBlue" value="@Worki.Resources.Views.Shared.SharedString.Valid"/>
		    </div>
		    <div class="clear"></div>
        }
	</div>
	<div class="clear">
	</div>
</div>

@section ScriptContent
{
	<script type="text/javascript">
	    require(["@Links.Scripts.dropdown_js"], function () {
	    	InitDropdown("#@DropDownModel.OfferDD");
	    });

	    $("#configureOfferForm").submit(function () {
	    	var offerPrice = $("#InnerModel_Offer_Price").val();
	    	var newOfferPrice = offerPrice.replace(",", ".");
	    	$("#InnerModel_Offer_Price").val(newOfferPrice);
	    	return true;
	    });
	</script>
}

