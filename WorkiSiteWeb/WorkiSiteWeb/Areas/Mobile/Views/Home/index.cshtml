@model Worki.Data.Models.SearchCriteriaFormViewModel

@section HeadContent
{
    <title>@Html.WorkiTitle(Worki.Resources.Views.Home.HomeString.BestWorkspace)</title>
    <link href="@Url.Content(Links.Content.Index_css)" rel="stylesheet" type="text/css" />
    <link href="@Url.Content(Links.Content.skin_css)" rel="stylesheet" type="text/css"/>
    <link href="@Url.Content(Links.Content.jquery_ui_1_8_12_custom_css)" rel="stylesheet" type="text/css"/>
}

<div class="detailContent">
	<div class="blockContainer">
		<div class="contentBlock">
			<h3 class="blue">Rechercher</h3>
			@using (Html.BeginForm(MVC.Mobile.Localisation.ActionNames.FullSearch, MVC.Mobile.Localisation.Name, FormMethod.Post, new { id = "searchform" }))
			{
				@Html.AntiForgeryToken()
				@Html.HiddenFor(model => model.Criteria.LocalisationData.Latitude)
				@Html.HiddenFor(model => model.Criteria.LocalisationData.Longitude)

				<div>
					@Html.DropDownListFor(model => model.Criteria.LocalisationOffer, Model.Offers)
				</div>
	   			<div>
					<button class="button" type="button" id="submitCurrentLoc">Près de ma position</button>
				</div>
				<div>
					ou près de
				</div>
				<div>
					@Html.TextBoxFor(model => model.Criteria.Place, new { placeHolder = Worki.Resources.Views.Home.HomeString.ExampleLocation }) 
				</div>
				<div>
					<input class="button" type="submit" value="Go !" />
				</div>

			}
		</div>

		<div class="contentBlock">
			@if (!Request.IsAuthenticated)
			{       
				@Html.Partial(MVC.Mobile.Shared.Views._Connexion, new LogOnModel())
			}
			else
			{
			   var displayName = User.Identity.Name;
			   FormsIdentity ident = User.Identity as FormsIdentity;
			   if (ident != null)
			   {
				   displayName = ControllerHelpers.GetIdentityDisplayName(User.Identity);
			   }
				<div>
					Bienvenue <span class="blue bold">@displayName</span> !
				</div>
				<div>
					@Html.ActionLink(Worki.Resources.Views.Shared.SharedString.Deconnect, MVC.Mobile.Account.LogOff())
				</div>
			}
		</div>
	</div>
</div>

@section ScriptContent
{
    <script type="text/javascript">
        require(["@Url.VersionedContent(Links.Scripts.jquery_placeholder_js)"], function () {
            $('input:text').placeholder();
        });

        require(["@MiscHelpers.jqueryui", "http://maps.google.com/maps/api/js?sensor=true&region=FR&callback=initialize"], function () {
            require(["@Url.VersionedContent(Links.Scripts.WorkiMap_js)"], function () {
                var workiAutocomplete = new WorkiAutoComplete('#Criteria_Place');
                workiAutocomplete.SetAutocomplete();
            });
        });

        function initialize() {

        }

        require.ready(function () {
            function successCallback(position) {
                    var latitude = position.coords.latitude;
        			var longitude = position.coords.longitude;
        			$('#Criteria_LocalisationData_Latitude').val(latitude);
        			$('#Criteria_LocalisationData_Longitude').val(longitude);
        			$("#Criteria_Place").val("");
        			$('#searchform').submit();
                }
            function errorCallback(error) {
                    alert('Essayer de rechercher en entrant un lieu');
                    return false;
                }
            $('#submitCurrentLoc').click(function () {
        	    if (navigator.geolocation) {
        	        navigator.geolocation.watchPosition(successCallback, errorCallback, { enableHighAccuracy: true, maximumAge: 30000, timeout: 27000 });
                }
            });
        });
    </script>
}
