@model Worki.Data.Models.SearchCriteriaFormViewModel

@section HeadContent
{
    <title>@Html.WorkiTitle(Worki.Resources.Views.Search.SearchString.SearchResult)</title>
    <link href="@Url.Content(Links.Content.Search_css)" rel="stylesheet" type="text/css" />
    <link href="@Url.Content(Links.Content.skin_css)" rel="stylesheet" type="text/css"  />
    <link href="@Url.Content(Links.Content.rateit_css)" rel="stylesheet" type="text/css" />
    <link href="@Url.Content(Links.Content.jquery_ui_1_8_12_custom_css) " rel="stylesheet" type="text/css"/>
}

<div class="">
    @Worki.Resources.Views.Search.SearchString.Search <span class="blue bold">@Localisation.GetOfferType(Model.Criteria.LocalisationOffer)</span> @Worki.Resources.Views.Mobile.MobileString.Near <span class="blue bold">@Model.Criteria.Place</span> @Model.Results.Count @Worki.Resources.Views.Search.SearchString.PlaceFound
</div>

<div class="clear">
</div>

<div class="detailContent">
    <div class="blockContainer">
        @for (int i = 0; i < Model.PageResults.Count; ++i)
		{ 
			var index = Model.PagingInfo.GlobalIndex(i);
            @Html.Partial(MVC.Mobile.Localisation.Views._SearchResultSummary, Model.GetSingleResult(index))
		}

		<div class="pager">
			@{
				RouteValueDictionary rvd = new RouteValueDictionary(ViewContext.RouteData.Values);
				foreach (string key in Request.QueryString.Keys)
				{
					rvd[key] = Request.QueryString[key].ToString();
				}
			}
			@Html.PageLinks(Model.PagingInfo, x => { rvd["page"] = x; return Url.Action(MVC.Localisation.ActionNames.FullSearchResult, rvd); })
		</div>
    </div>

	<div class="clear">
    </div>
</div>


@section ScriptContent
{
    <script type="text/javascript">
        require(["@Url.VersionedContent(Links.Scripts.jquery_rateit_js)"]);
    </script>
}
