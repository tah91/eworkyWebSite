// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static class MVC {
    static readonly ApiClass s_Api = new ApiClass();
    public static ApiClass Api { get { return s_Api; } }
    static readonly MobileClass s_Mobile = new MobileClass();
    public static MobileClass Mobile { get { return s_Mobile; } }
    public static Worki.Web.Controllers.AccountController Account = new Worki.Web.Controllers.T4MVC_AccountController();
    public static Worki.Web.Controllers.AdminController Admin = new Worki.Web.Controllers.T4MVC_AdminController();
    public static Worki.Web.Controllers.BookingController Booking = new Worki.Web.Controllers.T4MVC_BookingController();
    public static Worki.Web.Controllers.CaptchaImageController CaptchaImage = new Worki.Web.Controllers.T4MVC_CaptchaImageController();
    public static Worki.Web.Controllers.HomeController Home = new Worki.Web.Controllers.T4MVC_HomeController();
    public static Worki.Web.Controllers.LocalisationController Localisation = new Worki.Web.Controllers.T4MVC_LocalisationController();
    public static Worki.Web.Controllers.OfferController Offer = new Worki.Web.Controllers.T4MVC_OfferController();
    public static Worki.Web.Controllers.ProfilController Profil = new Worki.Web.Controllers.T4MVC_ProfilController();
    public static Worki.Web.Controllers.RentalController Rental = new Worki.Web.Controllers.T4MVC_RentalController();
    public static Worki.Web.Controllers.UploadImageController UploadImage = new Worki.Web.Controllers.T4MVC_UploadImageController();
    public static Worki.Web.Controllers.VisitorController Visitor = new Worki.Web.Controllers.T4MVC_VisitorController();
    public static T4MVC.EmailsController Emails = new T4MVC.EmailsController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC {
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class ApiClass {
        public readonly string Name = "Api";
        public Worki.Web.Areas.Api.Controllers.LocalisationController Localisation = new Worki.Web.Areas.Api.Controllers.T4MVC_LocalisationController();
        public T4MVC.Api.SharedController Shared = new T4MVC.Api.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class MobileClass {
        public readonly string Name = "Mobile";
        public Worki.Web.Areas.Mobile.Controllers.AccountController Account = new Worki.Web.Areas.Mobile.Controllers.T4MVC_AccountController();
        public Worki.Web.Areas.Mobile.Controllers.HomeController Home = new Worki.Web.Areas.Mobile.Controllers.T4MVC_HomeController();
        public Worki.Web.Areas.Mobile.Controllers.LocalisationController Localisation = new Worki.Web.Areas.Mobile.Controllers.T4MVC_LocalisationController();
        public T4MVC.Mobile.SharedController Shared = new T4MVC.Mobile.SharedController();
    }
}

   
namespace System.Web.Mvc {
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class T4Extensions {
        public static MvcHtmlString ActionLink(this HtmlHelper htmlHelper, string linkText, ActionResult result) {
            return htmlHelper.RouteLink(linkText, result.GetRouteValueDictionary());
        }

        public static MvcHtmlString ActionLink(this HtmlHelper htmlHelper, string linkText, ActionResult result, object htmlAttributes) {
            return ActionLink(htmlHelper, linkText, result, new RouteValueDictionary(htmlAttributes));
        }

        public static MvcHtmlString ActionLink(this HtmlHelper htmlHelper, string linkText, ActionResult result, IDictionary<string, object> htmlAttributes) {
            return htmlHelper.RouteLink(linkText, result.GetRouteValueDictionary(), htmlAttributes);
        }

        public static MvcForm BeginForm(this HtmlHelper htmlHelper, ActionResult result) {
            return htmlHelper.BeginForm(result, FormMethod.Post);
        }

        public static MvcForm BeginForm(this HtmlHelper htmlHelper, ActionResult result, FormMethod formMethod) {
            return htmlHelper.BeginForm(result, formMethod, null);
        }

        public static MvcForm BeginForm(this HtmlHelper htmlHelper, ActionResult result, FormMethod formMethod, object htmlAttributes) {
            return BeginForm(htmlHelper, result, formMethod, new RouteValueDictionary(htmlAttributes));
        }

        public static MvcForm BeginForm(this HtmlHelper htmlHelper, ActionResult result, FormMethod formMethod, IDictionary<string, object> htmlAttributes) {
            var callInfo = result.GetT4MVCResult();
            return htmlHelper.BeginForm(callInfo.Action, callInfo.Controller, callInfo.RouteValueDictionary, formMethod, htmlAttributes);
        }

        public static void RenderAction(this HtmlHelper htmlHelper, ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            htmlHelper.RenderAction(callInfo.Action, callInfo.Controller, callInfo.RouteValueDictionary);
        }

        public static MvcHtmlString Action(this HtmlHelper htmlHelper, ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return htmlHelper.Action(callInfo.Action, callInfo.Controller, callInfo.RouteValueDictionary);
        }
        public static string Action(this UrlHelper urlHelper, ActionResult result) {
            return urlHelper.RouteUrl(result.GetRouteValueDictionary());
        }

        public static string ActionAbsolute(this UrlHelper urlHelper, ActionResult result) {
            return string.Format("{0}{1}",urlHelper.RequestContext.HttpContext.Request.Url.GetLeftPart(UriPartial.Authority),
                urlHelper.RouteUrl(result.GetRouteValueDictionary()));
        }

        public static MvcHtmlString ActionLink(this AjaxHelper ajaxHelper, string linkText, ActionResult result, AjaxOptions ajaxOptions) {
            return ajaxHelper.RouteLink(linkText, result.GetRouteValueDictionary(), ajaxOptions);
        }

        public static MvcHtmlString ActionLink(this AjaxHelper ajaxHelper, string linkText, ActionResult result, AjaxOptions ajaxOptions, object htmlAttributes) {
            return ajaxHelper.RouteLink(linkText, result.GetRouteValueDictionary(), ajaxOptions, new RouteValueDictionary(htmlAttributes));
        }

        public static MvcHtmlString ActionLink(this AjaxHelper ajaxHelper, string linkText, ActionResult result, AjaxOptions ajaxOptions, IDictionary<string, object> htmlAttributes) {
            return ajaxHelper.RouteLink(linkText, result.GetRouteValueDictionary(), ajaxOptions, htmlAttributes);
        }

        public static MvcForm BeginForm(this AjaxHelper ajaxHelper, ActionResult result, AjaxOptions ajaxOptions) {
            return ajaxHelper.BeginForm(result, ajaxOptions, null);
        }

        public static MvcForm BeginForm(this AjaxHelper ajaxHelper, ActionResult result, AjaxOptions ajaxOptions, object htmlAttributes) {
            return BeginForm(ajaxHelper, result, ajaxOptions, new RouteValueDictionary(htmlAttributes));
        }

        public static MvcForm BeginForm(this AjaxHelper ajaxHelper, ActionResult result, AjaxOptions ajaxOptions, IDictionary<string, object> htmlAttributes) {
            var callInfo = result.GetT4MVCResult();
            return ajaxHelper.BeginForm(callInfo.Action, callInfo.Controller, callInfo.RouteValueDictionary, ajaxOptions, htmlAttributes);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result) {
            return MapRoute(routes, name, url, result, null /*namespaces*/);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result, object defaults) {
            return MapRoute(routes, name, url, result, defaults, null /*constraints*/, null /*namespaces*/);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result, string[] namespaces) {
            return MapRoute(routes, name, url, result, null /*defaults*/, namespaces);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result, object defaults, object constraints) {
            return MapRoute(routes, name, url, result, defaults, constraints, null /*namespaces*/);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result, object defaults, string[] namespaces) {
            return MapRoute(routes, name, url, result, defaults, null /*constraints*/, namespaces);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result, object defaults, object constraints, string[] namespaces) {
            // Create and add the route
            var route = CreateRoute(url, result, defaults, constraints, namespaces);
            routes.Add(name, route);
            return route;
        }

        // Note: can't name the AreaRegistrationContext methods 'MapRoute', as that conflicts with the existing methods
        public static Route MapRouteArea(this AreaRegistrationContext context, string name, string url, ActionResult result) {
            return MapRouteArea(context, name, url, result, null /*namespaces*/);
        }

        public static Route MapRouteArea(this AreaRegistrationContext context, string name, string url, ActionResult result, object defaults) {
            return MapRouteArea(context, name, url, result, defaults, null /*constraints*/, null /*namespaces*/);
        }

        public static Route MapRouteArea(this AreaRegistrationContext context, string name, string url, ActionResult result, string[] namespaces) {
            return MapRouteArea(context, name, url, result, null /*defaults*/, namespaces);
        }

        public static Route MapRouteArea(this AreaRegistrationContext context, string name, string url, ActionResult result, object defaults, object constraints) {
            return MapRouteArea(context, name, url, result, defaults, constraints, null /*namespaces*/);
        }

        public static Route MapRouteArea(this AreaRegistrationContext context, string name, string url, ActionResult result, object defaults, string[] namespaces) {
            return MapRouteArea(context, name, url, result, defaults, null /*constraints*/, namespaces);
        }

        public static Route MapRouteArea(this AreaRegistrationContext context, string name, string url, ActionResult result, object defaults, object constraints, string[] namespaces) {
            // Create and add the route
            if ((namespaces == null) && (context.Namespaces != null)) {
                 namespaces = context.Namespaces.ToArray();
            }
            var route = CreateRoute(url, result, defaults, constraints, namespaces);
            context.Routes.Add(name, route);
            route.DataTokens["area"] = context.AreaName;
            bool useNamespaceFallback = (namespaces == null) || (namespaces.Length == 0);
            route.DataTokens["UseNamespaceFallback"] = useNamespaceFallback;
            return route;
        }

        private static Route CreateRoute(string url, ActionResult result, object defaults, object constraints, string[] namespaces) {
            // Start by adding the default values from the anonymous object (if any)
            var routeValues = new RouteValueDictionary(defaults);

            // Then add the Controller/Action names and the parameters from the call
            foreach (var pair in result.GetRouteValueDictionary()) {
                routeValues.Add(pair.Key, pair.Value);
            }

            var routeConstraints = new RouteValueDictionary(constraints);

            // Create and add the route
            var route = new Route(url, routeValues, routeConstraints, new MvcRouteHandler());

            route.DataTokens = new RouteValueDictionary();

            if (namespaces != null && namespaces.Length > 0) {
                route.DataTokens["Namespaces"] = namespaces;
            }

            return route;
        }

        public static IT4MVCActionResult GetT4MVCResult(this ActionResult result) {
            var t4MVCResult = result as IT4MVCActionResult;
            if (t4MVCResult == null) {
                throw new InvalidOperationException("T4MVC was called incorrectly. You may need to force it to regenerate by right clicking on T4MVC.tt and choosing Run Custom Tool");
            }
            return t4MVCResult;
        }

        public static RouteValueDictionary GetRouteValueDictionary(this ActionResult result) {
            return result.GetT4MVCResult().RouteValueDictionary;
        }

        public static ActionResult AddRouteValues(this ActionResult result, object routeValues) {
            return result.AddRouteValues(new RouteValueDictionary(routeValues));
        }

        public static ActionResult AddRouteValues(this ActionResult result, RouteValueDictionary routeValues) {
            RouteValueDictionary currentRouteValues = result.GetRouteValueDictionary();

            // Add all the extra values
            foreach (var pair in routeValues) {
                currentRouteValues.Add(pair.Key, pair.Value);
            }

            return result;
        }

        public static ActionResult AddRouteValues(this ActionResult result, System.Collections.Specialized.NameValueCollection nameValueCollection) {
            // Copy all the values from the NameValueCollection into the route dictionary
            nameValueCollection.CopyTo(result.GetRouteValueDictionary());
            return result;
        }

        public static ActionResult AddRouteValue(this ActionResult result, string name, object value) {
            RouteValueDictionary routeValues = result.GetRouteValueDictionary();
            routeValues.Add(name, value);
            return result;
        }
        
        public static void InitMVCT4Result(this IT4MVCActionResult result, string area, string controller, string action) {
            result.Controller = controller;
            result.Action = action;
            result.RouteValueDictionary = new RouteValueDictionary();
            result.RouteValueDictionary.Add("Area", area ?? ""); 
            result.RouteValueDictionary.Add("Controller", controller);
            result.RouteValueDictionary.Add("Action", action);
        }

        public static bool FileExists(string virtualPath) {
            if (!HostingEnvironment.IsHosted) return false;
            string filePath = HostingEnvironment.MapPath(virtualPath);
            return System.IO.File.Exists(filePath);
        }

        static DateTime CenturyBegin=new DateTime(2001,1,1);
        public static string TimestampString(string virtualPath) {
            if (!HostingEnvironment.IsHosted) return string.Empty;
            string filePath = HostingEnvironment.MapPath(virtualPath);
            return Convert.ToString((System.IO.File.GetLastWriteTimeUtc(filePath).Ticks-CenturyBegin.Ticks)/1000000000,16);            
        }
    }
}



namespace T4MVC {
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}


  

   
[GeneratedCode("T4MVC", "2.0")]   
public interface IT4MVCActionResult {   
    string Action { get; set; }   
    string Controller { get; set; }   
    RouteValueDictionary RouteValueDictionary { get; set; }   
}   
  

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public class T4MVC_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult {
    public T4MVC_ActionResult(string area, string controller, string action): base()  {
        this.InitMVCT4Result(area, controller, action);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public class T4MVC_PartialViewResult : System.Web.Mvc.PartialViewResult, IT4MVCActionResult {
    public T4MVC_PartialViewResult(string area, string controller, string action): base()  {
        this.InitMVCT4Result(area, controller, action);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links {
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string date_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/date.min.js") ? Url("date.min.js") : Url("date.js");
                      
        public static readonly string date_min_js = Url("date.min.js");
        public static readonly string jquery_1_5_1_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.5.1-vsdoc.min.js") ? Url("jquery-1.5.1-vsdoc.min.js") : Url("jquery-1.5.1-vsdoc.js");
                      
        public static readonly string jquery_1_5_1_vsdoc_min_js = Url("jquery-1.5.1-vsdoc.min.js");
        public static readonly string jquery_1_5_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.5.1.min.js") ? Url("jquery-1.5.1.min.js") : Url("jquery-1.5.1.js");
                      
        public static readonly string jquery_1_5_1_min_js = Url("jquery-1.5.1.min.js");
        public static readonly string jquery_ui_1_8_11_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.8.11.min.js") ? Url("jquery-ui-1.8.11.min.js") : Url("jquery-ui-1.8.11.js");
                      
        public static readonly string jquery_ui_1_8_11_min_js = Url("jquery-ui-1.8.11.min.js");
        public static readonly string jquery_ui_1_8_12_custom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.8.12.custom.min.js") ? Url("jquery-ui-1.8.12.custom.min.js") : Url("jquery-ui-1.8.12.custom.js");
                      
        public static readonly string jquery_ui_1_8_12_custom_min_js = Url("jquery-ui-1.8.12.custom.min.js");
        public static readonly string jquery_ui_timepicker_addon_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-timepicker-addon.min.js") ? Url("jquery-ui-timepicker-addon.min.js") : Url("jquery-ui-timepicker-addon.js");
                      
        public static readonly string jquery_ui_timepicker_addon_min_js = Url("jquery-ui-timepicker-addon.min.js");
        public static readonly string jquery_fileupload_ui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-ui.min.js") ? Url("jquery.fileupload-ui.min.js") : Url("jquery.fileupload-ui.js");
                      
        public static readonly string jquery_fileupload_ui_min_js = Url("jquery.fileupload-ui.min.js");
        public static readonly string jquery_fileupload_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload.min.js") ? Url("jquery.fileupload.min.js") : Url("jquery.fileupload.js");
                      
        public static readonly string jquery_fileupload_min_js = Url("jquery.fileupload.min.js");
        public static readonly string jquery_iframe_transport_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.iframe-transport.min.js") ? Url("jquery.iframe-transport.min.js") : Url("jquery.iframe-transport.js");
                      
        public static readonly string jquery_iframe_transport_min_js = Url("jquery.iframe-transport.min.js");
        public static readonly string jquery_jcarousel_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.jcarousel.min.js") ? Url("jquery.jcarousel.min.js") : Url("jquery.jcarousel.js");
                      
        public static readonly string jquery_jcarousel_min_js = Url("jquery.jcarousel.min.js");
        public static readonly string jquery_placeholder_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.placeholder.min.js") ? Url("jquery.placeholder.min.js") : Url("jquery.placeholder.js");
                      
        public static readonly string jquery_placeholder_min_js = Url("jquery.placeholder.min.js");
        public static readonly string jquery_rateit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.rateit.min.js") ? Url("jquery.rateit.min.js") : Url("jquery.rateit.js");
                      
        public static readonly string jquery_rateit_min_js = Url("jquery.rateit.min.js");
        public static readonly string jquery_ui_autocomplete_selectFirst_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.autocomplete.selectFirst.min.js") ? Url("jquery.ui.autocomplete.selectFirst.min.js") : Url("jquery.ui.autocomplete.selectFirst.js");
                      
        public static readonly string jquery_ui_autocomplete_selectFirst_min_js = Url("jquery.ui.autocomplete.selectFirst.min.js");
        public static readonly string jquery_ui_datepicker_fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.datepicker-fr.min.js") ? Url("jquery.ui.datepicker-fr.min.js") : Url("jquery.ui.datepicker-fr.js");
                      
        public static readonly string jquery_ui_datepicker_fr_min_js = Url("jquery.ui.datepicker-fr.min.js");
        public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
                      
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
                      
        public static readonly string jquery_validate_vsdoc_min_js = Url("jquery.validate-vsdoc.min.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
                      
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
                      
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        public static readonly string main_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/main.min.js") ? Url("main.min.js") : Url("main.js");
                      
        public static readonly string main_min_js = Url("main.min.js");
        public static readonly string MicrosoftAjax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MicrosoftAjax.min.js") ? Url("MicrosoftAjax.min.js") : Url("MicrosoftAjax.js");
                      
        public static readonly string MicrosoftAjax_min_js = Url("MicrosoftAjax.min.js");
        public static readonly string MicrosoftMvcAjax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MicrosoftMvcAjax.min.js") ? Url("MicrosoftMvcAjax.min.js") : Url("MicrosoftMvcAjax.js");
                      
        public static readonly string MicrosoftMvcAjax_min_js = Url("MicrosoftMvcAjax.min.js");
        public static readonly string MicrosoftMvcValidation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MicrosoftMvcValidation.min.js") ? Url("MicrosoftMvcValidation.min.js") : Url("MicrosoftMvcValidation.js");
                      
        public static readonly string MicrosoftMvcValidation_min_js = Url("MicrosoftMvcValidation.min.js");
        public static readonly string modernizr_1_7_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-1.7.min.js") ? Url("modernizr-1.7.min.js") : Url("modernizr-1.7.js");
                      
        public static readonly string modernizr_1_7_min_js = Url("modernizr-1.7.min.js");
        public static readonly string order_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/order.min.js") ? Url("order.min.js") : Url("order.js");
                      
        public static readonly string order_min_js = Url("order.min.js");
        public static readonly string require_jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/require-jquery.min.js") ? Url("require-jquery.min.js") : Url("require-jquery.js");
                      
        public static readonly string require_jquery_min_js = Url("require-jquery.min.js");
        public static readonly string slides_jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slides.jquery.min.js") ? Url("slides.jquery.min.js") : Url("slides.jquery.js");
                      
        public static readonly string slides_jquery_min_js = Url("slides.jquery.min.js");
        public static readonly string tabs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.js") ? Url("tabs.min.js") : Url("tabs.js");
                      
        public static readonly string tabs_min_js = Url("tabs.min.js");
        public static readonly string WorkiAutocomplete_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/WorkiAutocomplete.min.js") ? Url("WorkiAutocomplete.min.js") : Url("WorkiAutocomplete.js");
                      
        public static readonly string WorkiAutocomplete_min_js = Url("WorkiAutocomplete.min.js");
        public static readonly string WorkiMap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/WorkiMap.min.js") ? Url("WorkiMap.min.js") : Url("WorkiMap.js");
                      
        public static readonly string WorkiMap_min_js = Url("WorkiMap.min.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string Admin_css = Url("Admin.css");
        public static readonly string Admin_min_css = Url("Admin.min.css");
        public static readonly string boilerplate_css = Url("boilerplate.css");
        public static readonly string boilerplate_min_css = Url("boilerplate.min.css");
        public static readonly string Booking_css = Url("Booking.css");
        public static readonly string Booking_min_css = Url("Booking.min.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class galleria {
            private const string URLPATH = "~/Content/galleria";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string classic_loader_gif = Url("classic-loader.gif");
            public static readonly string classic_map_png = Url("classic-map.png");
            public static readonly string galleria_1_2_4_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/galleria-1.2.4.min.js") ? Url("galleria-1.2.4.min.js") : Url("galleria-1.2.4.js");
                          
            public static readonly string galleria_1_2_4_min_js = Url("galleria-1.2.4.min.js");
            public static readonly string galleria_classic_css = Url("galleria.classic.css");
            public static readonly string galleria_classic_min_css = Url("galleria.classic.min.css");
            public static readonly string galleria_classic_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/galleria.classic.min.js") ? Url("galleria.classic.min.js") : Url("galleria.classic.js");
                          
            public static readonly string galleria_classic_min_js = Url("galleria.classic.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class icons {
            private const string URLPATH = "~/Content/icons";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string error_gif = Url("error.gif");
            public static readonly string exclamation_gif = Url("exclamation.gif");
            public static readonly string info_gif = Url("info.gif");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class images {
            private const string URLPATH = "~/Content/images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string arrow_png = Url("arrow.png");
            public static readonly string arrow_red_png = Url("arrow_red.png");
            public static readonly string avatar_png = Url("avatar.png");
            public static readonly string comm_content_png = Url("comm_content.png");
            public static readonly string cross_png = Url("cross.png");
            public static readonly string csv_import_png = Url("csv-import.png");
            public static readonly string delete_gif = Url("delete.gif");
            public static readonly string drh_png = Url("drh.png");
            public static readonly string favicon_png = Url("favicon.png");
            public static readonly string favorite_png = Url("favorite.png");
            public static readonly string followUs_footer_png = Url("followUs_footer.png");
            public static readonly string footer_jpg = Url("footer.jpg");
            public static readonly string geoloc_png = Url("geoloc.png");
            public static readonly string homeLogo1_png = Url("homeLogo1.png");
            public static readonly string homeLogo2_png = Url("homeLogo2.png");
            public static readonly string homeLogo3_png = Url("homeLogo3.png");
            public static readonly string homeLogo4_png = Url("homeLogo4.png");
            public static readonly string icon_facebook_png = Url("icon_facebook.png");
            public static readonly string iconeMap_png = Url("iconeMap.png");
            public static readonly string iconeMapRed_png = Url("iconeMapRed.png");
            public static readonly string independant_png = Url("independant.png");
            public static readonly string jobs_mark_jpeg = Url("jobs_mark.jpeg");
            public static readonly string jobs_steve_jpg = Url("jobs_steve.jpg");
            public static readonly string logo_png = Url("logo.png");
            public static readonly string logo_footer_png = Url("logo_footer.png");
            public static readonly string logo_nobeta_png = Url("logo_nobeta.png");
            public static readonly string logoMobile_png = Url("logoMobile.png");
            public static readonly string next_horizontal_png = Url("next-horizontal.png");
            public static readonly string next_vertical_png = Url("next-vertical.png");
            public static readonly string nomad_png = Url("nomad.png");
            public static readonly string pbar_ani_gif = Url("pbar-ani.gif");
            public static readonly string photo1_jpg = Url("photo1.jpg");
            public static readonly string photo2_jpg = Url("photo2.jpg");
            public static readonly string photo3_jpg = Url("photo3.jpg");
            public static readonly string photo4_jpg = Url("photo4.jpg");
            public static readonly string prev_horizontal_png = Url("prev-horizontal.png");
            public static readonly string prev_vertical_png = Url("prev-vertical.png");
            public static readonly string profil_social_png = Url("profil_social.png");
            public static readonly string recherche_min_png = Url("recherche-min.png");
            public static readonly string rechercher2_png = Url("rechercher2.png");
            public static readonly string retour_png = Url("retour.png");
            public static readonly string scoop_jpg = Url("scoop.jpg");
            public static readonly string serviceIcones_png = Url("serviceIcones.png");
            public static readonly string star_png = Url("star.png");
            public static readonly string startup_png = Url("startup.png");
            public static readonly string student_png = Url("student.png");
            public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
            public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
            public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
            public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
            public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
            public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
            public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
            public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
            public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
            public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
            public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
            public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
            public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
            public static readonly string users_jpg = Url("users.jpg");
            public static readonly string visitor_jpg = Url("visitor.jpg");
            public static readonly string vu_tele_png = Url("vu-tele.png");
            public static readonly string worker_png = Url("worker.png");
            public static readonly string worki_fb_jpg = Url("worki_fb.jpg");
            public static readonly string worki_footer_png = Url("worki_footer.png");
        }
    
        public static readonly string Index_css = Url("Index.css");
        public static readonly string Index_min_css = Url("Index.min.css");
        public static readonly string jquery_ui_1_8_12_custom_css = Url("jquery-ui-1.8.12.custom.css");
        public static readonly string jquery_ui_1_8_12_custom_min_css = Url("jquery-ui-1.8.12.custom.min.css");
        public static readonly string jquery_ui_timepicker_addon_css = Url("jquery-ui-timepicker-addon.css");
        public static readonly string jquery_ui_timepicker_addon_min_css = Url("jquery-ui-timepicker-addon.min.css");
        public static readonly string jquery_fileupload_ui_css = Url("jquery.fileupload-ui.css");
        public static readonly string jquery_fileupload_ui_min_css = Url("jquery.fileupload-ui.min.css");
        public static readonly string LocalisationDetail_css = Url("LocalisationDetail.css");
        public static readonly string LocalisationDetail_min_css = Url("LocalisationDetail.min.css");
        public static readonly string LocalisationForm_css = Url("LocalisationForm.css");
        public static readonly string LocalisationForm_min_css = Url("LocalisationForm.min.css");
        public static readonly string Mobile_css = Url("Mobile.css");
        public static readonly string Mobile_min_css = Url("Mobile.min.css");
        public static readonly string Press_css = Url("Press.css");
        public static readonly string Press_min_css = Url("Press.min.css");
        public static readonly string Profil_css = Url("Profil.css");
        public static readonly string Profil_min_css = Url("Profil.min.css");
        public static readonly string rateit_css = Url("rateit.css");
        public static readonly string rateit_min_css = Url("rateit.min.css");
        public static readonly string RentalDetail_css = Url("RentalDetail.css");
        public static readonly string RentalDetail_min_css = Url("RentalDetail.min.css");
        public static readonly string RentalForm_css = Url("RentalForm.css");
        public static readonly string RentalForm_min_css = Url("RentalForm.min.css");
        public static readonly string Search_css = Url("Search.css");
        public static readonly string Search_min_css = Url("Search.min.css");
        public static readonly string Site_css = Url("Site.css");
        public static readonly string Site_min_css = Url("Site.min.css");
        public static readonly string skin_css = Url("skin.css");
        public static readonly string skin_min_css = Url("skin.min.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class themes {
            private const string URLPATH = "~/Content/themes";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class @base {
                private const string URLPATH = "~/Content/themes/base";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    private const string URLPATH = "~/Content/themes/base/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                    public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                    public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                    public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                    public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                    public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                    public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                    public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                    public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                    public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                    public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                    public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                    public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                }
            
                public static readonly string jquery_ui_css = Url("jquery-ui.css");
                public static readonly string jquery_ui_min_css = Url("jquery-ui.min.css");
            }
        
        }
    
        public static readonly string Visitor_css = Url("Visitor.css");
        public static readonly string Visitor_min_css = Url("Visitor.min.css");
    }

}

static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;


    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}


namespace Worki.Web.Controllers {
    public partial class AccountController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AccountController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Activate() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Activate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ChangePassword() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ChangePassword);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FacebookOAuth() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FacebookOAuth);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AccountController Actions { get { return MVC.Account; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Account";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string LogOn = "connexion";
            public readonly string LogOff = "deconnexion";
            public readonly string Register = "inscription";
            public readonly string Activate = "activer";
            public readonly string ChangePassword = "changer-mdp";
            public readonly string ResetPassword = "reset-mdp";
            public readonly string FacebookLogOn = "facebook-logon";
            public readonly string FacebookOAuth = "facebook-oauth";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string changer_mdp = "~/Views/Account/changer-mdp.cshtml";
            public readonly string connexion = "~/Views/Account/connexion.cshtml";
            public readonly string inscription = "~/Views/Account/inscription.cshtml";
            public readonly string reset_mdp = "~/Views/Account/reset-mdp.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_AccountController: Worki.Web.Controllers.AccountController {
        public T4MVC_AccountController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult LogOn() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LogOn);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LogOn(Worki.Data.Models.LogOnModel model, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LogOn);
            callInfo.RouteValueDictionary.Add("model", model);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LogOff() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LogOff);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Register() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Register);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Register(Worki.Data.Models.RegisterModel model, string myCaptcha, string attempt) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Register);
            callInfo.RouteValueDictionary.Add("model", model);
            callInfo.RouteValueDictionary.Add("myCaptcha", myCaptcha);
            callInfo.RouteValueDictionary.Add("attempt", attempt);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Activate(string username, string key) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Activate);
            callInfo.RouteValueDictionary.Add("username", username);
            callInfo.RouteValueDictionary.Add("key", key);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ChangePassword(string username, string key) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ChangePassword);
            callInfo.RouteValueDictionary.Add("username", username);
            callInfo.RouteValueDictionary.Add("key", key);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ChangePassword(Worki.Data.Models.ChangePasswordModel model) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ChangePassword);
            callInfo.RouteValueDictionary.Add("model", model);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ResetPassword() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ResetPassword);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ResetPassword(Worki.Data.Models.ResetPasswordModel model) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ResetPassword);
            callInfo.RouteValueDictionary.Add("model", model);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FacebookLogOn() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FacebookLogOn);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FacebookOAuth(string code, string state) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FacebookOAuth);
            callInfo.RouteValueDictionary.Add("code", code);
            callInfo.RouteValueDictionary.Add("state", state);
            return callInfo;
        }

    }
}

namespace Worki.Web.Controllers {
    public partial class AdminController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AdminController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Index() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult UpdateMainLocalisation() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.UpdateMainLocalisation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult IndexUser() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.IndexUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ChangeUserRole() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ChangeUserRole);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeleteUser() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DeleteUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult IndexVisitor() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.IndexVisitor);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SendEmail() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.SendEmail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult IndexWelcomePeople() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.IndexWelcomePeople);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DetailWelcomePeople() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DetailWelcomePeople);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult EditWelcomePeople() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.EditWelcomePeople);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeleteWelcomePeople() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DeleteWelcomePeople);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult IndexImportValidate() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.IndexImportValidate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult IndexBooking() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.IndexBooking);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult IndexPress() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.IndexPress);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DetailPress() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DetailPress);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult EditPress() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.EditPress);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeletePress() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DeletePress);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult IndexRental() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.IndexRental);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AdminController Actions { get { return MVC.Admin; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Admin";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Index = "Index";
            public readonly string UpdateMainLocalisation = "UpdateMainLocalisation";
            public readonly string IndexUser = "IndexUser";
            public readonly string ChangeUserRole = "ChangeUserRole";
            public readonly string DeleteUser = "supprimer-utilisateur";
            public readonly string IndexVisitor = "IndexVisitor";
            public readonly string SendEmail = "SendEmail";
            public readonly string IndexWelcomePeople = "IndexWelcomePeople";
            public readonly string DetailWelcomePeople = "DetailWelcomePeople";
            public readonly string CreateWelcomePeople = "CreateWelcomePeople";
            public readonly string EditWelcomePeople = "EditWelcomePeople";
            public readonly string DeleteWelcomePeople = "DeleteWelcomePeople";
            public readonly string IndexImport = "IndexImport";
            public readonly string IndexImportValidate = "IndexImportValidate";
            public readonly string IndexBooking = "IndexBooking";
            public readonly string IndexPress = "IndexPress";
            public readonly string DetailPress = "DetailPress";
            public readonly string CreatePress = "CreatePress";
            public readonly string EditPress = "EditPress";
            public readonly string DeletePress = "supprimer-press";
            public readonly string IndexRental = "IndexRental";
            public readonly string SendListLocMail = "envoyer-listlocmail";
            public readonly string MigrateToOffer = "MigrateToOffer";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _AdminMenu = "~/Views/Admin/_AdminMenu.cshtml";
            public readonly string CreatePress = "~/Views/Admin/CreatePress.cshtml";
            public readonly string CreateWelcomePeople = "~/Views/Admin/CreateWelcomePeople.cshtml";
            public readonly string DeletePress = "~/Views/Admin/DeletePress.cshtml";
            public readonly string DeleteWelcomePeople = "~/Views/Admin/DeleteWelcomePeople.cshtml";
            public readonly string DetailPress = "~/Views/Admin/DetailPress.cshtml";
            public readonly string DetailWelcomePeople = "~/Views/Admin/DetailWelcomePeople.cshtml";
            public readonly string EditPress = "~/Views/Admin/EditPress.cshtml";
            public readonly string EditWelcomePeople = "~/Views/Admin/EditWelcomePeople.cshtml";
            public readonly string Index = "~/Views/Admin/Index.cshtml";
            public readonly string IndexBooking = "~/Views/Admin/IndexBooking.cshtml";
            public readonly string IndexImport = "~/Views/Admin/IndexImport.cshtml";
            public readonly string IndexPress = "~/Views/Admin/IndexPress.cshtml";
            public readonly string IndexRental = "~/Views/Admin/IndexRental.cshtml";
            public readonly string IndexUser = "~/Views/Admin/IndexUser.cshtml";
            public readonly string IndexVisitor = "~/Views/Admin/IndexVisitor.cshtml";
            public readonly string IndexWelcomePeople = "~/Views/Admin/IndexWelcomePeople.cshtml";
            public readonly string supprimer_utilisateur = "~/Views/Admin/supprimer-utilisateur.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_AdminController: Worki.Web.Controllers.AdminController {
        public T4MVC_AdminController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult UpdateMainLocalisation(System.Web.Mvc.FormCollection collection, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.UpdateMainLocalisation);
            callInfo.RouteValueDictionary.Add("collection", collection);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IndexUser(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexUser);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ChangeUserRole(System.Web.Mvc.FormCollection collection, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ChangeUserRole);
            callInfo.RouteValueDictionary.Add("collection", collection);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteUser(string username, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteUser);
            callInfo.RouteValueDictionary.Add("username", username);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteUser(Worki.Data.Models.User user, string confirmButton, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteUser);
            callInfo.RouteValueDictionary.Add("user", user);
            callInfo.RouteValueDictionary.Add("confirmButton", confirmButton);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IndexVisitor(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexVisitor);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SendEmail(string email, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.SendEmail);
            callInfo.RouteValueDictionary.Add("email", email);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IndexWelcomePeople(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexWelcomePeople);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DetailWelcomePeople(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DetailWelcomePeople);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateWelcomePeople() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreateWelcomePeople);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateWelcomePeople(Worki.Data.Models.WelcomePeopleFormViewModel formModel) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreateWelcomePeople);
            callInfo.RouteValueDictionary.Add("formModel", formModel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult EditWelcomePeople(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.EditWelcomePeople);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult EditWelcomePeople(int id, Worki.Data.Models.WelcomePeopleFormViewModel formModel) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.EditWelcomePeople);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("formModel", formModel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteWelcomePeople(int id, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteWelcomePeople);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteWelcomePeople(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteWelcomePeople);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IndexImport() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexImport);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IndexImportValidate(string result) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexImportValidate);
            callInfo.RouteValueDictionary.Add("result", result);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IndexImport(System.Web.Mvc.FormCollection collection) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexImport);
            callInfo.RouteValueDictionary.Add("collection", collection);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IndexBooking(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexBooking);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IndexPress(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexPress);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DetailPress(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DetailPress);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreatePress() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreatePress);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreatePress(Worki.Data.Models.Press formModel) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreatePress);
            callInfo.RouteValueDictionary.Add("formModel", formModel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult EditPress(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.EditPress);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult EditPress(int id, Worki.Data.Models.Press formModel) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.EditPress);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("formModel", formModel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeletePress(int id, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeletePress);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeletePress(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeletePress);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IndexRental(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexRental);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SendListLocMail() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.SendListLocMail);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult MigrateToOffer() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.MigrateToOffer);
            return callInfo;
        }

    }
}

namespace Worki.Web.Controllers {
    public partial class BookingController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected BookingController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Create() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Create);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Details() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Details);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Edit() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult HandleBooking() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.HandleBooking);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ConfirmBooking() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ConfirmBooking);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult RefuseBooking() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.RefuseBooking);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public BookingController Actions { get { return MVC.Booking; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Booking";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Create = "Create";
            public readonly string Details = "Details";
            public readonly string Edit = "Edit";
            public readonly string HandleBooking = "HandleBooking";
            public readonly string ConfirmBooking = "ConfirmBooking";
            public readonly string RefuseBooking = "RefuseBooking";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string Create = "~/Views/Booking/Create.cshtml";
            public readonly string Details = "~/Views/Booking/Details.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_BookingController: Worki.Web.Controllers.BookingController {
        public T4MVC_BookingController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Create(int id, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Create);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create(int id, Worki.Data.Models.MemberBookingFormViewModel formData) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Create);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("formData", formData);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Details(int id, int memberId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Details);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("memberId", memberId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id, int memberId, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("memberId", memberId);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id, int memberId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("memberId", memberId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult HandleBooking(int id, int memberId, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.HandleBooking);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("memberId", memberId);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ConfirmBooking(int id, int memberId, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ConfirmBooking);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("memberId", memberId);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult RefuseBooking(int id, int memberId, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.RefuseBooking);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("memberId", memberId);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

    }
}

namespace Worki.Web.Controllers {
    public partial class CaptchaImageController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CaptchaImageController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected CaptchaImageController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }


        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CaptchaImageController Actions { get { return MVC.CaptchaImage; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "CaptchaImage";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_CaptchaImageController: Worki.Web.Controllers.CaptchaImageController {
        public T4MVC_CaptchaImageController() : base(Dummy.Instance) { }

    }
}

namespace Worki.Web.Controllers {
    public partial class HomeController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected HomeController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ChangeCulture() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ChangeCulture);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public HomeController Actions { get { return MVC.Home; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Home";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Error = "Error";
            public readonly string Index = "index";
            public readonly string Contact = "contact";
            public readonly string Faq = "faq";
            public readonly string Press = "presse";
            public readonly string Jobs = "jobs";
            public readonly string About = "a-propos";
            public readonly string CGU = "cgu";
            public readonly string Legal = "mentions-legales";
            public readonly string ChangeCulture = "ChangeCulture";
            public readonly string AddSpace = "ajouter-espace";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _PeopleSlider = "~/Views/Home/_PeopleSlider.cshtml";
            public readonly string _RentalTab = "~/Views/Home/_RentalTab.cshtml";
            public readonly string a_propos = "~/Views/Home/a-propos.cshtml";
            public readonly string ajouter_espace = "~/Views/Home/ajouter-espace.cshtml";
            public readonly string cgu = "~/Views/Home/cgu.cshtml";
            public readonly string contact = "~/Views/Home/contact.cshtml";
            public readonly string faq = "~/Views/Home/faq.cshtml";
            public readonly string index = "~/Views/Home/index.cshtml";
            public readonly string jobs = "~/Views/Home/jobs.cshtml";
            public readonly string mentions_legales = "~/Views/Home/mentions-legales.cshtml";
            public readonly string presse = "~/Views/Home/presse.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_HomeController: Worki.Web.Controllers.HomeController {
        public T4MVC_HomeController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Error() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Error);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Contact() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Contact);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Contact(Worki.Data.Models.Contact contact) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Contact);
            callInfo.RouteValueDictionary.Add("contact", contact);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Faq() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Faq);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Press() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Press);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Jobs() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Jobs);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult About() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.About);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CGU() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CGU);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Legal() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Legal);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ChangeCulture(string lang, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ChangeCulture);
            callInfo.RouteValueDictionary.Add("lang", lang);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult AddSpace() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.AddSpace);
            return callInfo;
        }

    }
}

namespace Worki.Web.Controllers {
    public partial class LocalisationController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected LocalisationController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Index() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Details() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Details);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Edit() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Delete() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Delete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.PartialViewResult PostComment() {
            return new T4MVC_PartialViewResult(Area, Name, ActionNames.PostComment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeleteComment() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DeleteComment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FindSimilarLocalisation() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FindSimilarLocalisation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.PartialViewResult SearchForm() {
            return new T4MVC_PartialViewResult(Area, Name, ActionNames.SearchForm);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FullSearchOffer() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchOffer);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FullSearchPerTypeSpecial() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchPerTypeSpecial);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FullSearchResult() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FullSearchResultDetail() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResultDetail);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public LocalisationController Actions { get { return MVC.Localisation; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Localisation";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Index = "Index";
            public readonly string Details = "details";
            public readonly string CreateFree = "ajouter-lieu-gratuit";
            public readonly string CreateNotFree = "ajouter-lieu-payant";
            public readonly string Edit = "editer";
            public readonly string Delete = "supprimer";
            public readonly string PostComment = "PostComment";
            public readonly string DeleteComment = "DeleteComment";
            public readonly string FindSimilarLocalisation = "FindSimilarLocalisation";
            public readonly string GetMainLocalisations = "GetMainLocalisations";
            public readonly string SearchForm = "SearchForm";
            public readonly string FullSearch = "recherche";
            public readonly string FullSearchOffer = "recherche-lieu-travail-menu";
            public readonly string FullSearchPerType = "recherche-par-type";
            public readonly string FullSearchPerTypeSpecial = "recherche-special";
            public readonly string FullSearchResult = "resultats-liste";
            public readonly string FullSearchResultDetail = "resultats-detail";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _CommentForm = "~/Views/Localisation/_CommentForm.cshtml";
            public readonly string _CommentFormScript = "~/Views/Localisation/_CommentFormScript.cshtml";
            public readonly string _DirectAccess = "~/Views/Localisation/_DirectAccess.cshtml";
            public readonly string _IconeServices = "~/Views/Localisation/_IconeServices.cshtml";
            public readonly string _LocalisationDetail = "~/Views/Localisation/_LocalisationDetail.cshtml";
            public readonly string _LocalisationFormScript = "~/Views/Localisation/_LocalisationFormScript.cshtml";
            public readonly string _SearchForm = "~/Views/Localisation/_SearchForm.cshtml";
            public readonly string _SearchResultSummary = "~/Views/Localisation/_SearchResultSummary.cshtml";
            public readonly string _SelectSearchScript = "~/Views/Localisation/_SelectSearchScript.cshtml";
            public readonly string _ServicesSelector = "~/Views/Localisation/_ServicesSelector.cshtml";
            public readonly string _Suggestions = "~/Views/Localisation/_Suggestions.cshtml";
            public readonly string editer = "~/Views/Localisation/editer.cshtml";
            public readonly string Index = "~/Views/Localisation/Index.cshtml";
            public readonly string recherche = "~/Views/Localisation/recherche.cshtml";
            public readonly string resultats_detail = "~/Views/Localisation/resultats-detail.cshtml";
            public readonly string resultats_liste = "~/Views/Localisation/resultats-liste.cshtml";
            public readonly string supprimer = "~/Views/Localisation/supprimer.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_LocalisationController: Worki.Web.Controllers.LocalisationController {
        public T4MVC_LocalisationController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Details(int id, string name) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Details);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("name", name);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateFree() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreateFree);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateNotFree() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreateNotFree);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int? id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(Worki.Data.Models.Localisation localisation, int? id, string addOffer) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("localisation", localisation);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("addOffer", addOffer);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Delete(int id, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Delete);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Delete(int id, string confirmButton, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Delete);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("confirmButton", confirmButton);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.PartialViewResult PostComment(int id, Worki.Data.Models.Comment com) {
            var callInfo = new T4MVC_PartialViewResult(Area, Name, ActionNames.PostComment);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("com", com);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteComment(int id, int commentId, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteComment);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("commentId", commentId);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FindSimilarLocalisation(float latitude, float longitude) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FindSimilarLocalisation);
            callInfo.RouteValueDictionary.Add("latitude", latitude);
            callInfo.RouteValueDictionary.Add("longitude", longitude);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetMainLocalisations() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetMainLocalisations);
            return callInfo;
        }

        public override System.Web.Mvc.PartialViewResult SearchForm(string searchType, string directAccessType) {
            var callInfo = new T4MVC_PartialViewResult(Area, Name, ActionNames.SearchForm);
            callInfo.RouteValueDictionary.Add("searchType", searchType);
            callInfo.RouteValueDictionary.Add("directAccessType", directAccessType);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearch() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearch);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchOffer(int offertID) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchOffer);
            callInfo.RouteValueDictionary.Add("offertID", offertID);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchPerType() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchPerType);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchPerTypeSpecial(int type) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchPerTypeSpecial);
            callInfo.RouteValueDictionary.Add("type", type);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearch(Worki.Data.Models.SearchCriteria criteria) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearch);
            callInfo.RouteValueDictionary.Add("criteria", criteria);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchResult(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResult);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchResultDetail(int? index) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResultDetail);
            callInfo.RouteValueDictionary.Add("index", index);
            return callInfo;
        }

    }
}

namespace Worki.Web.Controllers {
    public partial class OfferController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected OfferController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Create() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Create);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Details() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Details);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Edit() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Delete() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Delete);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public OfferController Actions { get { return MVC.Offer; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Offer";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Create = "Create";
            public readonly string Details = "Details";
            public readonly string Edit = "Edit";
            public readonly string Delete = "Delete";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string Create = "~/Views/Offer/Create.cshtml";
            public readonly string Delete = "~/Views/Offer/Delete.cshtml";
            public readonly string Details = "~/Views/Offer/Details.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_OfferController: Worki.Web.Controllers.OfferController {
        public T4MVC_OfferController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Create(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Create);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create(int id, Worki.Data.Models.OfferFormViewModel offerFormViewModel) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Create);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("offerFormViewModel", offerFormViewModel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Details(int id, int localisationId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Details);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("localisationId", localisationId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id, int localisationId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("localisationId", localisationId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id, int localisationId, Worki.Data.Models.OfferFormViewModel formData) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("localisationId", localisationId);
            callInfo.RouteValueDictionary.Add("formData", formData);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Delete(int id, int localisationId, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Delete);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("localisationId", localisationId);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Delete(int id, int localisationId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Delete);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("localisationId", localisationId);
            return callInfo;
        }

    }
}

namespace Worki.Web.Controllers {
    public partial class ProfilController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ProfilController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Detail() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Detail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Dashboard() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Dashboard);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.PartialViewResult AjaxDashboard() {
            return new T4MVC_PartialViewResult(Area, Name, ActionNames.AjaxDashboard);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Edit() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.PartialViewResult AddToFavorite() {
            return new T4MVC_PartialViewResult(Area, Name, ActionNames.AddToFavorite);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.PartialViewResult RemoveFromFavorite() {
            return new T4MVC_PartialViewResult(Area, Name, ActionNames.RemoveFromFavorite);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ProfilController Actions { get { return MVC.Profil; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Profil";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Detail = "details";
            public readonly string Dashboard = "dashboard";
            public readonly string AjaxDashboard = "AjaxDashboard";
            public readonly string Edit = "editer";
            public readonly string AddToFavorite = "AddToFavorite";
            public readonly string RemoveFromFavorite = "RemoveFromFavorite";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _CommentTab = "~/Views/Profil/_CommentTab.cshtml";
            public readonly string _LocalisationTab = "~/Views/Profil/_LocalisationTab.cshtml";
            public readonly string dashboard = "~/Views/Profil/dashboard.cshtml";
            public readonly string editer = "~/Views/Profil/editer.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_ProfilController: Worki.Web.Controllers.ProfilController {
        public T4MVC_ProfilController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Detail(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Detail);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Dashboard(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Dashboard);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.PartialViewResult AjaxDashboard(int id, int tabId, int p1, int p2, int p3, int p4) {
            var callInfo = new T4MVC_PartialViewResult(Area, Name, ActionNames.AjaxDashboard);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("tabId", tabId);
            callInfo.RouteValueDictionary.Add("p1", p1);
            callInfo.RouteValueDictionary.Add("p2", p2);
            callInfo.RouteValueDictionary.Add("p3", p3);
            callInfo.RouteValueDictionary.Add("p4", p4);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id, Worki.Data.Models.Member member) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("member", member);
            return callInfo;
        }

        public override System.Web.Mvc.PartialViewResult AddToFavorite(string id, int locId) {
            var callInfo = new T4MVC_PartialViewResult(Area, Name, ActionNames.AddToFavorite);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("locId", locId);
            return callInfo;
        }

        public override System.Web.Mvc.PartialViewResult RemoveFromFavorite(string id, int locId) {
            var callInfo = new T4MVC_PartialViewResult(Area, Name, ActionNames.RemoveFromFavorite);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("locId", locId);
            return callInfo;
        }

    }
}

namespace Worki.Web.Controllers {
    public partial class RentalController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RentalController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Detail() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Detail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Edit() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeleteRental() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DeleteRental);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FullSearchResult() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FullSearchResultDetail() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResultDetail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SendMailOwner() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.SendMailOwner);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SendMailFriend() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.SendMailFriend);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SendMail() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.SendMail);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public RentalController Actions { get { return MVC.Rental; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Rental";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Detail = "details";
            public readonly string Create = "ajouter";
            public readonly string Edit = "editer";
            public readonly string DeleteRental = "supprimer";
            public readonly string AddRentalAccess = "AddRentalAccess";
            public readonly string RentalSearch = "recherche";
            public readonly string FullSearchResult = "resultats-annonces";
            public readonly string FullSearchResultDetail = "resultats-annonces-detail";
            public readonly string SendMailOwner = "envoyer-email-propriétaire";
            public readonly string SendMailFriend = "envoyer-email-ami";
            public readonly string SendMail = "envoyer-email";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _Details = "~/Views/Rental/_Details.cshtml";
            public readonly string _Rental = "~/Views/Rental/_Rental.cshtml";
            public readonly string _RentalAccess = "~/Views/Rental/_RentalAccess.cshtml";
            public readonly string _RentalSeachFormScript = "~/Views/Rental/_RentalSeachFormScript.cshtml";
            public readonly string details = "~/Views/Rental/details.cshtml";
            public readonly string editer = "~/Views/Rental/editer.cshtml";
            public readonly string recherche = "~/Views/Rental/recherche.cshtml";
            public readonly string resultats_annonces = "~/Views/Rental/resultats-annonces.cshtml";
            public readonly string SendFriend = "~/Views/Rental/SendFriend.cshtml";
            public readonly string SendOwner = "~/Views/Rental/SendOwner.cshtml";
            public readonly string supprimer = "~/Views/Rental/supprimer.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_RentalController: Worki.Web.Controllers.RentalController {
        public T4MVC_RentalController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Detail(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Detail);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Create);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(Worki.Data.Models.Rental rental, int? id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("rental", rental);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteRental(int id, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteRental);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteRental(int id, string confirm, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteRental);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("confirm", confirm);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.PartialViewResult AddRentalAccess() {
            var callInfo = new T4MVC_PartialViewResult(Area, Name, ActionNames.AddRentalAccess);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult RentalSearch() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.RentalSearch);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult RentalSearch(Worki.Data.Models.RentalSearchCriteria rentalSearchCriteria) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.RentalSearch);
            callInfo.RouteValueDictionary.Add("rentalSearchCriteria", rentalSearchCriteria);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchResult(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResult);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchResultDetail(int? index) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResultDetail);
            callInfo.RouteValueDictionary.Add("index", index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SendMailOwner(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.SendMailOwner);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SendMailFriend(int id, string friend) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.SendMailFriend);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("friend", friend);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SendMail(Worki.Data.Models.Contact contact) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.SendMail);
            callInfo.RouteValueDictionary.Add("contact", contact);
            return callInfo;
        }

    }
}

namespace Worki.Web.Controllers {
    public partial class UploadImageController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected UploadImageController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult UploadFiles() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.UploadFiles);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult LoadFiles() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.LoadFiles);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeleteImage() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DeleteImage);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public UploadImageController Actions { get { return MVC.UploadImage; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "UploadImage";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string UploadFiles = "UploadFiles";
            public readonly string LoadFiles = "LoadFiles";
            public readonly string DeleteImage = "DeleteImage";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_UploadImageController: Worki.Web.Controllers.UploadImageController {
        public T4MVC_UploadImageController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult UploadFiles(Worki.Data.Models.ProviderType type) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.UploadFiles);
            callInfo.RouteValueDictionary.Add("type", type);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LoadFiles(int id, Worki.Data.Models.ProviderType type) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LoadFiles);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("type", type);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteImage(string fileName) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteImage);
            callInfo.RouteValueDictionary.Add("fileName", fileName);
            return callInfo;
        }

    }
}

namespace Worki.Web.Controllers {
    public partial class VisitorController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected VisitorController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }


        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public VisitorController Actions { get { return MVC.Visitor; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Visitor";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Index = "Index";
            public readonly string AskForAccountSuccess = "demande-reussie";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _LogOnForm = "~/Views/Visitor/_LogOnForm.cshtml";
            public readonly string _VisitorForm = "~/Views/Visitor/_VisitorForm.cshtml";
            public readonly string demande_reussie = "~/Views/Visitor/demande-reussie.cshtml";
            public readonly string Index = "~/Views/Visitor/Index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_VisitorController: Worki.Web.Controllers.VisitorController {
        public T4MVC_VisitorController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Index(Worki.Data.Models.Visitor visitor) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            callInfo.RouteValueDictionary.Add("visitor", visitor);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult AskForAccountSuccess() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.AskForAccountSuccess);
            return callInfo;
        }

    }
}

namespace T4MVC {
    public class EmailsController {

        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _ViewStart = "~/Views/Emails/_ViewStart.cshtml";
            public readonly string Email = "~/Views/Emails/Email.cshtml";
            public readonly string EmailOwner = "~/Views/Emails/EmailOwner.cshtml";
            public readonly string ListLocMail = "~/Views/Emails/ListLocMail.cshtml";
        }
    }

}

namespace T4MVC {
    public class SharedController {

        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string @__Layout = "~/Views/Shared/__Layout.cshtml";
            public readonly string _AddToFavorite = "~/Views/Shared/_AddToFavorite.cshtml";
            public readonly string _CultureSwitchControl = "~/Views/Shared/_CultureSwitchControl.cshtml";
            public readonly string _IndexGallery = "~/Views/Shared/_IndexGallery.cshtml";
            public readonly string _IndexGalleryScript = "~/Views/Shared/_IndexGalleryScript.cshtml";
            public readonly string _LocalisationSingleComment = "~/Views/Shared/_LocalisationSingleComment.cshtml";
            public readonly string _LogOnUserControl = "~/Views/Shared/_LogOnUserControl.cshtml";
            public readonly string _MainMenu = "~/Views/Shared/_MainMenu.cshtml";
            public readonly string _Map = "~/Views/Shared/_Map.cshtml";
            public readonly string _MetaDataHeader = "~/Views/Shared/_MetaDataHeader.cshtml";
            public readonly string _PictureContainer = "~/Views/Shared/_PictureContainer.cshtml";
            public readonly string _UploadGalleryScript = "~/Views/Shared/_UploadGalleryScript.cshtml";
            public readonly string Error = "~/Views/Shared/Error.cshtml";
        }
    }

}

namespace Worki.Web.Areas.Api.Controllers {
    public partial class LocalisationController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected LocalisationController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Details() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Details);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Search() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Search);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public LocalisationController Actions { get { return MVC.Api.Localisation; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Api";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Localisation";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Details = "Details";
            public readonly string Search = "Search";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_LocalisationController: Worki.Web.Areas.Api.Controllers.LocalisationController {
        public T4MVC_LocalisationController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Details(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Details);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Search(string place, float latitude, float longitude, int offerType, string types, string features, int maxCount) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Search);
            callInfo.RouteValueDictionary.Add("place", place);
            callInfo.RouteValueDictionary.Add("latitude", latitude);
            callInfo.RouteValueDictionary.Add("longitude", longitude);
            callInfo.RouteValueDictionary.Add("offerType", offerType);
            callInfo.RouteValueDictionary.Add("types", types);
            callInfo.RouteValueDictionary.Add("features", features);
            callInfo.RouteValueDictionary.Add("maxCount", maxCount);
            return callInfo;
        }

    }
}

namespace T4MVC.Api {
    public class SharedController {

        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
        }
    }

}

namespace Worki.Web.Areas.Mobile.Controllers {
    public partial class AccountController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AccountController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult LogOn() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.LogOn);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AccountController Actions { get { return MVC.Mobile.Account; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Mobile";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Account";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string LogOn = "connexion";
            public readonly string LogOff = "deconnexion";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string connexion = "~/Areas/Mobile/Views/Account/connexion.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_AccountController: Worki.Web.Areas.Mobile.Controllers.AccountController {
        public T4MVC_AccountController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult LogOn(Worki.Data.Models.LogOnModel model, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LogOn);
            callInfo.RouteValueDictionary.Add("model", model);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LogOff() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LogOff);
            return callInfo;
        }

    }
}

namespace Worki.Web.Areas.Mobile.Controllers {
    public partial class HomeController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public HomeController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected HomeController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }


        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public HomeController Actions { get { return MVC.Mobile.Home; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Mobile";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Home";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Index = "index";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string index = "~/Areas/Mobile/Views/Home/index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_HomeController: Worki.Web.Areas.Mobile.Controllers.HomeController {
        public T4MVC_HomeController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            return callInfo;
        }

    }
}

namespace Worki.Web.Areas.Mobile.Controllers {
    public partial class LocalisationController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected LocalisationController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FullSearch() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FullSearch);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FullSearchResult() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FullSearchResultDetail() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResultDetail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult LocalisationDetail() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.LocalisationDetail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.PartialViewResult LocalisationDescription() {
            return new T4MVC_PartialViewResult(Area, Name, ActionNames.LocalisationDescription);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public LocalisationController Actions { get { return MVC.Mobile.Localisation; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Mobile";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Localisation";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string FullSearch = "recherche";
            public readonly string FullSearchResult = "resultats-liste";
            public readonly string FullSearchResultDetail = "resultats-detail";
            public readonly string LocalisationDetail = "LocalisationDetail";
            public readonly string LocalisationDescription = "LocalisationDescription";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _CommentSummary = "~/Areas/Mobile/Views/Localisation/_CommentSummary.cshtml";
            public readonly string _LocalisationDetail = "~/Areas/Mobile/Views/Localisation/_LocalisationDetail.cshtml";
            public readonly string _SearchResultSummary = "~/Areas/Mobile/Views/Localisation/_SearchResultSummary.cshtml";
            public readonly string resultats_detail = "~/Areas/Mobile/Views/Localisation/resultats-detail.cshtml";
            public readonly string resultats_liste = "~/Areas/Mobile/Views/Localisation/resultats-liste.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_LocalisationController: Worki.Web.Areas.Mobile.Controllers.LocalisationController {
        public T4MVC_LocalisationController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult FullSearch(Worki.Data.Models.SearchCriteria criteria) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearch);
            callInfo.RouteValueDictionary.Add("criteria", criteria);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchResult(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResult);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchResultDetail(int? index) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResultDetail);
            callInfo.RouteValueDictionary.Add("index", index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LocalisationDetail(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LocalisationDetail);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.PartialViewResult LocalisationDescription(int id) {
            var callInfo = new T4MVC_PartialViewResult(Area, Name, ActionNames.LocalisationDescription);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

    }
}

namespace T4MVC.Mobile {
    public class SharedController {

        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string @__Layout = "~/Areas/Mobile/Views/Shared/__Layout.cshtml";
            public readonly string _Connexion = "~/Areas/Mobile/Views/Shared/_Connexion.cshtml";
        }
    }

}



	

#endregion T4MVC
#pragma warning restore 1591


