// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static class MVC {
    static readonly AdminClass s_Admin = new AdminClass();
    public static AdminClass Admin { get { return s_Admin; } }
    static readonly ApiClass s_Api = new ApiClass();
    public static ApiClass Api { get { return s_Api; } }
    static readonly BackofficeClass s_Backoffice = new BackofficeClass();
    public static BackofficeClass Backoffice { get { return s_Backoffice; } }
    static readonly DashboardClass s_Dashboard = new DashboardClass();
    public static DashboardClass Dashboard { get { return s_Dashboard; } }
    static readonly MobileClass s_Mobile = new MobileClass();
    public static MobileClass Mobile { get { return s_Mobile; } }
    public static Worki.Web.Controllers.AccountController Account = new Worki.Web.Controllers.T4MVC_AccountController();
    public static Worki.Web.Controllers.BookingController Booking = new Worki.Web.Controllers.T4MVC_BookingController();
    public static Worki.Web.Controllers.CaptchaImageController CaptchaImage = new Worki.Web.Controllers.T4MVC_CaptchaImageController();
    public static Worki.Web.Controllers.HomeController Home = new Worki.Web.Controllers.T4MVC_HomeController();
    public static Worki.Web.Controllers.LocalisationController Localisation = new Worki.Web.Controllers.T4MVC_LocalisationController();
    public static Worki.Web.Controllers.OfferController Offer = new Worki.Web.Controllers.T4MVC_OfferController();
    public static Worki.Web.Controllers.PaymentController Payment = new Worki.Web.Controllers.T4MVC_PaymentController();
    public static Worki.Web.Controllers.QuotationController Quotation = new Worki.Web.Controllers.T4MVC_QuotationController();
    public static Worki.Web.Controllers.RentalController Rental = new Worki.Web.Controllers.T4MVC_RentalController();
    public static Worki.Web.Controllers.UploadImageController UploadImage = new Worki.Web.Controllers.T4MVC_UploadImageController();
    public static Worki.Web.Controllers.VisitorController Visitor = new Worki.Web.Controllers.T4MVC_VisitorController();
    public static T4MVC.EmailsController Emails = new T4MVC.EmailsController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC {
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class AdminClass {
        public readonly string Name = "Admin";
        public Worki.Web.Areas.Admin.Controllers.ActivityController Activity = new Worki.Web.Areas.Admin.Controllers.T4MVC_ActivityController();
        public Worki.Web.Areas.Admin.Controllers.MemberController Member = new Worki.Web.Areas.Admin.Controllers.T4MVC_MemberController();
        public Worki.Web.Areas.Admin.Controllers.ModerationController Moderation = new Worki.Web.Areas.Admin.Controllers.T4MVC_ModerationController();
        public Worki.Web.Areas.Admin.Controllers.SheetController Sheet = new Worki.Web.Areas.Admin.Controllers.T4MVC_SheetController();
        public T4MVC.Admin.SharedController Shared = new T4MVC.Admin.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class ApiClass {
        public readonly string Name = "Api";
        public Worki.Web.Areas.Api.Controllers.LocalisationController Localisation = new Worki.Web.Areas.Api.Controllers.T4MVC_LocalisationController();
        public T4MVC.Api.SharedController Shared = new T4MVC.Api.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class BackofficeClass {
        public readonly string Name = "Backoffice";
        public Worki.Web.Areas.Backoffice.Controllers.ClientController Client = new Worki.Web.Areas.Backoffice.Controllers.T4MVC_ClientController();
        public Worki.Web.Areas.Backoffice.Controllers.HomeController Home = new Worki.Web.Areas.Backoffice.Controllers.T4MVC_HomeController();
        public Worki.Web.Areas.Backoffice.Controllers.LocalisationController Localisation = new Worki.Web.Areas.Backoffice.Controllers.T4MVC_LocalisationController();
        public Worki.Web.Areas.Backoffice.Controllers.OfferController Offer = new Worki.Web.Areas.Backoffice.Controllers.T4MVC_OfferController();
        public Worki.Web.Areas.Backoffice.Controllers.ProfilController Profil = new Worki.Web.Areas.Backoffice.Controllers.T4MVC_ProfilController();
        public Worki.Web.Areas.Backoffice.Controllers.ScheduleController Schedule = new Worki.Web.Areas.Backoffice.Controllers.T4MVC_ScheduleController();
        public T4MVC.Backoffice.SharedController Shared = new T4MVC.Backoffice.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class DashboardClass {
        public readonly string Name = "Dashboard";
        public Worki.Web.Areas.Dashboard.Controllers.CommunityController Community = new Worki.Web.Areas.Dashboard.Controllers.T4MVC_CommunityController();
        public Worki.Web.Areas.Dashboard.Controllers.HistoricController Historic = new Worki.Web.Areas.Dashboard.Controllers.T4MVC_HistoricController();
        public Worki.Web.Areas.Dashboard.Controllers.HomeController Home = new Worki.Web.Areas.Dashboard.Controllers.T4MVC_HomeController();
        public Worki.Web.Areas.Dashboard.Controllers.ProfilController Profil = new Worki.Web.Areas.Dashboard.Controllers.T4MVC_ProfilController();
        public T4MVC.Dashboard.SharedController Shared = new T4MVC.Dashboard.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class MobileClass {
        public readonly string Name = "Mobile";
        public Worki.Web.Areas.Mobile.Controllers.AccountController Account = new Worki.Web.Areas.Mobile.Controllers.T4MVC_AccountController();
        public Worki.Web.Areas.Mobile.Controllers.HomeController Home = new Worki.Web.Areas.Mobile.Controllers.T4MVC_HomeController();
        public Worki.Web.Areas.Mobile.Controllers.LocalisationController Localisation = new Worki.Web.Areas.Mobile.Controllers.T4MVC_LocalisationController();
        public T4MVC.Mobile.SharedController Shared = new T4MVC.Mobile.SharedController();
    }
}

   
namespace System.Web.Mvc {
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class T4Extensions {
        public static MvcHtmlString ActionLink(this HtmlHelper htmlHelper, string linkText, ActionResult result) {
            return htmlHelper.RouteLink(linkText, result.GetRouteValueDictionary());
        }

        public static MvcHtmlString ActionLink(this HtmlHelper htmlHelper, string linkText, ActionResult result, object htmlAttributes) {
            return ActionLink(htmlHelper, linkText, result, new RouteValueDictionary(htmlAttributes));
        }

        public static MvcHtmlString ActionLink(this HtmlHelper htmlHelper, string linkText, ActionResult result, IDictionary<string, object> htmlAttributes) {
            return htmlHelper.RouteLink(linkText, result.GetRouteValueDictionary(), htmlAttributes);
        }

        public static MvcForm BeginForm(this HtmlHelper htmlHelper, ActionResult result) {
            return htmlHelper.BeginForm(result, FormMethod.Post);
        }

        public static MvcForm BeginForm(this HtmlHelper htmlHelper, ActionResult result, FormMethod formMethod) {
            return htmlHelper.BeginForm(result, formMethod, null);
        }

        public static MvcForm BeginForm(this HtmlHelper htmlHelper, ActionResult result, FormMethod formMethod, object htmlAttributes) {
            return BeginForm(htmlHelper, result, formMethod, new RouteValueDictionary(htmlAttributes));
        }

        public static MvcForm BeginForm(this HtmlHelper htmlHelper, ActionResult result, FormMethod formMethod, IDictionary<string, object> htmlAttributes) {
            var callInfo = result.GetT4MVCResult();
            return htmlHelper.BeginForm(callInfo.Action, callInfo.Controller, callInfo.RouteValueDictionary, formMethod, htmlAttributes);
        }

        public static void RenderAction(this HtmlHelper htmlHelper, ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            htmlHelper.RenderAction(callInfo.Action, callInfo.Controller, callInfo.RouteValueDictionary);
        }

        public static MvcHtmlString Action(this HtmlHelper htmlHelper, ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return htmlHelper.Action(callInfo.Action, callInfo.Controller, callInfo.RouteValueDictionary);
        }
        public static string Action(this UrlHelper urlHelper, ActionResult result) {
            return urlHelper.RouteUrl(result.GetRouteValueDictionary());
        }

        public static string ActionAbsolute(this UrlHelper urlHelper, ActionResult result) {
            return string.Format("{0}{1}",urlHelper.RequestContext.HttpContext.Request.Url.GetLeftPart(UriPartial.Authority),
                urlHelper.RouteUrl(result.GetRouteValueDictionary()));
        }

        public static MvcHtmlString ActionLink(this AjaxHelper ajaxHelper, string linkText, ActionResult result, AjaxOptions ajaxOptions) {
            return ajaxHelper.RouteLink(linkText, result.GetRouteValueDictionary(), ajaxOptions);
        }

        public static MvcHtmlString ActionLink(this AjaxHelper ajaxHelper, string linkText, ActionResult result, AjaxOptions ajaxOptions, object htmlAttributes) {
            return ajaxHelper.RouteLink(linkText, result.GetRouteValueDictionary(), ajaxOptions, new RouteValueDictionary(htmlAttributes));
        }

        public static MvcHtmlString ActionLink(this AjaxHelper ajaxHelper, string linkText, ActionResult result, AjaxOptions ajaxOptions, IDictionary<string, object> htmlAttributes) {
            return ajaxHelper.RouteLink(linkText, result.GetRouteValueDictionary(), ajaxOptions, htmlAttributes);
        }

        public static MvcForm BeginForm(this AjaxHelper ajaxHelper, ActionResult result, AjaxOptions ajaxOptions) {
            return ajaxHelper.BeginForm(result, ajaxOptions, null);
        }

        public static MvcForm BeginForm(this AjaxHelper ajaxHelper, ActionResult result, AjaxOptions ajaxOptions, object htmlAttributes) {
            return BeginForm(ajaxHelper, result, ajaxOptions, new RouteValueDictionary(htmlAttributes));
        }

        public static MvcForm BeginForm(this AjaxHelper ajaxHelper, ActionResult result, AjaxOptions ajaxOptions, IDictionary<string, object> htmlAttributes) {
            var callInfo = result.GetT4MVCResult();
            return ajaxHelper.BeginForm(callInfo.Action, callInfo.Controller, callInfo.RouteValueDictionary, ajaxOptions, htmlAttributes);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result) {
            return MapRoute(routes, name, url, result, null /*namespaces*/);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result, object defaults) {
            return MapRoute(routes, name, url, result, defaults, null /*constraints*/, null /*namespaces*/);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result, string[] namespaces) {
            return MapRoute(routes, name, url, result, null /*defaults*/, namespaces);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result, object defaults, object constraints) {
            return MapRoute(routes, name, url, result, defaults, constraints, null /*namespaces*/);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result, object defaults, string[] namespaces) {
            return MapRoute(routes, name, url, result, defaults, null /*constraints*/, namespaces);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result, object defaults, object constraints, string[] namespaces) {
            // Create and add the route
            var route = CreateRoute(url, result, defaults, constraints, namespaces);
            routes.Add(name, route);
            return route;
        }

        // Note: can't name the AreaRegistrationContext methods 'MapRoute', as that conflicts with the existing methods
        public static Route MapRouteArea(this AreaRegistrationContext context, string name, string url, ActionResult result) {
            return MapRouteArea(context, name, url, result, null /*namespaces*/);
        }

        public static Route MapRouteArea(this AreaRegistrationContext context, string name, string url, ActionResult result, object defaults) {
            return MapRouteArea(context, name, url, result, defaults, null /*constraints*/, null /*namespaces*/);
        }

        public static Route MapRouteArea(this AreaRegistrationContext context, string name, string url, ActionResult result, string[] namespaces) {
            return MapRouteArea(context, name, url, result, null /*defaults*/, namespaces);
        }

        public static Route MapRouteArea(this AreaRegistrationContext context, string name, string url, ActionResult result, object defaults, object constraints) {
            return MapRouteArea(context, name, url, result, defaults, constraints, null /*namespaces*/);
        }

        public static Route MapRouteArea(this AreaRegistrationContext context, string name, string url, ActionResult result, object defaults, string[] namespaces) {
            return MapRouteArea(context, name, url, result, defaults, null /*constraints*/, namespaces);
        }

        public static Route MapRouteArea(this AreaRegistrationContext context, string name, string url, ActionResult result, object defaults, object constraints, string[] namespaces) {
            // Create and add the route
            if ((namespaces == null) && (context.Namespaces != null)) {
                 namespaces = context.Namespaces.ToArray();
            }
            var route = CreateRoute(url, result, defaults, constraints, namespaces);
            context.Routes.Add(name, route);
            route.DataTokens["area"] = context.AreaName;
            bool useNamespaceFallback = (namespaces == null) || (namespaces.Length == 0);
            route.DataTokens["UseNamespaceFallback"] = useNamespaceFallback;
            return route;
        }

        private static Route CreateRoute(string url, ActionResult result, object defaults, object constraints, string[] namespaces) {
            // Start by adding the default values from the anonymous object (if any)
            var routeValues = new RouteValueDictionary(defaults);

            // Then add the Controller/Action names and the parameters from the call
            foreach (var pair in result.GetRouteValueDictionary()) {
                routeValues.Add(pair.Key, pair.Value);
            }

            var routeConstraints = new RouteValueDictionary(constraints);

            // Create and add the route
            var route = new Route(url, routeValues, routeConstraints, new MvcRouteHandler());

            route.DataTokens = new RouteValueDictionary();

            if (namespaces != null && namespaces.Length > 0) {
                route.DataTokens["Namespaces"] = namespaces;
            }

            return route;
        }

        public static IT4MVCActionResult GetT4MVCResult(this ActionResult result) {
            var t4MVCResult = result as IT4MVCActionResult;
            if (t4MVCResult == null) {
                throw new InvalidOperationException("T4MVC was called incorrectly. You may need to force it to regenerate by right clicking on T4MVC.tt and choosing Run Custom Tool");
            }
            return t4MVCResult;
        }

        public static RouteValueDictionary GetRouteValueDictionary(this ActionResult result) {
            return result.GetT4MVCResult().RouteValueDictionary;
        }

        public static ActionResult AddRouteValues(this ActionResult result, object routeValues) {
            return result.AddRouteValues(new RouteValueDictionary(routeValues));
        }

        public static ActionResult AddRouteValues(this ActionResult result, RouteValueDictionary routeValues) {
            RouteValueDictionary currentRouteValues = result.GetRouteValueDictionary();

            // Add all the extra values
            foreach (var pair in routeValues) {
                currentRouteValues.Add(pair.Key, pair.Value);
            }

            return result;
        }

        public static ActionResult AddRouteValues(this ActionResult result, System.Collections.Specialized.NameValueCollection nameValueCollection) {
            // Copy all the values from the NameValueCollection into the route dictionary
            nameValueCollection.CopyTo(result.GetRouteValueDictionary());
            return result;
        }

        public static ActionResult AddRouteValue(this ActionResult result, string name, object value) {
            RouteValueDictionary routeValues = result.GetRouteValueDictionary();
            routeValues.Add(name, value);
            return result;
        }
        
        public static void InitMVCT4Result(this IT4MVCActionResult result, string area, string controller, string action) {
            result.Controller = controller;
            result.Action = action;
            result.RouteValueDictionary = new RouteValueDictionary();
            result.RouteValueDictionary.Add("Area", area ?? ""); 
            result.RouteValueDictionary.Add("Controller", controller);
            result.RouteValueDictionary.Add("Action", action);
        }

        public static bool FileExists(string virtualPath) {
            if (!HostingEnvironment.IsHosted) return false;
            string filePath = HostingEnvironment.MapPath(virtualPath);
            return System.IO.File.Exists(filePath);
        }

        static DateTime CenturyBegin=new DateTime(2001,1,1);
        public static string TimestampString(string virtualPath) {
            if (!HostingEnvironment.IsHosted) return string.Empty;
            string filePath = HostingEnvironment.MapPath(virtualPath);
            return Convert.ToString((System.IO.File.GetLastWriteTimeUtc(filePath).Ticks-CenturyBegin.Ticks)/1000000000,16);            
        }
    }
}



namespace T4MVC {
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}


  

   
[GeneratedCode("T4MVC", "2.0")]   
public interface IT4MVCActionResult {   
    string Action { get; set; }   
    string Controller { get; set; }   
    RouteValueDictionary RouteValueDictionary { get; set; }   
}   
  

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public class T4MVC_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult {
    public T4MVC_ActionResult(string area, string controller, string action): base()  {
        this.InitMVCT4Result(area, controller, action);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public class T4MVC_PartialViewResult : System.Web.Mvc.PartialViewResult, IT4MVCActionResult {
    public T4MVC_PartialViewResult(string area, string controller, string action): base()  {
        this.InitMVCT4Result(area, controller, action);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links {
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string date_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/date.min.js") ? Url("date.min.js") : Url("date.js");
                      
        public static readonly string date_min_js = Url("date.min.js");
        public static readonly string dropdown_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dropdown.min.js") ? Url("dropdown.min.js") : Url("dropdown.js");
                      
        public static readonly string dropdown_min_js = Url("dropdown.min.js");
        public static readonly string fullcalendar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fullcalendar.min.js") ? Url("fullcalendar.min.js") : Url("fullcalendar.js");
                      
        public static readonly string fullcalendar_min_js = Url("fullcalendar.min.js");
        public static readonly string gcal_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gcal.min.js") ? Url("gcal.min.js") : Url("gcal.js");
                      
        public static readonly string gcal_min_js = Url("gcal.min.js");
        public static readonly string jquery_1_5_1_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.5.1-vsdoc.min.js") ? Url("jquery-1.5.1-vsdoc.min.js") : Url("jquery-1.5.1-vsdoc.js");
                      
        public static readonly string jquery_1_5_1_vsdoc_min_js = Url("jquery-1.5.1-vsdoc.min.js");
        public static readonly string jquery_1_5_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.5.1.min.js") ? Url("jquery-1.5.1.min.js") : Url("jquery-1.5.1.js");
                      
        public static readonly string jquery_1_5_1_min_js = Url("jquery-1.5.1.min.js");
        public static readonly string jquery_ui_1_8_11_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.8.11.min.js") ? Url("jquery-ui-1.8.11.min.js") : Url("jquery-ui-1.8.11.js");
                      
        public static readonly string jquery_ui_1_8_11_min_js = Url("jquery-ui-1.8.11.min.js");
        public static readonly string jquery_ui_1_8_12_custom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.8.12.custom.min.js") ? Url("jquery-ui-1.8.12.custom.min.js") : Url("jquery-ui-1.8.12.custom.js");
                      
        public static readonly string jquery_ui_1_8_12_custom_min_js = Url("jquery-ui-1.8.12.custom.min.js");
        public static readonly string jquery_ui_timepicker_addon_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-timepicker-addon.min.js") ? Url("jquery-ui-timepicker-addon.min.js") : Url("jquery-ui-timepicker-addon.js");
                      
        public static readonly string jquery_ui_timepicker_addon_min_js = Url("jquery-ui-timepicker-addon.min.js");
        public static readonly string jquery_fileupload_ui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-ui.min.js") ? Url("jquery.fileupload-ui.min.js") : Url("jquery.fileupload-ui.js");
                      
        public static readonly string jquery_fileupload_ui_min_js = Url("jquery.fileupload-ui.min.js");
        public static readonly string jquery_fileupload_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload.min.js") ? Url("jquery.fileupload.min.js") : Url("jquery.fileupload.js");
                      
        public static readonly string jquery_fileupload_min_js = Url("jquery.fileupload.min.js");
        public static readonly string jquery_iframe_transport_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.iframe-transport.min.js") ? Url("jquery.iframe-transport.min.js") : Url("jquery.iframe-transport.js");
                      
        public static readonly string jquery_iframe_transport_min_js = Url("jquery.iframe-transport.min.js");
        public static readonly string jquery_jcarousel_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.jcarousel.min.js") ? Url("jquery.jcarousel.min.js") : Url("jquery.jcarousel.js");
                      
        public static readonly string jquery_jcarousel_min_js = Url("jquery.jcarousel.min.js");
        public static readonly string jquery_localdate_fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.localdate-fr.min.js") ? Url("jquery.localdate-fr.min.js") : Url("jquery.localdate-fr.js");
                      
        public static readonly string jquery_localdate_fr_min_js = Url("jquery.localdate-fr.min.js");
        public static readonly string jquery_localdate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.localdate.min.js") ? Url("jquery.localdate.min.js") : Url("jquery.localdate.js");
                      
        public static readonly string jquery_localdate_min_js = Url("jquery.localdate.min.js");
        public static readonly string jquery_placeholder_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.placeholder.min.js") ? Url("jquery.placeholder.min.js") : Url("jquery.placeholder.js");
                      
        public static readonly string jquery_placeholder_min_js = Url("jquery.placeholder.min.js");
        public static readonly string jquery_qtip_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.qtip.min.js") ? Url("jquery.qtip.min.js") : Url("jquery.qtip.js");
                      
        public static readonly string jquery_qtip_min_js = Url("jquery.qtip.min.js");
        public static readonly string jquery_rateit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.rateit.min.js") ? Url("jquery.rateit.min.js") : Url("jquery.rateit.js");
                      
        public static readonly string jquery_rateit_min_js = Url("jquery.rateit.min.js");
        public static readonly string jquery_ui_autocomplete_selectFirst_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.autocomplete.selectFirst.min.js") ? Url("jquery.ui.autocomplete.selectFirst.min.js") : Url("jquery.ui.autocomplete.selectFirst.js");
                      
        public static readonly string jquery_ui_autocomplete_selectFirst_min_js = Url("jquery.ui.autocomplete.selectFirst.min.js");
        public static readonly string jquery_ui_datepicker_en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.datepicker-en.min.js") ? Url("jquery.ui.datepicker-en.min.js") : Url("jquery.ui.datepicker-en.js");
                      
        public static readonly string jquery_ui_datepicker_en_min_js = Url("jquery.ui.datepicker-en.min.js");
        public static readonly string jquery_ui_datepicker_fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.datepicker-fr.min.js") ? Url("jquery.ui.datepicker-fr.min.js") : Url("jquery.ui.datepicker-fr.js");
                      
        public static readonly string jquery_ui_datepicker_fr_min_js = Url("jquery.ui.datepicker-fr.min.js");
        public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
                      
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
                      
        public static readonly string jquery_validate_vsdoc_min_js = Url("jquery.validate-vsdoc.min.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
                      
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
                      
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        public static readonly string main_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/main.min.js") ? Url("main.min.js") : Url("main.js");
                      
        public static readonly string main_min_js = Url("main.min.js");
        public static readonly string MicrosoftAjax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MicrosoftAjax.min.js") ? Url("MicrosoftAjax.min.js") : Url("MicrosoftAjax.js");
                      
        public static readonly string MicrosoftAjax_min_js = Url("MicrosoftAjax.min.js");
        public static readonly string MicrosoftMvcAjax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MicrosoftMvcAjax.min.js") ? Url("MicrosoftMvcAjax.min.js") : Url("MicrosoftMvcAjax.js");
                      
        public static readonly string MicrosoftMvcAjax_min_js = Url("MicrosoftMvcAjax.min.js");
        public static readonly string MicrosoftMvcValidation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MicrosoftMvcValidation.min.js") ? Url("MicrosoftMvcValidation.min.js") : Url("MicrosoftMvcValidation.js");
                      
        public static readonly string MicrosoftMvcValidation_min_js = Url("MicrosoftMvcValidation.min.js");
        public static readonly string modernizr_1_7_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-1.7.min.js") ? Url("modernizr-1.7.min.js") : Url("modernizr-1.7.js");
                      
        public static readonly string modernizr_1_7_min_js = Url("modernizr-1.7.min.js");
        public static readonly string order_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/order.min.js") ? Url("order.min.js") : Url("order.js");
                      
        public static readonly string order_min_js = Url("order.min.js");
        public static readonly string require_jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/require-jquery.min.js") ? Url("require-jquery.min.js") : Url("require-jquery.js");
                      
        public static readonly string require_jquery_min_js = Url("require-jquery.min.js");
        public static readonly string slides_jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slides.jquery.min.js") ? Url("slides.jquery.min.js") : Url("slides.jquery.js");
                      
        public static readonly string slides_jquery_min_js = Url("slides.jquery.min.js");
        public static readonly string tabs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.js") ? Url("tabs.min.js") : Url("tabs.js");
                      
        public static readonly string tabs_min_js = Url("tabs.min.js");
        public static readonly string WorkiAutocomplete_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/WorkiAutocomplete.min.js") ? Url("WorkiAutocomplete.min.js") : Url("WorkiAutocomplete.js");
                      
        public static readonly string WorkiAutocomplete_min_js = Url("WorkiAutocomplete.min.js");
        public static readonly string WorkiMap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/WorkiMap.min.js") ? Url("WorkiMap.min.js") : Url("WorkiMap.js");
                      
        public static readonly string WorkiMap_min_js = Url("WorkiMap.min.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string Admin_css = Url("Admin.css");
        public static readonly string Admin_min_css = Url("Admin.min.css");
        public static readonly string boilerplate_css = Url("boilerplate.css");
        public static readonly string boilerplate_min_css = Url("boilerplate.min.css");
        public static readonly string Booking_css = Url("Booking.css");
        public static readonly string Booking_min_css = Url("Booking.min.css");
        public static readonly string Dashboard_css = Url("Dashboard.css");
        public static readonly string Dashboard_min_css = Url("Dashboard.min.css");
        public static readonly string fullcalendar_css = Url("fullcalendar.css");
        public static readonly string fullcalendar_min_css = Url("fullcalendar.min.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class galleria {
            private const string URLPATH = "~/Content/galleria";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string classic_loader_gif = Url("classic-loader.gif");
            public static readonly string classic_map_png = Url("classic-map.png");
            public static readonly string galleria_1_2_4_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/galleria-1.2.4.min.js") ? Url("galleria-1.2.4.min.js") : Url("galleria-1.2.4.js");
                          
            public static readonly string galleria_1_2_4_min_js = Url("galleria-1.2.4.min.js");
            public static readonly string galleria_classic_css = Url("galleria.classic.css");
            public static readonly string galleria_classic_min_css = Url("galleria.classic.min.css");
            public static readonly string galleria_classic_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/galleria.classic.min.js") ? Url("galleria.classic.min.js") : Url("galleria.classic.js");
                          
            public static readonly string galleria_classic_min_js = Url("galleria.classic.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class icons {
            private const string URLPATH = "~/Content/icons";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string error_gif = Url("error.gif");
            public static readonly string exclamation_gif = Url("exclamation.gif");
            public static readonly string info_gif = Url("info.gif");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class images {
            private const string URLPATH = "~/Content/images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string addPlace_png = Url("addPlace.png");
            public static readonly string arrow_png = Url("arrow.png");
            public static readonly string arrow_red_png = Url("arrow_red.png");
            public static readonly string avatar_png = Url("avatar.png");
            public static readonly string bandeLeft_png = Url("bandeLeft.png");
            public static readonly string bandeMiddle_png = Url("bandeMiddle.png");
            public static readonly string bandeRight_png = Url("bandeRight.png");
            public static readonly string cecilia_png = Url("cecilia.png");
            public static readonly string checked_png = Url("checked.png");
            public static readonly string comm_content_png = Url("comm_content.png");
            public static readonly string cross_png = Url("cross.png");
            public static readonly string csv_import_png = Url("csv-import.png");
            public static readonly string delete_gif = Url("delete.gif");
            public static readonly string drh_png = Url("drh.png");
            public static readonly string favicon_png = Url("favicon.png");
            public static readonly string favorite_png = Url("favorite.png");
            public static readonly string fb_sprite_png = Url("fb_sprite.png");
            public static readonly string flags_png = Url("flags.png");
            public static readonly string followUs_footer_png = Url("followUs_footer.png");
            public static readonly string footer_jpg = Url("footer.jpg");
            public static readonly string footernew_png = Url("footernew.png");
            public static readonly string geoloc_png = Url("geoloc.png");
            public static readonly string homeLogo1_png = Url("homeLogo1.png");
            public static readonly string homeLogo2_png = Url("homeLogo2.png");
            public static readonly string homeLogo3_png = Url("homeLogo3.png");
            public static readonly string homeLogo4_png = Url("homeLogo4.png");
            public static readonly string howitworks_png = Url("howitworks.png");
            public static readonly string iconeMap_png = Url("iconeMap.png");
            public static readonly string iconeMapRed_png = Url("iconeMapRed.png");
            public static readonly string independant_png = Url("independant.png");
            public static readonly string jelly_png = Url("jelly.png");
            public static readonly string jobs_mark_jpeg = Url("jobs_mark.jpeg");
            public static readonly string jobs_steve_jpg = Url("jobs_steve.jpg");
            public static readonly string logo_png = Url("logo.png");
            public static readonly string logo_footer_png = Url("logo_footer.png");
            public static readonly string logo_nobeta_png = Url("logo_nobeta.png");
            public static readonly string logo2_png = Url("logo2.png");
            public static readonly string logoMobile_png = Url("logoMobile.png");
            public static readonly string marc_png = Url("marc.png");
            public static readonly string mediaBanner_png = Url("mediaBanner.png");
            public static readonly string networks_png = Url("networks.png");
            public static readonly string next_horizontal_png = Url("next-horizontal.png");
            public static readonly string next_vertical_png = Url("next-vertical.png");
            public static readonly string nomad_png = Url("nomad.png");
            public static readonly string olivier_png = Url("olivier.png");
            public static readonly string pbar_ani_gif = Url("pbar-ani.gif");
            public static readonly string photo1_jpg = Url("photo1.jpg");
            public static readonly string photo2_jpg = Url("photo2.jpg");
            public static readonly string photo3_jpg = Url("photo3.jpg");
            public static readonly string photo4_jpg = Url("photo4.jpg");
            public static readonly string pinterest_png = Url("pinterest.png");
            public static readonly string prev_horizontal_png = Url("prev-horizontal.png");
            public static readonly string prev_vertical_png = Url("prev-vertical.png");
            public static readonly string profil_social_png = Url("profil_social.png");
            public static readonly string recherche_min_png = Url("recherche-min.png");
            public static readonly string rechercher2_png = Url("rechercher2.png");
            public static readonly string retour_png = Url("retour.png");
            public static readonly string scoop_jpg = Url("scoop.jpg");
            public static readonly string serviceIcones_png = Url("serviceIcones.png");
            public static readonly string signin_facebook_png = Url("signin_facebook.png");
            public static readonly string star_png = Url("star.png");
            public static readonly string startup_png = Url("startup.png");
            public static readonly string student_png = Url("student.png");
            public static readonly string tahir_png = Url("tahir.png");
            public static readonly string tampon_png = Url("tampon.png");
            public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
            public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
            public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
            public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
            public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
            public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
            public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
            public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
            public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
            public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
            public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
            public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
            public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
            public static readonly string users_jpg = Url("users.jpg");
            public static readonly string visitor_jpg = Url("visitor.jpg");
            public static readonly string vu_tele_png = Url("vu-tele.png");
            public static readonly string worker_png = Url("worker.png");
            public static readonly string worki_fb_jpg = Url("worki_fb.jpg");
            public static readonly string worki_footer_png = Url("worki_footer.png");
        }
    
        public static readonly string Index_css = Url("Index.css");
        public static readonly string Index_min_css = Url("Index.min.css");
        public static readonly string jquery_ui_1_8_12_custom_css = Url("jquery-ui-1.8.12.custom.css");
        public static readonly string jquery_ui_1_8_12_custom_min_css = Url("jquery-ui-1.8.12.custom.min.css");
        public static readonly string jquery_ui_timepicker_addon_css = Url("jquery-ui-timepicker-addon.css");
        public static readonly string jquery_ui_timepicker_addon_min_css = Url("jquery-ui-timepicker-addon.min.css");
        public static readonly string jquery_fileupload_ui_css = Url("jquery.fileupload-ui.css");
        public static readonly string jquery_fileupload_ui_min_css = Url("jquery.fileupload-ui.min.css");
        public static readonly string jquery_qtip_css = Url("jquery.qtip.css");
        public static readonly string jquery_qtip_min_css = Url("jquery.qtip.min.css");
        public static readonly string LocalisationDetail_css = Url("LocalisationDetail.css");
        public static readonly string LocalisationDetail_min_css = Url("LocalisationDetail.min.css");
        public static readonly string LocalisationForm_css = Url("LocalisationForm.css");
        public static readonly string LocalisationForm_min_css = Url("LocalisationForm.min.css");
        public static readonly string Mobile_css = Url("Mobile.css");
        public static readonly string Mobile_min_css = Url("Mobile.min.css");
        public static readonly string Press_css = Url("Press.css");
        public static readonly string Press_min_css = Url("Press.min.css");
        public static readonly string Profil_css = Url("Profil.css");
        public static readonly string Profil_min_css = Url("Profil.min.css");
        public static readonly string rateit_css = Url("rateit.css");
        public static readonly string rateit_min_css = Url("rateit.min.css");
        public static readonly string RentalDetail_css = Url("RentalDetail.css");
        public static readonly string RentalDetail_min_css = Url("RentalDetail.min.css");
        public static readonly string RentalForm_css = Url("RentalForm.css");
        public static readonly string RentalForm_min_css = Url("RentalForm.min.css");
        public static readonly string Search_css = Url("Search.css");
        public static readonly string Search_min_css = Url("Search.min.css");
        public static readonly string Site_css = Url("Site.css");
        public static readonly string Site_min_css = Url("Site.min.css");
        public static readonly string skin_css = Url("skin.css");
        public static readonly string skin_min_css = Url("skin.min.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class themes {
            private const string URLPATH = "~/Content/themes";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class @base {
                private const string URLPATH = "~/Content/themes/base";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    private const string URLPATH = "~/Content/themes/base/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                    public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                    public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                    public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                    public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                    public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                    public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                    public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                    public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                    public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                    public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                    public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                    public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                }
            
                public static readonly string jquery_ui_css = Url("jquery-ui.css");
                public static readonly string jquery_ui_min_css = Url("jquery-ui.min.css");
            }
        
        }
    
        public static readonly string Visitor_css = Url("Visitor.css");
        public static readonly string Visitor_min_css = Url("Visitor.min.css");
    }

}

static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;


    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}


namespace Worki.Web.Controllers {
    public partial class AccountController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AccountController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Activate() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Activate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Public() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Public);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.PartialViewResult AjaxDashboard() {
            return new T4MVC_PartialViewResult(Area, Name, ActionNames.AjaxDashboard);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FacebookOAuth() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FacebookOAuth);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AccountController Actions { get { return MVC.Account; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Account";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string LogOn = "logon";
            public readonly string LogOff = "logoff";
            public readonly string Register = "register";
            public readonly string Activate = "activate";
            public readonly string ResetPassword = "reset-password";
            public readonly string Public = "public";
            public readonly string AjaxDashboard = "AjaxDashboard";
            public readonly string FacebookLogOn = "facebook-logon";
            public readonly string FacebookOAuth = "facebook-oauth";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string LogOn = "~/Views/Account/LogOn.cshtml";
            public readonly string @public = "~/Views/Account/public.cshtml";
            public readonly string Register = "~/Views/Account/Register.cshtml";
            public readonly string ResetPassword = "~/Views/Account/ResetPassword.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_AccountController: Worki.Web.Controllers.AccountController {
        public T4MVC_AccountController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult LogOn() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LogOn);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LogOn(Worki.Data.Models.LogOnModel model, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LogOn);
            callInfo.RouteValueDictionary.Add("model", model);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LogOff() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LogOff);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Register() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Register);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Register(Worki.Data.Models.RegisterModel model, string myCaptcha, string attempt) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Register);
            callInfo.RouteValueDictionary.Add("model", model);
            callInfo.RouteValueDictionary.Add("myCaptcha", myCaptcha);
            callInfo.RouteValueDictionary.Add("attempt", attempt);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Activate(string username, string key) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Activate);
            callInfo.RouteValueDictionary.Add("username", username);
            callInfo.RouteValueDictionary.Add("key", key);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ResetPassword() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ResetPassword);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ResetPassword(Worki.Data.Models.ResetPasswordModel model) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ResetPassword);
            callInfo.RouteValueDictionary.Add("model", model);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Public(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Public);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.PartialViewResult AjaxDashboard(int id, int tabId, int p1, int p2) {
            var callInfo = new T4MVC_PartialViewResult(Area, Name, ActionNames.AjaxDashboard);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("tabId", tabId);
            callInfo.RouteValueDictionary.Add("p1", p1);
            callInfo.RouteValueDictionary.Add("p2", p2);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FacebookLogOn() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FacebookLogOn);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FacebookOAuth(string code, string state) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FacebookOAuth);
            callInfo.RouteValueDictionary.Add("code", code);
            callInfo.RouteValueDictionary.Add("state", state);
            return callInfo;
        }

    }
}

namespace Worki.Web.Controllers {
    public partial class BookingController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected BookingController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Create() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Create);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult PayWithPayPal() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.PayWithPayPal);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Details() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Details);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public BookingController Actions { get { return MVC.Booking; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Booking";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Create = "Create";
            public readonly string PayWithPayPal = "paywithpaypal";
            public readonly string Details = "Details";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string Create = "~/Views/Booking/Create.cshtml";
            public readonly string Details = "~/Views/Booking/Details.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_BookingController: Worki.Web.Controllers.BookingController {
        public T4MVC_BookingController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Create(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Create);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create(int id, Worki.Data.Models.MemberBookingFormViewModel formData) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Create);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("formData", formData);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult PayWithPayPal(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.PayWithPayPal);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Details(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Details);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

    }
}

namespace Worki.Web.Controllers {
    public partial class CaptchaImageController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CaptchaImageController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected CaptchaImageController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }


        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CaptchaImageController Actions { get { return MVC.CaptchaImage; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "CaptchaImage";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_CaptchaImageController: Worki.Web.Controllers.CaptchaImageController {
        public T4MVC_CaptchaImageController() : base(Dummy.Instance) { }

    }
}

namespace Worki.Web.Controllers {
    public partial class HomeController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected HomeController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult PeopleSlider() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.PeopleSlider);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ChangeCulture() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ChangeCulture);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public HomeController Actions { get { return MVC.Home; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Home";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string UserMenu = "UserMenu";
            public readonly string Error = "Error";
            public readonly string IndexHead = "IndexHead";
            public readonly string PeopleSlider = "PeopleSlider";
            public readonly string BlogContainer = "BlogContainer";
            public readonly string Index = "index";
            public readonly string Contact = "contact";
            public readonly string Faq = "faq";
            public readonly string Press = "press";
            public readonly string Jobs = "jobs";
            public readonly string About = "about";
            public readonly string Team = "team";
            public readonly string Pricing = "pricing";
            public readonly string CGU = "tos";
            public readonly string Legal = "legal";
            public readonly string HowItWorks = "how-it-works";
            public readonly string OwnerTutorial = "owner-notice";
            public readonly string UserTutorial = "user-notice";
            public readonly string ShareOffice = "share-office";
            public readonly string ChangeCulture = "ChangeCulture";
            public readonly string AddSpace = "add-space";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _AboutMenu = "~/Views/Home/_AboutMenu.cshtml";
            public readonly string _BlogContainer = "~/Views/Home/_BlogContainer.cshtml";
            public readonly string _HowItWorksMenu = "~/Views/Home/_HowItWorksMenu.cshtml";
            public readonly string _IndexHead = "~/Views/Home/_IndexHead.cshtml";
            public readonly string _PeopleSlider = "~/Views/Home/_PeopleSlider.cshtml";
            public readonly string _RentalTab = "~/Views/Home/_RentalTab.cshtml";
            public readonly string About = "~/Views/Home/About.cshtml";
            public readonly string AddSpace = "~/Views/Home/AddSpace.cshtml";
            public readonly string CGU = "~/Views/Home/CGU.cshtml";
            public readonly string Contact = "~/Views/Home/Contact.cshtml";
            public readonly string Faq = "~/Views/Home/Faq.cshtml";
            public readonly string HowItWorks = "~/Views/Home/HowItWorks.cshtml";
            public readonly string Index = "~/Views/Home/Index.cshtml";
            public readonly string Jobs = "~/Views/Home/Jobs.cshtml";
            public readonly string Legal = "~/Views/Home/Legal.cshtml";
            public readonly string OwnerTutorial = "~/Views/Home/OwnerTutorial.cshtml";
            public readonly string Press = "~/Views/Home/Press.cshtml";
            public readonly string Pricing = "~/Views/Home/Pricing.cshtml";
            public readonly string ShareOffice = "~/Views/Home/ShareOffice.cshtml";
            public readonly string Team = "~/Views/Home/Team.cshtml";
            public readonly string UserTutorial = "~/Views/Home/UserTutorial.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_HomeController: Worki.Web.Controllers.HomeController {
        public T4MVC_HomeController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult UserMenu() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.UserMenu);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Error() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Error);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IndexHead() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexHead);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult PeopleSlider(Worki.Infrastructure.Culture culture) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.PeopleSlider);
            callInfo.RouteValueDictionary.Add("culture", culture);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult BlogContainer() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.BlogContainer);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Contact() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Contact);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Contact(Worki.Data.Models.Contact contact, string myCaptcha, string attempt) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Contact);
            callInfo.RouteValueDictionary.Add("contact", contact);
            callInfo.RouteValueDictionary.Add("myCaptcha", myCaptcha);
            callInfo.RouteValueDictionary.Add("attempt", attempt);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Faq() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Faq);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Press() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Press);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Jobs() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Jobs);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult About() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.About);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Team() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Team);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Pricing() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Pricing);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Pricing(Worki.Data.Models.BOAccept model) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Pricing);
            callInfo.RouteValueDictionary.Add("model", model);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CGU() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CGU);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Legal() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Legal);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult HowItWorks() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.HowItWorks);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult OwnerTutorial() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.OwnerTutorial);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult UserTutorial() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.UserTutorial);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ShareOffice() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ShareOffice);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ChangeCulture(string lang) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ChangeCulture);
            callInfo.RouteValueDictionary.Add("lang", lang);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult AddSpace() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.AddSpace);
            return callInfo;
        }

    }
}

namespace Worki.Web.Controllers {
    public partial class LocalisationController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected LocalisationController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Index() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DetailsOld() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DetailsOld);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Details() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Details);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Offers() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Offers);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult BookableOffers() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.BookableOffers);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult AskBooking() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.AskBooking);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.PartialViewResult AskContact() {
            return new T4MVC_PartialViewResult(Area, Name, ActionNames.AskContact);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Edit() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.PartialViewResult PostComment() {
            return new T4MVC_PartialViewResult(Area, Name, ActionNames.PostComment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeleteComment() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DeleteComment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SetOwnership() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.SetOwnership);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FindSimilarLocalisation() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FindSimilarLocalisation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.PartialViewResult SearchForm() {
            return new T4MVC_PartialViewResult(Area, Name, ActionNames.SearchForm);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FullSearchPerTypeSpecial() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchPerTypeSpecial);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FullSearchByTypeSeo() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchByTypeSeo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FullSearchByOfferSeo() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchByOfferSeo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FullSearchResult() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FullSearchResultDetail() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResultDetail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Suggestions() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Suggestions);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public LocalisationController Actions { get { return MVC.Localisation; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Localisation";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Index = "Index";
            public readonly string DetailsOld = "DetailsOld";
            public readonly string Details = "details";
            public readonly string Offers = "offers";
            public readonly string BookableOffers = "bookable-offers";
            public readonly string AskBooking = "AskBooking";
            public readonly string AskContact = "AskContact";
            public readonly string CreateFree = "add-free-place";
            public readonly string CreateNotFree = "add-place";
            public readonly string CreateSharedOffice = "add-shared-office";
            public readonly string Edit = "edit";
            public readonly string PostComment = "PostComment";
            public readonly string DeleteComment = "DeleteComment";
            public readonly string SetOwnership = "set-ownership";
            public readonly string FindSimilarLocalisation = "FindSimilarLocalisation";
            public readonly string GetMainLocalisations = "GetMainLocalisations";
            public readonly string SearchForm = "SearchForm";
            public readonly string FullSearch = "search";
            public readonly string FullSearchPerType = "search-per-type";
            public readonly string FullSearchPerName = "search-per-name";
            public readonly string FullSearchPerTypeSpecial = "search-special";
            public readonly string FullSearchByTypeSeo = "FullSearchByTypeSeo";
            public readonly string FullSearchByOfferSeo = "FullSearchByOfferSeo";
            public readonly string FullSearchResult = "search-results";
            public readonly string FullSearchResultDetail = "search-detail";
            public readonly string Suggestions = "Suggestions";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _AskContact = "~/Views/Localisation/_AskContact.cshtml";
            public readonly string _CommentForm = "~/Views/Localisation/_CommentForm.cshtml";
            public readonly string _CommentFormScript = "~/Views/Localisation/_CommentFormScript.cshtml";
            public readonly string _DirectAccess = "~/Views/Localisation/_DirectAccess.cshtml";
            public readonly string _IconeServices = "~/Views/Localisation/_IconeServices.cshtml";
            public readonly string _LocalisationDetail = "~/Views/Localisation/_LocalisationDetail.cshtml";
            public readonly string _LocalisationForm = "~/Views/Localisation/_LocalisationForm.cshtml";
            public readonly string _LocalisationFormScript = "~/Views/Localisation/_LocalisationFormScript.cshtml";
            public readonly string _LocalisationInfos = "~/Views/Localisation/_LocalisationInfos.cshtml";
            public readonly string _SearchForm = "~/Views/Localisation/_SearchForm.cshtml";
            public readonly string _SearchResultSummary = "~/Views/Localisation/_SearchResultSummary.cshtml";
            public readonly string _SelectSearchScript = "~/Views/Localisation/_SelectSearchScript.cshtml";
            public readonly string _ServicesSelector = "~/Views/Localisation/_ServicesSelector.cshtml";
            public readonly string _Suggestions = "~/Views/Localisation/_Suggestions.cshtml";
            public readonly string AskBooking = "~/Views/Localisation/AskBooking.cshtml";
            public readonly string Edit = "~/Views/Localisation/Edit.cshtml";
            public readonly string FullSearch = "~/Views/Localisation/FullSearch.cshtml";
            public readonly string FullSearchResult = "~/Views/Localisation/FullSearchResult.cshtml";
            public readonly string FullSearchResultDetail = "~/Views/Localisation/FullSearchResultDetail.cshtml";
            public readonly string Index = "~/Views/Localisation/Index.cshtml";
            public readonly string Offers = "~/Views/Localisation/Offers.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_LocalisationController: Worki.Web.Controllers.LocalisationController {
        public T4MVC_LocalisationController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DetailsOld(int id, string name) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DetailsOld);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("name", name);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Details(int id, string name) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Details);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("name", name);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Offers(int id, int type) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Offers);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("type", type);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult BookableOffers(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.BookableOffers);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult AskBooking(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.AskBooking);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult AskBooking(int id, Worki.Data.Models.LocalisationAskBookingFormModel formData) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.AskBooking);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("formData", formData);
            return callInfo;
        }

        public override System.Web.Mvc.PartialViewResult AskContact(int id) {
            var callInfo = new T4MVC_PartialViewResult(Area, Name, ActionNames.AskContact);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateFree() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreateFree);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateNotFree() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreateNotFree);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateSharedOffice() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreateSharedOffice);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int? id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(Worki.Data.Models.LocalisationFormViewModel localisationForm, int? id, string addOffer) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("localisationForm", localisationForm);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("addOffer", addOffer);
            return callInfo;
        }

        public override System.Web.Mvc.PartialViewResult PostComment(int id, Worki.Data.Models.Comment com) {
            var callInfo = new T4MVC_PartialViewResult(Area, Name, ActionNames.PostComment);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("com", com);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteComment(int id, int commentId, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteComment);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("commentId", commentId);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SetOwnership(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.SetOwnership);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FindSimilarLocalisation(float latitude, float longitude) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FindSimilarLocalisation);
            callInfo.RouteValueDictionary.Add("latitude", latitude);
            callInfo.RouteValueDictionary.Add("longitude", longitude);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetMainLocalisations() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetMainLocalisations);
            return callInfo;
        }

        public override System.Web.Mvc.PartialViewResult SearchForm(string searchType, string directAccessType, string place) {
            var callInfo = new T4MVC_PartialViewResult(Area, Name, ActionNames.SearchForm);
            callInfo.RouteValueDictionary.Add("searchType", searchType);
            callInfo.RouteValueDictionary.Add("directAccessType", directAccessType);
            callInfo.RouteValueDictionary.Add("place", place);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearch() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearch);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchPerType() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchPerType);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchPerName() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchPerName);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchPerTypeSpecial(int type) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchPerTypeSpecial);
            callInfo.RouteValueDictionary.Add("type", type);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchByTypeSeo(string type, string place) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchByTypeSeo);
            callInfo.RouteValueDictionary.Add("type", type);
            callInfo.RouteValueDictionary.Add("place", place);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchByOfferSeo(string offerType, string place) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchByOfferSeo);
            callInfo.RouteValueDictionary.Add("offerType", offerType);
            callInfo.RouteValueDictionary.Add("place", place);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearch(Worki.Data.Models.SearchCriteria criteria) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearch);
            callInfo.RouteValueDictionary.Add("criteria", criteria);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchResult(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResult);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchResultDetail(int? index) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResultDetail);
            callInfo.RouteValueDictionary.Add("index", index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Suggestions(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Suggestions);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

    }
}

namespace Worki.Web.Controllers {
    public partial class OfferController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected OfferController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Create() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Create);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Details() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Details);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Edit() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Delete() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Delete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult JoinParty() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.JoinParty);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public OfferController Actions { get { return MVC.Offer; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Offer";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Create = "Create";
            public readonly string Details = "Details";
            public readonly string Edit = "Edit";
            public readonly string Delete = "Delete";
            public readonly string AddOfferPrice = "AddOfferPrice";
            public readonly string JoinParty = "JoinParty";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _CreateOffer = "~/Views/Offer/_CreateOffer.cshtml";
            public readonly string _CreateOfferScript = "~/Views/Offer/_CreateOfferScript.cshtml";
            public readonly string _OfferPrice = "~/Views/Offer/_OfferPrice.cshtml";
            public readonly string _OfferPriceList = "~/Views/Offer/_OfferPriceList.cshtml";
            public readonly string Create = "~/Views/Offer/Create.cshtml";
            public readonly string Delete = "~/Views/Offer/Delete.cshtml";
            public readonly string Details = "~/Views/Offer/Details.cshtml";
            public readonly string JoinParty = "~/Views/Offer/JoinParty.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_OfferController: Worki.Web.Controllers.OfferController {
        public T4MVC_OfferController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Create(int id, int type, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Create);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("type", type);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create(int id, string returnUrl, Worki.Data.Models.OfferFormViewModel offerFormViewModel) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Create);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            callInfo.RouteValueDictionary.Add("offerFormViewModel", offerFormViewModel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Details(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Details);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id, Worki.Data.Models.OfferFormViewModel formData) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("formData", formData);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Delete(int id, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Delete);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Delete(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Delete);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.PartialViewResult AddOfferPrice() {
            var callInfo = new T4MVC_PartialViewResult(Area, Name, ActionNames.AddOfferPrice);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult JoinParty(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.JoinParty);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult JoinParty(int id, Worki.Data.Models.PartyRegisterFormViewModel formData) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.JoinParty);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("formData", formData);
            return callInfo;
        }

    }
}

namespace Worki.Web.Controllers {
    public partial class PaymentController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected PaymentController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }


        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PaymentController Actions { get { return MVC.Payment; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Payment";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string PayPalInstantNotification = "paypalnotification";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_PaymentController: Worki.Web.Controllers.PaymentController {
        public T4MVC_PaymentController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult PayPalInstantNotification() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.PayPalInstantNotification);
            return callInfo;
        }

    }
}

namespace Worki.Web.Controllers {
    public partial class QuotationController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected QuotationController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Create() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Create);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Details() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Details);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult PayWithPayPal() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.PayWithPayPal);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public QuotationController Actions { get { return MVC.Quotation; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Quotation";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Create = "Create";
            public readonly string Details = "Details";
            public readonly string PayWithPayPal = "paywithpaypal";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string Create = "~/Views/Quotation/Create.cshtml";
            public readonly string Details = "~/Views/Quotation/Details.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_QuotationController: Worki.Web.Controllers.QuotationController {
        public T4MVC_QuotationController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Create(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Create);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create(int id, Worki.Data.Models.MemberQuotationFormViewModel formData) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Create);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("formData", formData);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Details(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Details);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult PayWithPayPal(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.PayWithPayPal);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

    }
}

namespace Worki.Web.Controllers {
    public partial class RentalController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RentalController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Detail() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Detail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Edit() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FullSearchResult() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FullSearchResultDetail() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResultDetail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SendMailOwner() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.SendMailOwner);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SendMailFriend() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.SendMailFriend);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SendMail() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.SendMail);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public RentalController Actions { get { return MVC.Rental; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Rental";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Detail = "details";
            public readonly string Create = "add";
            public readonly string Edit = "edit";
            public readonly string AddRentalAccess = "AddRentalAccess";
            public readonly string RentalSearch = "search";
            public readonly string FullSearchResult = "results";
            public readonly string FullSearchResultDetail = "results-detail";
            public readonly string SendMailOwner = "SendMailOwner";
            public readonly string SendMailFriend = "SendMailFriend";
            public readonly string SendMail = "SendMail";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _Details = "~/Views/Rental/_Details.cshtml";
            public readonly string _Rental = "~/Views/Rental/_Rental.cshtml";
            public readonly string _RentalAccess = "~/Views/Rental/_RentalAccess.cshtml";
            public readonly string _RentalSeachFormScript = "~/Views/Rental/_RentalSeachFormScript.cshtml";
            public readonly string details = "~/Views/Rental/details.cshtml";
            public readonly string editer = "~/Views/Rental/editer.cshtml";
            public readonly string recherche = "~/Views/Rental/recherche.cshtml";
            public readonly string resultats_annonces = "~/Views/Rental/resultats-annonces.cshtml";
            public readonly string SendFriend = "~/Views/Rental/SendFriend.cshtml";
            public readonly string SendOwner = "~/Views/Rental/SendOwner.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_RentalController: Worki.Web.Controllers.RentalController {
        public T4MVC_RentalController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Detail(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Detail);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Create() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Create);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(Worki.Data.Models.Rental rental, int? id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("rental", rental);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.PartialViewResult AddRentalAccess() {
            var callInfo = new T4MVC_PartialViewResult(Area, Name, ActionNames.AddRentalAccess);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult RentalSearch() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.RentalSearch);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult RentalSearch(Worki.Data.Models.RentalSearchCriteria rentalSearchCriteria) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.RentalSearch);
            callInfo.RouteValueDictionary.Add("rentalSearchCriteria", rentalSearchCriteria);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchResult(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResult);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchResultDetail(int? index) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResultDetail);
            callInfo.RouteValueDictionary.Add("index", index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SendMailOwner(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.SendMailOwner);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SendMailFriend(int id, string friend) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.SendMailFriend);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("friend", friend);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SendMail(Worki.Data.Models.Contact contact) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.SendMail);
            callInfo.RouteValueDictionary.Add("contact", contact);
            return callInfo;
        }

    }
}

namespace Worki.Web.Controllers {
    public partial class UploadImageController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected UploadImageController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult UploadFiles() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.UploadFiles);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult LoadFiles() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.LoadFiles);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeleteImage() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DeleteImage);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public UploadImageController Actions { get { return MVC.UploadImage; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "UploadImage";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string UploadFiles = "UploadFiles";
            public readonly string LoadFiles = "LoadFiles";
            public readonly string DeleteImage = "DeleteImage";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_UploadImageController: Worki.Web.Controllers.UploadImageController {
        public T4MVC_UploadImageController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult UploadFiles(Worki.Data.Models.ProviderType type) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.UploadFiles);
            callInfo.RouteValueDictionary.Add("type", type);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LoadFiles(int id, Worki.Data.Models.ProviderType type) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LoadFiles);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("type", type);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteImage(string fileName) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteImage);
            callInfo.RouteValueDictionary.Add("fileName", fileName);
            return callInfo;
        }

    }
}

namespace Worki.Web.Controllers {
    public partial class VisitorController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected VisitorController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }


        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public VisitorController Actions { get { return MVC.Visitor; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Visitor";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Index = "Index";
            public readonly string AskForAccountSuccess = "demande-reussie";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _LogOnForm = "~/Views/Visitor/_LogOnForm.cshtml";
            public readonly string _VisitorForm = "~/Views/Visitor/_VisitorForm.cshtml";
            public readonly string demande_reussie = "~/Views/Visitor/demande-reussie.cshtml";
            public readonly string Index = "~/Views/Visitor/Index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_VisitorController: Worki.Web.Controllers.VisitorController {
        public T4MVC_VisitorController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Index(Worki.Data.Models.Visitor visitor) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            callInfo.RouteValueDictionary.Add("visitor", visitor);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult AskForAccountSuccess() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.AskForAccountSuccess);
            return callInfo;
        }

    }
}

namespace T4MVC {
    public class EmailsController {

        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _ViewStart = "~/Views/Emails/_ViewStart.cshtml";
            public readonly string Email = "~/Views/Emails/Email.cshtml";
            public readonly string EmailOwner = "~/Views/Emails/EmailOwner.cshtml";
            public readonly string ListLocMail = "~/Views/Emails/ListLocMail.cshtml";
        }
    }

}

namespace T4MVC {
    public class SharedController {

        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string @__Layout = "~/Views/Shared/__Layout.cshtml";
            public readonly string _AddToFavorite = "~/Views/Shared/_AddToFavorite.cshtml";
            public readonly string _CultureSwitchControl = "~/Views/Shared/_CultureSwitchControl.cshtml";
            public readonly string _DatePickerScript = "~/Views/Shared/_DatePickerScript.cshtml";
            public readonly string _DropDownList = "~/Views/Shared/_DropDownList.cshtml";
            public readonly string _HorizontalMenu = "~/Views/Shared/_HorizontalMenu.cshtml";
            public readonly string _IndexGallery = "~/Views/Shared/_IndexGallery.cshtml";
            public readonly string _IndexGalleryScript = "~/Views/Shared/_IndexGalleryScript.cshtml";
            public readonly string _LocalisationSingleComment = "~/Views/Shared/_LocalisationSingleComment.cshtml";
            public readonly string _LogOnUserControl = "~/Views/Shared/_LogOnUserControl.cshtml";
            public readonly string _Map = "~/Views/Shared/_Map.cshtml";
            public readonly string _MetaDataHeader = "~/Views/Shared/_MetaDataHeader.cshtml";
            public readonly string _PictureContainer = "~/Views/Shared/_PictureContainer.cshtml";
            public readonly string _UploadGalleryScript = "~/Views/Shared/_UploadGalleryScript.cshtml";
            public readonly string _VerticalMenu = "~/Views/Shared/_VerticalMenu.cshtml";
            public readonly string Error = "~/Views/Shared/Error.cshtml";
        }
    }

}

namespace Worki.Web.Areas.Admin.Controllers {
    public partial class ActivityController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ActivityController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult IndexWelcomePeople() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.IndexWelcomePeople);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult OnOffline() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.OnOffline);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DetailWelcomePeople() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DetailWelcomePeople);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult EditWelcomePeople() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.EditWelcomePeople);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeleteWelcomePeople() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DeleteWelcomePeople);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult WelcomePeopleLine() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.WelcomePeopleLine);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult IndexPress() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.IndexPress);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DetailPress() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DetailPress);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult EditPress() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.EditPress);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeletePress() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DeletePress);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActivityController Actions { get { return MVC.Admin.Activity; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Admin";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Activity";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string IndexWelcomePeople = "IndexWelcomePeople";
            public readonly string OnOffline = "OnOffline";
            public readonly string DetailWelcomePeople = "DetailWelcomePeople";
            public readonly string CreateWelcomePeople = "CreateWelcomePeople";
            public readonly string EditWelcomePeople = "EditWelcomePeople";
            public readonly string DeleteWelcomePeople = "DeleteWelcomePeople";
            public readonly string WelcomePeopleLine = "WelcomePeopleLine";
            public readonly string IndexPress = "IndexPress";
            public readonly string DetailPress = "DetailPress";
            public readonly string CreatePress = "CreatePress";
            public readonly string EditPress = "EditPress";
            public readonly string DeletePress = "supprimer-press";
            public readonly string RefreshBlog = "RefreshBlog";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string CreatePress = "~/Areas/Admin/Views/Activity/CreatePress.cshtml";
            public readonly string CreateWelcomePeople = "~/Areas/Admin/Views/Activity/CreateWelcomePeople.cshtml";
            public readonly string DeletePress = "~/Areas/Admin/Views/Activity/DeletePress.cshtml";
            public readonly string DeleteWelcomePeople = "~/Areas/Admin/Views/Activity/DeleteWelcomePeople.cshtml";
            public readonly string DetailPress = "~/Areas/Admin/Views/Activity/DetailPress.cshtml";
            public readonly string DetailWelcomePeople = "~/Areas/Admin/Views/Activity/DetailWelcomePeople.cshtml";
            public readonly string EditPress = "~/Areas/Admin/Views/Activity/EditPress.cshtml";
            public readonly string EditWelcomePeople = "~/Areas/Admin/Views/Activity/EditWelcomePeople.cshtml";
            public readonly string IndexPress = "~/Areas/Admin/Views/Activity/IndexPress.cshtml";
            public readonly string IndexWelcomePeople = "~/Areas/Admin/Views/Activity/IndexWelcomePeople.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_ActivityController: Worki.Web.Areas.Admin.Controllers.ActivityController {
        public T4MVC_ActivityController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult IndexWelcomePeople(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexWelcomePeople);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult OnOffline(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.OnOffline);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DetailWelcomePeople(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DetailWelcomePeople);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateWelcomePeople() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreateWelcomePeople);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateWelcomePeople(Worki.Data.Models.WelcomePeopleFormViewModel formModel) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreateWelcomePeople);
            callInfo.RouteValueDictionary.Add("formModel", formModel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult EditWelcomePeople(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.EditWelcomePeople);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult EditWelcomePeople(int id, Worki.Data.Models.WelcomePeopleFormViewModel formModel) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.EditWelcomePeople);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("formModel", formModel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteWelcomePeople(int id, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteWelcomePeople);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteWelcomePeople(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteWelcomePeople);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult WelcomePeopleLine(System.Web.Mvc.FormCollection collection, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.WelcomePeopleLine);
            callInfo.RouteValueDictionary.Add("collection", collection);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IndexPress(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexPress);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DetailPress(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DetailPress);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreatePress() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreatePress);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreatePress(Worki.Data.Models.Press formModel) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreatePress);
            callInfo.RouteValueDictionary.Add("formModel", formModel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult EditPress(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.EditPress);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult EditPress(int id, Worki.Data.Models.Press formModel) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.EditPress);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("formModel", formModel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeletePress(int id, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeletePress);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeletePress(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeletePress);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult RefreshBlog() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.RefreshBlog);
            return callInfo;
        }

    }
}

namespace Worki.Web.Areas.Admin.Controllers {
    public partial class MemberController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected MemberController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult IndexUser() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.IndexUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult UnlockUser() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.UnlockUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ChangeUserRole() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ChangeUserRole);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeleteUser() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DeleteUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult AdminList() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.AdminList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult IndexOwner() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.IndexOwner);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SetBackoffice() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.SetBackoffice);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Leaderboard() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Leaderboard);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult PendingBO() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.PendingBO);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public MemberController Actions { get { return MVC.Admin.Member; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Admin";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Member";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string IndexUser = "IndexUser";
            public readonly string UnlockUser = "UnlockUser";
            public readonly string ChangeUserRole = "ChangeUserRole";
            public readonly string DeleteUser = "supprimer-utilisateur";
            public readonly string AdminList = "AdminList";
            public readonly string IndexOwner = "IndexOwner";
            public readonly string SetBackoffice = "SetBackoffice";
            public readonly string Leaderboard = "Leaderboard";
            public readonly string PendingBO = "PendingBO";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string Admins = "~/Areas/Admin/Views/Member/Admins.cshtml";
            public readonly string IndexOwner = "~/Areas/Admin/Views/Member/IndexOwner.cshtml";
            public readonly string IndexUser = "~/Areas/Admin/Views/Member/IndexUser.cshtml";
            public readonly string PendingBO = "~/Areas/Admin/Views/Member/PendingBO.cshtml";
            public readonly string supprimer_utilisateur = "~/Areas/Admin/Views/Member/supprimer-utilisateur.cshtml";
            public readonly string UsersLeaderboard = "~/Areas/Admin/Views/Member/UsersLeaderboard.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_MemberController: Worki.Web.Areas.Admin.Controllers.MemberController {
        public T4MVC_MemberController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult IndexUser(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexUser);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult UnlockUser(string username) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.UnlockUser);
            callInfo.RouteValueDictionary.Add("username", username);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ChangeUserRole(int page, int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ChangeUserRole);
            callInfo.RouteValueDictionary.Add("page", page);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteUser(string username, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteUser);
            callInfo.RouteValueDictionary.Add("username", username);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteUser(Worki.Data.Models.User user, string confirmButton, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteUser);
            callInfo.RouteValueDictionary.Add("user", user);
            callInfo.RouteValueDictionary.Add("confirmButton", confirmButton);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult AdminList(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.AdminList);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IndexOwner(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexOwner);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SetBackoffice(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.SetBackoffice);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Leaderboard(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Leaderboard);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult PendingBO(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.PendingBO);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

    }
}

namespace Worki.Web.Areas.Admin.Controllers {
    public partial class ModerationController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ModerationController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Last100Modif() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Last100Modif);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult LastCreate() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.LastCreate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult IndexBooking() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.IndexBooking);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult IndexQuotation() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.IndexQuotation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult IndexImportValidate() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.IndexImportValidate);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ModerationController Actions { get { return MVC.Admin.Moderation; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Admin";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Moderation";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Stat = "Stat";
            public readonly string Last100Modif = "Last100Modif";
            public readonly string LastCreate = "LastCreate";
            public readonly string IndexBooking = "IndexBooking";
            public readonly string IndexQuotation = "IndexQuotation";
            public readonly string IndexImport = "IndexImport";
            public readonly string IndexImportValidate = "IndexImportValidate";
            public readonly string MigrateOfferPrices = "MigrateOfferPrices";
            public readonly string MigrateClients = "MigrateClients";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string IndexBooking = "~/Areas/Admin/Views/Moderation/IndexBooking.cshtml";
            public readonly string IndexImport = "~/Areas/Admin/Views/Moderation/IndexImport.cshtml";
            public readonly string IndexQuotation = "~/Areas/Admin/Views/Moderation/IndexQuotation.cshtml";
            public readonly string LastCreate = "~/Areas/Admin/Views/Moderation/LastCreate.cshtml";
            public readonly string LastModif = "~/Areas/Admin/Views/Moderation/LastModif.cshtml";
            public readonly string Statistic = "~/Areas/Admin/Views/Moderation/Statistic.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_ModerationController: Worki.Web.Areas.Admin.Controllers.ModerationController {
        public T4MVC_ModerationController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Stat() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Stat);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Last100Modif(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Last100Modif);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LastCreate(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LastCreate);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IndexBooking(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexBooking);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IndexQuotation(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexQuotation);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IndexImport() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexImport);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IndexImportValidate(string result) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexImportValidate);
            callInfo.RouteValueDictionary.Add("result", result);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IndexImport(System.Web.Mvc.FormCollection collection) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexImport);
            callInfo.RouteValueDictionary.Add("collection", collection);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult MigrateOfferPrices() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.MigrateOfferPrices);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult MigrateClients() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.MigrateClients);
            return callInfo;
        }

    }
}

namespace Worki.Web.Areas.Admin.Controllers {
    public partial class SheetController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected SheetController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Index() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult OnOffline() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.OnOffline);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Sticker() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Sticker);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult UpdateMainLocalisation() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.UpdateMainLocalisation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeleteLocalisation() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DeleteLocalisation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult UpdateOwner() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.UpdateOwner);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult IndexRental() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.IndexRental);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeleteRental() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DeleteRental);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CoworkingSpace() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.CoworkingSpace);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult BusinessCenter() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.BusinessCenter);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SharedOffice() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.SharedOffice);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SetBackOfficeRole() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.SetBackOfficeRole);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public SheetController Actions { get { return MVC.Admin.Sheet; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Admin";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Sheet";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Index = "Index";
            public readonly string OnOffline = "OnOffline";
            public readonly string Sticker = "Sticker";
            public readonly string UpdateMainLocalisation = "UpdateMainLocalisation";
            public readonly string DeleteLocalisation = "DeleteLocalisation";
            public readonly string UpdateOwner = "UpdateOwner";
            public readonly string IndexRental = "IndexRental";
            public readonly string DeleteRental = "DeleteRental";
            public readonly string CoworkingSpace = "CoworkingSpace";
            public readonly string BusinessCenter = "BusinessCenter";
            public readonly string SharedOffice = "SharedOffice";
            public readonly string SetBackOfficeRole = "SetBackOfficeRole";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string BusinessCenter = "~/Areas/Admin/Views/Sheet/BusinessCenter.cshtml";
            public readonly string CoworkingSpace = "~/Areas/Admin/Views/Sheet/CoworkingSpace.cshtml";
            public readonly string DeleteLocalisation = "~/Areas/Admin/Views/Sheet/DeleteLocalisation.cshtml";
            public readonly string DeleteRental = "~/Areas/Admin/Views/Sheet/DeleteRental.cshtml";
            public readonly string Index = "~/Areas/Admin/Views/Sheet/Index.cshtml";
            public readonly string IndexRental = "~/Areas/Admin/Views/Sheet/IndexRental.cshtml";
            public readonly string SharedOffice = "~/Areas/Admin/Views/Sheet/SharedOffice.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_SheetController: Worki.Web.Areas.Admin.Controllers.SheetController {
        public T4MVC_SheetController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult OnOffline(int id, int page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.OnOffline);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Sticker(int id, int page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Sticker);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult UpdateMainLocalisation(int id, int page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.UpdateMainLocalisation);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteLocalisation(int id, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteLocalisation);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteLocalisation(int id, string confirmButton, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteLocalisation);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("confirmButton", confirmButton);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult UpdateOwner(System.Web.Mvc.FormCollection collection) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.UpdateOwner);
            callInfo.RouteValueDictionary.Add("collection", collection);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IndexRental(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.IndexRental);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteRental(int id, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteRental);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteRental(int id, string confirm, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteRental);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("confirm", confirm);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CoworkingSpace(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CoworkingSpace);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult BusinessCenter(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.BusinessCenter);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SharedOffice(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.SharedOffice);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SetBackOfficeRole(int id, int page, bool b) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.SetBackOfficeRole);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("page", page);
            callInfo.RouteValueDictionary.Add("b", b);
            return callInfo;
        }

    }
}

namespace T4MVC.Admin {
    public class SharedController {

        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _AdminMenu = "~/Areas/Admin/Views/Shared/_AdminMenu.cshtml";
        }
    }

}

namespace Worki.Web.Areas.Api.Controllers {
    public partial class LocalisationController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected LocalisationController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Details() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Details);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Search() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Search);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public LocalisationController Actions { get { return MVC.Api.Localisation; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Api";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Localisation";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Details = "Details";
            public readonly string Search = "Search";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_LocalisationController: Worki.Web.Areas.Api.Controllers.LocalisationController {
        public T4MVC_LocalisationController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Details(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Details);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Search(string place, float latitude, float longitude, int offerType, string types, string features, int maxCount) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Search);
            callInfo.RouteValueDictionary.Add("place", place);
            callInfo.RouteValueDictionary.Add("latitude", latitude);
            callInfo.RouteValueDictionary.Add("longitude", longitude);
            callInfo.RouteValueDictionary.Add("offerType", offerType);
            callInfo.RouteValueDictionary.Add("types", types);
            callInfo.RouteValueDictionary.Add("features", features);
            callInfo.RouteValueDictionary.Add("maxCount", maxCount);
            return callInfo;
        }

    }
}

namespace T4MVC.Api {
    public class SharedController {

        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
        }
    }

}

namespace Worki.Web.Areas.Backoffice.Controllers {
    public partial class ClientController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ClientController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult List() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.List);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult LocalisationList() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.LocalisationList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Add() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Add);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Edit() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Invoices() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Invoices);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetMonthSummary() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.GetMonthSummary);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetInvoice() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.GetInvoice);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CreateInvoice() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.CreateInvoice);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ClientController Actions { get { return MVC.Backoffice.Client; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Backoffice";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Client";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string List = "List";
            public readonly string LocalisationList = "LocalisationList";
            public readonly string Add = "Add";
            public readonly string Edit = "Edit";
            public readonly string Invoices = "Invoices";
            public readonly string GetMonthSummary = "GetMonthSummary";
            public readonly string GetInvoice = "GetInvoice";
            public readonly string CreateInvoice = "CreateInvoice";
            public readonly string AddInvoiceItem = "AddInvoiceItem";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _Clients = "~/Areas/Backoffice/Views/Client/_Clients.cshtml";
            public readonly string _InvoiceItem = "~/Areas/Backoffice/Views/Client/_InvoiceItem.cshtml";
            public readonly string Add = "~/Areas/Backoffice/Views/Client/Add.cshtml";
            public readonly string CreateInvoice = "~/Areas/Backoffice/Views/Client/CreateInvoice.cshtml";
            public readonly string Invoices = "~/Areas/Backoffice/Views/Client/Invoices.cshtml";
            public readonly string List = "~/Areas/Backoffice/Views/Client/List.cshtml";
            public readonly string LocalisationList = "~/Areas/Backoffice/Views/Client/LocalisationList.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_ClientController: Worki.Web.Areas.Backoffice.Controllers.ClientController {
        public T4MVC_ClientController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult List(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.List);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LocalisationList(int id, int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LocalisationList);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Add(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Add);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Add(int id, Worki.Web.Model.LocalisationModel<Worki.Data.Models.ProfilFormViewModel> formData) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Add);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("formData", formData);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id, int clientId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("clientId", clientId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id, int clientId, Worki.Web.Model.LocalisationModel<Worki.Data.Models.ProfilFormViewModel> formData) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("clientId", clientId);
            callInfo.RouteValueDictionary.Add("formData", formData);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Invoices(int id, string date) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Invoices);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("date", date);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetMonthSummary(int id, string date) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetMonthSummary);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("date", date);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetInvoice(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetInvoice);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateInvoice(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreateInvoice);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateInvoice(int id, Worki.Data.Models.InvoiceFormViewModel model) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreateInvoice);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("model", model);
            return callInfo;
        }

        public override System.Web.Mvc.PartialViewResult AddInvoiceItem() {
            var callInfo = new T4MVC_PartialViewResult(Area, Name, ActionNames.AddInvoiceItem);
            return callInfo;
        }

    }
}

namespace Worki.Web.Areas.Backoffice.Controllers {
    public partial class HomeController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected HomeController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Localisations() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Localisations);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Booking() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Booking);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Quotation() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Quotation);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public HomeController Actions { get { return MVC.Backoffice.Home; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Backoffice";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Home";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Index = "Index";
            public readonly string Localisations = "Localisations";
            public readonly string Booking = "Booking";
            public readonly string Quotation = "Quotation";
            public readonly string GetAlertSummary = "GetAlertSummary";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string Booking = "~/Areas/Backoffice/Views/Home/Booking.cshtml";
            public readonly string Index = "~/Areas/Backoffice/Views/Home/Index.cshtml";
            public readonly string Localisations = "~/Areas/Backoffice/Views/Home/Localisations.cshtml";
            public readonly string Quotation = "~/Areas/Backoffice/Views/Home/Quotation.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_HomeController: Worki.Web.Areas.Backoffice.Controllers.HomeController {
        public T4MVC_HomeController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Localisations(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Localisations);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Booking(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Booking);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Quotation(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Quotation);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetAlertSummary() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetAlertSummary);
            return callInfo;
        }

    }
}

namespace Worki.Web.Areas.Backoffice.Controllers {
    public partial class LocalisationController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected LocalisationController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Index() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Edit() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult HorizontalMenu() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.HorizontalMenu);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult VerticalMenu() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.VerticalMenu);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Booking() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Booking);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult BookingDetail() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.BookingDetail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ReadBookingLog() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ReadBookingLog);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ConfirmBooking() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ConfirmBooking);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult RefuseBooking() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.RefuseBooking);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Quotation() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Quotation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult QuotationDetail() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.QuotationDetail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ReadQuotationLog() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ReadQuotationLog);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult QuotationAccepted() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.QuotationAccepted);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult QuotationCancelled() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.QuotationCancelled);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult RefuseQuotation() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.RefuseQuotation);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public LocalisationController Actions { get { return MVC.Backoffice.Localisation; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Backoffice";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Localisation";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Index = "Index";
            public readonly string Edit = "Edit";
            public readonly string HorizontalMenu = "HorizontalMenu";
            public readonly string VerticalMenu = "VerticalMenu";
            public readonly string Booking = "Booking";
            public readonly string BookingDetail = "BookingDetail";
            public readonly string ReadBookingLog = "ReadBookingLog";
            public readonly string ConfirmBooking = "ConfirmBooking";
            public readonly string RefuseBooking = "RefuseBooking";
            public readonly string Quotation = "Quotation";
            public readonly string QuotationDetail = "QuotationDetail";
            public readonly string ReadQuotationLog = "ReadQuotationLog";
            public readonly string QuotationAccepted = "QuotationAccepted";
            public readonly string QuotationCancelled = "QuotationCancelled";
            public readonly string RefuseQuotation = "RefuseQuotation";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _LocalisationMenu = "~/Areas/Backoffice/Views/Localisation/_LocalisationMenu.cshtml";
            public readonly string Booking = "~/Areas/Backoffice/Views/Localisation/Booking.cshtml";
            public readonly string BookingDetail = "~/Areas/Backoffice/Views/Localisation/BookingDetail.cshtml";
            public readonly string ConfirmBooking = "~/Areas/Backoffice/Views/Localisation/ConfirmBooking.cshtml";
            public readonly string Edit = "~/Areas/Backoffice/Views/Localisation/Edit.cshtml";
            public readonly string Index = "~/Areas/Backoffice/Views/Localisation/Index.cshtml";
            public readonly string Quotation = "~/Areas/Backoffice/Views/Localisation/Quotation.cshtml";
            public readonly string QuotationAccepted = "~/Areas/Backoffice/Views/Localisation/QuotationAccepted.cshtml";
            public readonly string QuotationCancelled = "~/Areas/Backoffice/Views/Localisation/QuotationCancelled.cshtml";
            public readonly string QuotationDetail = "~/Areas/Backoffice/Views/Localisation/QuotationDetail.cshtml";
            public readonly string RefuseBooking = "~/Areas/Backoffice/Views/Localisation/RefuseBooking.cshtml";
            public readonly string RefuseQuotation = "~/Areas/Backoffice/Views/Localisation/RefuseQuotation.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_LocalisationController: Worki.Web.Areas.Backoffice.Controllers.LocalisationController {
        public T4MVC_LocalisationController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(Worki.Data.Models.LocalisationFormViewModel localisationForm, int id, string addOffer) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("localisationForm", localisationForm);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("addOffer", addOffer);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult HorizontalMenu(int id, Worki.Data.Models.LocalisationMainMenu selected) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.HorizontalMenu);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("selected", selected);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult VerticalMenu(int id, int selected) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.VerticalMenu);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("selected", selected);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Booking(int id, int page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Booking);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult BookingDetail(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.BookingDetail);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ReadBookingLog(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ReadBookingLog);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ConfirmBooking(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ConfirmBooking);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ConfirmBooking(int id, Worki.Web.Model.LocalisationModel<Worki.Data.Models.MemberBooking> memberBooking) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ConfirmBooking);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("memberBooking", memberBooking);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult RefuseBooking(int id, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.RefuseBooking);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult RefuseBooking(int id, Worki.Web.Model.LocalisationModel<Worki.Web.Model.RefuseBookingModel> formModel, string confirm) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.RefuseBooking);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("formModel", formModel);
            callInfo.RouteValueDictionary.Add("confirm", confirm);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Quotation(int id, int page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Quotation);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult QuotationDetail(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.QuotationDetail);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ReadQuotationLog(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ReadQuotationLog);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult QuotationAccepted(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.QuotationAccepted);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult QuotationCancelled(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.QuotationCancelled);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult RefuseQuotation(int id, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.RefuseQuotation);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult RefuseQuotation(int id, Worki.Web.Model.LocalisationModel<Worki.Web.Model.RefuseQuotationModel> formModel, string confirm) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.RefuseQuotation);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("formModel", formModel);
            callInfo.RouteValueDictionary.Add("confirm", confirm);
            return callInfo;
        }

    }
}

namespace Worki.Web.Areas.Backoffice.Controllers {
    public partial class OfferController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected OfferController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Index() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Edit() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Configure() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Configure);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Prices() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Prices);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult VerticalMenu() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.VerticalMenu);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult OfferDropdown() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.OfferDropdown);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Booking() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Booking);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Quotation() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Quotation);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public OfferController Actions { get { return MVC.Backoffice.Offer; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Backoffice";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Offer";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Index = "Index";
            public readonly string Edit = "Edit";
            public readonly string Configure = "Configure";
            public readonly string Prices = "Prices";
            public readonly string VerticalMenu = "VerticalMenu";
            public readonly string OfferDropdown = "OfferDropdown";
            public readonly string Booking = "Booking";
            public readonly string Quotation = "Quotation";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _OfferDropDown = "~/Areas/Backoffice/Views/Offer/_OfferDropDown.cshtml";
            public readonly string Booking = "~/Areas/Backoffice/Views/Offer/Booking.cshtml";
            public readonly string Configure = "~/Areas/Backoffice/Views/Offer/Configure.cshtml";
            public readonly string Edit = "~/Areas/Backoffice/Views/Offer/Edit.cshtml";
            public readonly string Index = "~/Areas/Backoffice/Views/Offer/Index.cshtml";
            public readonly string Prices = "~/Areas/Backoffice/Views/Offer/Prices.cshtml";
            public readonly string Quotation = "~/Areas/Backoffice/Views/Offer/Quotation.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_OfferController: Worki.Web.Areas.Backoffice.Controllers.OfferController {
        public T4MVC_OfferController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index(int id, int offerId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("offerId", offerId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id, int offerId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("offerId", offerId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id, int offerId, Worki.Data.Models.OfferFormViewModel formData) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("offerId", offerId);
            callInfo.RouteValueDictionary.Add("formData", formData);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Configure(int id, int offerId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Configure);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("offerId", offerId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Configure(int id, Worki.Web.Model.OfferModel<Worki.Data.Models.OfferFormViewModel> formData) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Configure);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("formData", formData);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Prices(int id, int offerId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Prices);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("offerId", offerId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Prices(int id, int offerId, Worki.Web.Model.OfferModel<Worki.Data.Models.OfferFormViewModel> formData) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Prices);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("offerId", offerId);
            callInfo.RouteValueDictionary.Add("formData", formData);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult VerticalMenu(int id, int selected) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.VerticalMenu);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("selected", selected);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult OfferDropdown(int id, int selected) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.OfferDropdown);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("selected", selected);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Booking(int id, int offerId, int page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Booking);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("offerId", offerId);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Quotation(int id, int offerId, int page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Quotation);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("offerId", offerId);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

    }
}

namespace Worki.Web.Areas.Backoffice.Controllers {
    public partial class ProfilController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ProfilController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }


        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ProfilController Actions { get { return MVC.Backoffice.Profil; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Backoffice";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Profil";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string ChangePaymentInformation = "ChangePaymentInformation";
            public readonly string ChangeBillingInformation = "ChangeBillingInformation";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string ChangeBillingInformation = "~/Areas/Backoffice/Views/Profil/ChangeBillingInformation.cshtml";
            public readonly string ChangePaymentInformation = "~/Areas/Backoffice/Views/Profil/ChangePaymentInformation.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_ProfilController: Worki.Web.Areas.Backoffice.Controllers.ProfilController {
        public T4MVC_ProfilController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult ChangePaymentInformation() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ChangePaymentInformation);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ChangePaymentInformation(Worki.Data.Models.PaymentInfoModel model) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ChangePaymentInformation);
            callInfo.RouteValueDictionary.Add("model", model);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ChangeBillingInformation() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ChangeBillingInformation);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ChangeBillingInformation(Worki.Data.Models.Member model) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ChangeBillingInformation);
            callInfo.RouteValueDictionary.Add("model", model);
            return callInfo;
        }

    }
}

namespace Worki.Web.Areas.Backoffice.Controllers {
    public partial class ScheduleController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ScheduleController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult OfferSchedule() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.OfferSchedule);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult LocalisationSchedule() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.LocalisationSchedule);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult AllBookingEvents() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.AllBookingEvents);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult BookingEvents() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.BookingEvents);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DropEvent() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DropEvent);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ResizeEvent() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ResizeEvent);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.PartialViewResult BookingSummary() {
            return new T4MVC_PartialViewResult(Area, Name, ActionNames.BookingSummary);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CreateEvent() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.CreateEvent);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CreateAndEditEvent() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.CreateAndEditEvent);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CreateBooking() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.CreateBooking);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult EditBooking() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.EditBooking);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeleteBooking() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.DeleteBooking);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ScheduleController Actions { get { return MVC.Backoffice.Schedule; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Backoffice";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Schedule";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string OfferSchedule = "OfferSchedule";
            public readonly string LocalisationSchedule = "LocalisationSchedule";
            public readonly string AllBookingEvents = "AllBookingEvents";
            public readonly string BookingEvents = "BookingEvents";
            public readonly string DropEvent = "DropEvent";
            public readonly string ResizeEvent = "ResizeEvent";
            public readonly string BookingSummary = "BookingSummary";
            public readonly string CreateEvent = "CreateEvent";
            public readonly string CreateAndEditEvent = "CreateAndEditEvent";
            public readonly string CreateBooking = "CreateBooking";
            public readonly string EditBooking = "EditBooking";
            public readonly string DeleteBooking = "DeleteBooking";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _BookingSummary = "~/Areas/Backoffice/Views/Schedule/_BookingSummary.cshtml";
            public readonly string _CreateBooking = "~/Areas/Backoffice/Views/Schedule/_CreateBooking.cshtml";
            public readonly string _ScheduleScript = "~/Areas/Backoffice/Views/Schedule/_ScheduleScript.cshtml";
            public readonly string CreateBooking = "~/Areas/Backoffice/Views/Schedule/CreateBooking.cshtml";
            public readonly string DeleteBooking = "~/Areas/Backoffice/Views/Schedule/DeleteBooking.cshtml";
            public readonly string LocalisationSchedule = "~/Areas/Backoffice/Views/Schedule/LocalisationSchedule.cshtml";
            public readonly string OfferSchedule = "~/Areas/Backoffice/Views/Schedule/OfferSchedule.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_ScheduleController: Worki.Web.Areas.Backoffice.Controllers.ScheduleController {
        public T4MVC_ScheduleController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult OfferSchedule(int id, int offerId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.OfferSchedule);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("offerId", offerId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LocalisationSchedule(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LocalisationSchedule);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult AllBookingEvents(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.AllBookingEvents);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult BookingEvents(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.BookingEvents);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DropEvent(int id, int dayDelta, int minuteDelta) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DropEvent);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("dayDelta", dayDelta);
            callInfo.RouteValueDictionary.Add("minuteDelta", minuteDelta);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ResizeEvent(int id, int dayDelta, int minuteDelta) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ResizeEvent);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("dayDelta", dayDelta);
            callInfo.RouteValueDictionary.Add("minuteDelta", minuteDelta);
            return callInfo;
        }

        public override System.Web.Mvc.PartialViewResult BookingSummary(int id) {
            var callInfo = new T4MVC_PartialViewResult(Area, Name, ActionNames.BookingSummary);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateEvent(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreateEvent);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateEvent(Worki.Data.Models.CreateBookingModel createBookingModel) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreateEvent);
            callInfo.RouteValueDictionary.Add("createBookingModel", createBookingModel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateAndEditEvent(Worki.Data.Models.CreateBookingModel createBookingModel) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreateAndEditEvent);
            callInfo.RouteValueDictionary.Add("createBookingModel", createBookingModel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateBooking(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreateBooking);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateBooking(int id, Worki.Web.Model.LocalisationModel<Worki.Data.Models.CreateBookingModel> createBookingModel) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreateBooking);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("createBookingModel", createBookingModel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult EditBooking(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.EditBooking);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult EditBooking(int id, Worki.Web.Model.LocalisationModel<Worki.Data.Models.CreateBookingModel> createBookingModel) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.EditBooking);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("createBookingModel", createBookingModel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteBooking(int id, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteBooking);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteBooking(int id, Worki.Web.Model.LocalisationModel<Worki.Web.Model.RefuseBookingModel> formModel, string confirm) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.DeleteBooking);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("formModel", formModel);
            callInfo.RouteValueDictionary.Add("confirm", confirm);
            return callInfo;
        }

    }
}

namespace T4MVC.Backoffice {
    public class SharedController {

        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _AlertSummary = "~/Areas/Backoffice/Views/Shared/_AlertSummary.cshtml";
            public readonly string _BackofficeMenu = "~/Areas/Backoffice/Views/Shared/_BackofficeMenu.cshtml";
            public readonly string _BookingItem = "~/Areas/Backoffice/Views/Shared/_BookingItem.cshtml";
            public readonly string _BookingList = "~/Areas/Backoffice/Views/Shared/_BookingList.cshtml";
            public readonly string _LinkVerticalMenu = "~/Areas/Backoffice/Views/Shared/_LinkVerticalMenu.cshtml";
            public readonly string _QuotationItem = "~/Areas/Backoffice/Views/Shared/_QuotationItem.cshtml";
            public readonly string _QuotationList = "~/Areas/Backoffice/Views/Shared/_QuotationList.cshtml";
        }
    }

}

namespace Worki.Web.Areas.Dashboard.Controllers {
    public partial class CommunityController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected CommunityController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Places() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Places);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FavoritePlaces() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FavoritePlaces);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult AddedPlaces() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.AddedPlaces);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CommentedPlaces() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.CommentedPlaces);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CommunityController Actions { get { return MVC.Dashboard.Community; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Dashboard";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Community";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Places = "Places";
            public readonly string FavoritePlaces = "FavoritePlaces";
            public readonly string AddedPlaces = "AddedPlaces";
            public readonly string CommentedPlaces = "CommentedPlaces";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string AddedPlaces = "~/Areas/Dashboard/Views/Community/AddedPlaces.cshtml";
            public readonly string CommentedPlaces = "~/Areas/Dashboard/Views/Community/CommentedPlaces.cshtml";
            public readonly string FavoritePlaces = "~/Areas/Dashboard/Views/Community/FavoritePlaces.cshtml";
            public readonly string Places = "~/Areas/Dashboard/Views/Community/Places.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_CommunityController: Worki.Web.Areas.Dashboard.Controllers.CommunityController {
        public T4MVC_CommunityController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Places(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Places);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FavoritePlaces(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FavoritePlaces);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult AddedPlaces(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.AddedPlaces);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CommentedPlaces(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CommentedPlaces);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

    }
}

namespace Worki.Web.Areas.Dashboard.Controllers {
    public partial class HistoricController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected HistoricController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Booking() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Booking);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Quotation() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Quotation);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public HistoricController Actions { get { return MVC.Dashboard.Historic; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Dashboard";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Historic";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Booking = "Booking";
            public readonly string Quotation = "Quotation";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string Booking = "~/Areas/Dashboard/Views/Historic/Booking.cshtml";
            public readonly string Quotation = "~/Areas/Dashboard/Views/Historic/Quotation.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_HistoricController: Worki.Web.Areas.Dashboard.Controllers.HistoricController {
        public T4MVC_HistoricController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Booking(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Booking);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Quotation(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Quotation);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

    }
}

namespace Worki.Web.Areas.Dashboard.Controllers {
    public partial class HomeController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected HomeController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Booking() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Booking);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ReadBookingLog() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ReadBookingLog);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult BookingDetail() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.BookingDetail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult BookingPaymentAccepted() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.BookingPaymentAccepted);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult BookingPaymentCancelled() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.BookingPaymentCancelled);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CancelBooking() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.CancelBooking);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Quotation() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Quotation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ReadQuotationLog() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ReadQuotationLog);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult QuotationDetail() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.QuotationDetail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CancelQuotation() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.CancelQuotation);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public HomeController Actions { get { return MVC.Dashboard.Home; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Dashboard";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Home";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Index = "Index";
            public readonly string GetAlertSummary = "GetAlertSummary";
            public readonly string Booking = "Booking";
            public readonly string ReadBookingLog = "ReadBookingLog";
            public readonly string BookingDetail = "BookingDetail";
            public readonly string BookingPaymentAccepted = "BookingPaymentAccepted";
            public readonly string BookingPaymentCancelled = "BookingPaymentCancelled";
            public readonly string CancelBooking = "CancelBooking";
            public readonly string Quotation = "Quotation";
            public readonly string ReadQuotationLog = "ReadQuotationLog";
            public readonly string QuotationDetail = "QuotationDetail";
            public readonly string CancelQuotation = "CancelQuotation";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string Booking = "~/Areas/Dashboard/Views/Home/Booking.cshtml";
            public readonly string BookingDetail = "~/Areas/Dashboard/Views/Home/BookingDetail.cshtml";
            public readonly string BookingPaymentAccepted = "~/Areas/Dashboard/Views/Home/BookingPaymentAccepted.cshtml";
            public readonly string BookingPaymentCancelled = "~/Areas/Dashboard/Views/Home/BookingPaymentCancelled.cshtml";
            public readonly string Index = "~/Areas/Dashboard/Views/Home/Index.cshtml";
            public readonly string Quotation = "~/Areas/Dashboard/Views/Home/Quotation.cshtml";
            public readonly string QuotationDetail = "~/Areas/Dashboard/Views/Home/QuotationDetail.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_HomeController: Worki.Web.Areas.Dashboard.Controllers.HomeController {
        public T4MVC_HomeController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetAlertSummary() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetAlertSummary);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Booking(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Booking);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ReadBookingLog(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ReadBookingLog);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult BookingDetail(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.BookingDetail);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult BookingPaymentAccepted(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.BookingPaymentAccepted);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult BookingPaymentCancelled(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.BookingPaymentCancelled);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CancelBooking(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CancelBooking);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Quotation(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Quotation);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ReadQuotationLog(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ReadQuotationLog);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult QuotationDetail(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.QuotationDetail);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CancelQuotation(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CancelQuotation);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

    }
}

namespace Worki.Web.Areas.Dashboard.Controllers {
    public partial class ProfilController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ProfilController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult AddToFavorite() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.AddToFavorite);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.PartialViewResult RemoveFromFavorite() {
            return new T4MVC_PartialViewResult(Area, Name, ActionNames.RemoveFromFavorite);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ProfilController Actions { get { return MVC.Dashboard.Profil; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Dashboard";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Profil";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Edit = "editer";
            public readonly string AddToFavorite = "AddToFavorite";
            public readonly string RemoveFromFavorite = "RemoveFromFavorite";
            public readonly string ChangePassword = "changer-mdp";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _ProfilSummary = "~/Areas/Dashboard/Views/Profil/_ProfilSummary.cshtml";
            public readonly string changer_mdp = "~/Areas/Dashboard/Views/Profil/changer-mdp.cshtml";
            public readonly string editer = "~/Areas/Dashboard/Views/Profil/editer.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_ProfilController: Worki.Web.Areas.Dashboard.Controllers.ProfilController {
        public T4MVC_ProfilController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Edit() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(Worki.Data.Models.Member member) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("member", member);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult AddToFavorite(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.AddToFavorite);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.PartialViewResult RemoveFromFavorite(int id) {
            var callInfo = new T4MVC_PartialViewResult(Area, Name, ActionNames.RemoveFromFavorite);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ChangePassword() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ChangePassword);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ChangePassword(Worki.Data.Models.ChangePasswordModel model) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ChangePassword);
            callInfo.RouteValueDictionary.Add("model", model);
            return callInfo;
        }

    }
}

namespace T4MVC.Dashboard {
    public class SharedController {

        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _BookingItem = "~/Areas/Dashboard/Views/Shared/_BookingItem.cshtml";
            public readonly string _BookingList = "~/Areas/Dashboard/Views/Shared/_BookingList.cshtml";
            public readonly string _CommentTab = "~/Areas/Dashboard/Views/Shared/_CommentTab.cshtml";
            public readonly string _DashboardMenu = "~/Areas/Dashboard/Views/Shared/_DashboardMenu.cshtml";
            public readonly string _LocalisationItem = "~/Areas/Dashboard/Views/Shared/_LocalisationItem.cshtml";
            public readonly string _LocalisationTab = "~/Areas/Dashboard/Views/Shared/_LocalisationTab.cshtml";
            public readonly string _NewsContent = "~/Areas/Dashboard/Views/Shared/_NewsContent.cshtml";
            public readonly string _QuotationItem = "~/Areas/Dashboard/Views/Shared/_QuotationItem.cshtml";
            public readonly string _QuotationList = "~/Areas/Dashboard/Views/Shared/_QuotationList.cshtml";
            public readonly string _SocialLinks = "~/Areas/Dashboard/Views/Shared/_SocialLinks.cshtml";
            public readonly string _SummaryContent = "~/Areas/Dashboard/Views/Shared/_SummaryContent.cshtml";
        }
    }

}

namespace Worki.Web.Areas.Mobile.Controllers {
    public partial class AccountController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AccountController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult LogOn() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.LogOn);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AccountController Actions { get { return MVC.Mobile.Account; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Mobile";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Account";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string LogOn = "connexion";
            public readonly string LogOff = "deconnexion";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string connexion = "~/Areas/Mobile/Views/Account/connexion.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_AccountController: Worki.Web.Areas.Mobile.Controllers.AccountController {
        public T4MVC_AccountController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult LogOn(Worki.Data.Models.LogOnModel model, string returnUrl) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LogOn);
            callInfo.RouteValueDictionary.Add("model", model);
            callInfo.RouteValueDictionary.Add("returnUrl", returnUrl);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LogOff() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LogOff);
            return callInfo;
        }

    }
}

namespace Worki.Web.Areas.Mobile.Controllers {
    public partial class HomeController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public HomeController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected HomeController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }


        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public HomeController Actions { get { return MVC.Mobile.Home; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Mobile";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Home";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Index = "index";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string index = "~/Areas/Mobile/Views/Home/index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_HomeController: Worki.Web.Areas.Mobile.Controllers.HomeController {
        public T4MVC_HomeController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            return callInfo;
        }

    }
}

namespace Worki.Web.Areas.Mobile.Controllers {
    public partial class LocalisationController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected LocalisationController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FullSearch() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FullSearch);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FullSearchResult() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult FullSearchResultDetail() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResultDetail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult LocalisationDetail() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.LocalisationDetail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.PartialViewResult LocalisationDescription() {
            return new T4MVC_PartialViewResult(Area, Name, ActionNames.LocalisationDescription);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public LocalisationController Actions { get { return MVC.Mobile.Localisation; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Mobile";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Localisation";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string FullSearch = "search";
            public readonly string FullSearchResult = "search-results";
            public readonly string FullSearchResultDetail = "search-detail";
            public readonly string LocalisationDetail = "LocalisationDetail";
            public readonly string LocalisationDescription = "LocalisationDescription";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _CommentSummary = "~/Areas/Mobile/Views/Localisation/_CommentSummary.cshtml";
            public readonly string _LocalisationDetail = "~/Areas/Mobile/Views/Localisation/_LocalisationDetail.cshtml";
            public readonly string _SearchResultSummary = "~/Areas/Mobile/Views/Localisation/_SearchResultSummary.cshtml";
            public readonly string FullSearchResult = "~/Areas/Mobile/Views/Localisation/FullSearchResult.cshtml";
            public readonly string FullSearchResultDetail = "~/Areas/Mobile/Views/Localisation/FullSearchResultDetail.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_LocalisationController: Worki.Web.Areas.Mobile.Controllers.LocalisationController {
        public T4MVC_LocalisationController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult FullSearch(Worki.Data.Models.SearchCriteria criteria) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearch);
            callInfo.RouteValueDictionary.Add("criteria", criteria);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchResult(int? page) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResult);
            callInfo.RouteValueDictionary.Add("page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FullSearchResultDetail(int? index) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.FullSearchResultDetail);
            callInfo.RouteValueDictionary.Add("index", index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult LocalisationDetail(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.LocalisationDetail);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.PartialViewResult LocalisationDescription(int id) {
            var callInfo = new T4MVC_PartialViewResult(Area, Name, ActionNames.LocalisationDescription);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

    }
}

namespace T4MVC.Mobile {
    public class SharedController {

        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string @__Layout = "~/Areas/Mobile/Views/Shared/__Layout.cshtml";
            public readonly string _Connexion = "~/Areas/Mobile/Views/Shared/_Connexion.cshtml";
        }
    }

}



	

#endregion T4MVC
#pragma warning restore 1591


