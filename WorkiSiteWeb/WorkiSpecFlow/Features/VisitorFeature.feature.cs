// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.6.1.0
//      SpecFlow Generator Version:1.6.0.0
//      Runtime Version:4.0.30319.235
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace WorkiSpecFlow.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.6.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Page Visitor")]
    public partial class PageVisitorFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "VisitorFeature.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Page Visitor", "In order to search a working place\r\nAs a user\r\nI want to be able to view the list" +
                    " of localisations", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Connexion Erreur")]
        [NUnit.Framework.CategoryAttribute("visitor")]
        public virtual void ConnexionErreur()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Connexion Erreur", new string[] {
                        "visitor"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("Je vais dans la page Visitor");
#line 9
 testRunner.When("Je clique sur connexion");
#line 10
 testRunner.Then("Il doit y avoir des messages d\'erreur");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Connexion Errone")]
        [NUnit.Framework.CategoryAttribute("visitor")]
        public virtual void ConnexionErrone()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Connexion Errone", new string[] {
                        "visitor"});
#line 13
this.ScenarioSetup(scenarioInfo);
#line 14
 testRunner.Given("Je vais dans la page Visitor");
#line 15
  testRunner.And("Je rentre mon identifiant");
#line 16
  testRunner.And("je rentre un mauvais mot de passe");
#line 17
 testRunner.When("Je clique sur connexion");
#line 18
 testRunner.Then("Il doit y avoir des messages d\'erreur");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Connexion Admin")]
        [NUnit.Framework.CategoryAttribute("visitor")]
        public virtual void ConnexionAdmin()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Connexion Admin", new string[] {
                        "visitor"});
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
 testRunner.Given("Je vais dans la page Visitor");
#line 23
  testRunner.And("Je rentre mon identifiant");
#line 24
  testRunner.And("Je rentre mon mot de passe");
#line 25
 testRunner.When("Je clique sur connexion");
#line 26
 testRunner.Then("Je dois arriver sur la page d\'accueil");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Mot de passe oublié")]
        [NUnit.Framework.CategoryAttribute("visitor")]
        public virtual void MotDePasseOublie()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Mot de passe oublié", new string[] {
                        "visitor"});
#line 29
this.ScenarioSetup(scenarioInfo);
#line 30
 testRunner.Given("Je vais dans la page Visitor");
#line 31
 testRunner.When("Je clique sur mot de passe oublié");
#line 32
 testRunner.Then("Je dois arriver sur la page de reset");
#line 33
  testRunner.And("Je dois avoir le message envoie du nouveau mot de passe");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Demande d\'inscription Erreur")]
        [NUnit.Framework.CategoryAttribute("visitor")]
        public virtual void DemandeDInscriptionErreur()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demande d\'inscription Erreur", new string[] {
                        "visitor"});
#line 36
this.ScenarioSetup(scenarioInfo);
#line 37
 testRunner.Given("Je vais dans la page Visitor");
#line 38
 testRunner.When("Je clique sur Go");
#line 39
 testRunner.Then("Il doit y avoir des messages d\'erreur");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Demande d\'inscription")]
        [NUnit.Framework.CategoryAttribute("visitor")]
        public virtual void DemandeDInscription()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demande d\'inscription", new string[] {
                        "visitor"});
#line 43
this.ScenarioSetup(scenarioInfo);
#line 44
 testRunner.Given("Je vais dans la page Visitor");
#line 45
  testRunner.And("je rentre une adresse valide");
#line 46
 testRunner.When("Je clique sur Go");
#line 47
 testRunner.Then("Je dois arriver sur demande réussi");
#line 48
  testRunner.And("Le bon texte de demande inscription réussi doit être présent");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
