// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.6.1.0
//      SpecFlow Generator Version:1.6.0.0
//      Runtime Version:4.0.30319.488
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace Worki.SpecFlow.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.6.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Recherche Lieu")]
    public partial class RechercheLieuFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SearchFeature.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Recherche Lieu", "In order to search a working place\r\nAs a user\r\nI want to be able to view the list" +
                    " of localisations", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Recherche Simple")]
        [NUnit.Framework.CategoryAttribute("search")]
        public virtual void RechercheSimple()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Recherche Simple", new string[] {
                        "search"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("Je vais dans la page Recherche");
#line 9
  testRunner.And("Je tappe Paris dans la zone de recherche");
#line 10
 testRunner.When("Je clique sur rechercher");
#line 11
 testRunner.Then("Il doit y avoir plus de 1 resultats");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Recherche Detailer")]
        [NUnit.Framework.CategoryAttribute("search")]
        public virtual void RechercheDetailer()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Recherche Detailer", new string[] {
                        "search"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("Je vais dans la page Recherche");
#line 16
  testRunner.And("Je tappe Paris dans la zone de recherche");
#line 17
  testRunner.And("Je selectionne Salon d\'affaire");
#line 18
 testRunner.When("Je clique sur rechercher");
#line 19
 testRunner.Then("Il doit y avoir plus de 1 resultats");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Recherche par nom")]
        [NUnit.Framework.CategoryAttribute("search")]
        public virtual void RechercheParNom()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Recherche par nom", new string[] {
                        "search"});
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
 testRunner.Given("Je vais dans la page Recherche par nom");
#line 24
  testRunner.And("Je tappe test dans la barre de recherche");
#line 25
 testRunner.When("Je clique sur rechercher");
#line 26
 testRunner.Then("Tout les résultats doivent contenir le mot cherché");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Description Etudiant")]
        [NUnit.Framework.CategoryAttribute("search")]
        public virtual void DescriptionEtudiant()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Description Etudiant", new string[] {
                        "search"});
#line 29
this.ScenarioSetup(scenarioInfo);
#line 30
 testRunner.Given("Je vais dans la page Recherche");
#line 31
 testRunner.When("Je clique sur Etudiant");
#line 32
 testRunner.Then("Je dois avoir la description Etudiant");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Description Nomade")]
        [NUnit.Framework.CategoryAttribute("search")]
        public virtual void DescriptionNomade()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Description Nomade", new string[] {
                        "search"});
#line 35
this.ScenarioSetup(scenarioInfo);
#line 36
 testRunner.Given("Je vais dans la page Recherche");
#line 37
 testRunner.When("Je clique sur Nomade");
#line 38
 testRunner.Then("Je dois avoir la description Nomade");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Description Teletravailleur")]
        [NUnit.Framework.CategoryAttribute("search")]
        public virtual void DescriptionTeletravailleur()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Description Teletravailleur", new string[] {
                        "search"});
#line 41
this.ScenarioSetup(scenarioInfo);
#line 42
 testRunner.Given("Je vais dans la page Recherche");
#line 43
 testRunner.When("Je clique sur Teletravailleur");
#line 44
 testRunner.Then("Je dois avoir la description Teletravailleur");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Description Entrepreneur")]
        [NUnit.Framework.CategoryAttribute("search")]
        public virtual void DescriptionEntrepreneur()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Description Entrepreneur", new string[] {
                        "search"});
#line 47
this.ScenarioSetup(scenarioInfo);
#line 48
 testRunner.Given("Je vais dans la page Recherche");
#line 49
 testRunner.When("Je clique sur Entrepreneur");
#line 50
 testRunner.Then("Je dois avoir la description Entrepreneur");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Description GrandCompte")]
        [NUnit.Framework.CategoryAttribute("search")]
        public virtual void DescriptionGrandCompte()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Description GrandCompte", new string[] {
                        "search"});
#line 53
this.ScenarioSetup(scenarioInfo);
#line 54
 testRunner.Given("Je vais dans la page Recherche");
#line 55
 testRunner.When("Je clique sur GrandCompte");
#line 56
 testRunner.Then("Je dois avoir la description GrandCompte");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Description Indépendant")]
        [NUnit.Framework.CategoryAttribute("search")]
        public virtual void DescriptionIndependant()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Description Indépendant", new string[] {
                        "search"});
#line 59
this.ScenarioSetup(scenarioInfo);
#line 60
 testRunner.Given("Je vais dans la page Recherche");
#line 61
 testRunner.When("Je clique sur Indépendant");
#line 62
 testRunner.Then("Je dois avoir la description Indépendant");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Présence de lieux A la Une")]
        [NUnit.Framework.CategoryAttribute("search")]
        public virtual void PresenceDeLieuxALaUne()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Présence de lieux A la Une", new string[] {
                        "search"});
#line 65
this.ScenarioSetup(scenarioInfo);
#line 66
 testRunner.Given("Je vais dans la page d\'acceuil");
#line 67
 testRunner.When("Je clique sur Plus de critère");
#line 68
 testRunner.Then("Il doit y avoir des lieux dans le bloc A la Une");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Faire Défiler les pages de résultats")]
        [NUnit.Framework.CategoryAttribute("search")]
        public virtual void FaireDefilerLesPagesDeResultats()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Faire Défiler les pages de résultats", new string[] {
                        "search"});
#line 71
this.ScenarioSetup(scenarioInfo);
#line 72
 testRunner.Given("Je vais dans la page d\'acceuil");
#line 73
  testRunner.And("Je tappe Paris dans la zone de recherche");
#line 74
 testRunner.When("Je clique sur rechercher");
#line 75
  testRunner.And("Je fais défiler les pages");
#line 76
 testRunner.Then("Je dois avoir parcouru les pages");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
